{"version":3,"sources":["../src/index.js"],"names":["WILDCARD","DEFAULT_WILDCARD","tag","quality","isType","data","type","Object","prototype","toString","call","isObject","v","isString","tagEquality","a","b","toLowerCase","prefixInTag","range","indexOf","isWild","isWildTag","qtyMatch","gteQty","lengthSort","length","rangeSort","value","filterTags","rangeTags","index","array","languagesTagsComparator","splitRangeTags","split","languagePriorityList","extractTag","rangeTag","ensureParsedValue","extractQuality","q","parseFloat","matches","match","undefined","join","map","filter","sort","basicFilter","languageTags","Array","isArray","list","push","extendedFilter","extendedTagMatch","rangeSubTags","languageSubTags","rIndex","lIndex","lookup","defaultValue","arguments","Error","sortedLangTags","matchTag","langTags","directTagMatch","priorityList","directMatch"],"mappings":"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","sourcesContent":["/**\n * accept-language-negotiator\n */\nconst WILDCARD = '*';\nconst DEFAULT_WILDCARD = [{ tag: WILDCARD, quality: 1 }];\nconst isType = (data, type) => Object.prototype.toString.call(data) === `[object ${type}]`;\nconst isObject = v => isType(v, 'Object');\nconst isString = v => isType(v, 'String');\nconst tagEquality = (a, b) => a.toLowerCase() === b.toLowerCase();\nconst prefixInTag = (range, tag) => tag.toLowerCase().indexOf(`${range}-`.toLowerCase()) !== -1;\nconst isWild = v => v === WILDCARD;\nconst isWildTag = v => v.tag === WILDCARD;\nconst qtyMatch = (a, b) => a.quality === b.quality;\nconst gteQty = (a, b) => a.quality > b.quality;\n\n/**\n * Sort by length of given item\n * @param {*} a language item\n * @param {*} b language item\n * @returns {Number}\n */\nconst lengthSort = (a, b) => {\n  if (a.length < b.length) return 1;\n  if (a.length > b.length) return -1;\n  return 0;\n};\n\n/**\n * Run through range equalities and sort\n * @param {Object} a language item\n * @param {Object} b language item\n * @returns {Number}\n */\nconst rangeSort = (a, b) => {\n  const value = ~~(isWildTag(b) || gteQty(b, a) || (!isWildTag(a) && qtyMatch(a, b) && lengthSort(a.tag, b.tag)));\n  if (value > 0) return 1;\n  if (value === 0) return -1;\n  return 0;\n};\n\n/**\n * Filters range tags that matches in the languagesTagsComparator\n *\n * @param {Array} rangeTags Range tags to work through\n * @param {Number} index Current index of rangeTags\n * @param {Array} array Filter tags are appended to array\n * @param {Function} languagesTagsComparator Compares range tags to language tags\n * @param {Boolean} splitRangeTags Whether to split range tags for comparison\n * @return {Array} The filtered range - language tags.\n */\nfunction filterTags(rangeTags, index, array, languagesTagsComparator, splitRangeTags) {\n  if (!rangeTags[index]) return array;\n  languagesTagsComparator(splitRangeTags ? rangeTags[index].tag.split('-') : rangeTags[index].tag, 0, array);\n  return filterTags(rangeTags, ++index, array, languagesTagsComparator, splitRangeTags);\n}\n\n/**\n * Parse a range to form a \"quality weights\" list.\n *\n * @param {String} range A range string to languagePriorityList\n * @return {Array<Object>} A Language Priority List\n */\nexport function languagePriorityList(range) {\n  function extractTag(rangeTag) {\n    const ensureParsedValue = v => (v < 1 ? v : 1);\n    const extractQuality = q => (q ? ensureParsedValue(parseFloat(q.split('q=')[1])) : 1);\n    const matches = rangeTag.match(/^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/);\n    if (!matches) return undefined;\n    return { tag: matches[2] ? [matches[1], matches[2]].join('-') : matches[1], quality: extractQuality(matches[3]) };\n  }\n\n  return isString(range)\n    ? range\n        .split(',')\n        .map(extractTag)\n        .filter(isObject)\n        .sort(rangeSort)\n    : DEFAULT_WILDCARD;\n}\n\n/**\n * Basic Filter as described in RFC4647 3.3.1 produces a (potentially empty) set of prioritised language tags\n *\n * RFC4647 3.3.1  Basic Filtering\n *\n * @param {String} range A range string to languagePriorityList\n * @param {Array} languageTags A list of bcp47 locales that are supported\n * @return {Array<String>} returns tags from supportedLanguagesTags that match or all tags if wildcard '*' is given\n */\nexport function basicFilter(range, languageTags) {\n  if (!Array.isArray(languageTags)) return [];\n  const list = languagePriorityList(range);\n  if (list.length > 0 && isWildTag(list[0])) return languageTags; // RFC4647 wildcard matches all\n\n  function languagesTagsComparator(tag, index, array) {\n    if (!languageTags[index]) return array;\n    if (tagEquality(tag, languageTags[index]) || prefixInTag(tag, languageTags[index])) {\n      if (array.indexOf(languageTags[index]) === -1) array.push(languageTags[index]);\n    }\n    return languagesTagsComparator(tag, ++index, array);\n  }\n\n  return filterTags(list, 0, [], languagesTagsComparator, false);\n}\n\n/**\n * Extended Filter as described in RFC4647 3.3.2 produces a (potentially empty) set of prioritised language tags\n *\n * @param {String} range A range string to languagePriorityList\n * @param {Array} languageTags A list of bcp47 locales that are supported\n * @return {Array<String>} returns tags from supportedLanguagesTags that match or all tags if wildcard '*' is given\n */\nexport function extendedFilter(range, languageTags) {\n  if (!Array.isArray(languageTags) || languageTags.length === 0) return [];\n\n  function extendedTagMatch(rangeSubTags, languageSubTags, rIndex, lIndex) {\n    if (!rangeSubTags[rIndex]) return true;\n    if (!languageSubTags[lIndex] || languageSubTags[lIndex].length === 1) return false;\n    if (isWild(rangeSubTags[rIndex])) ++rIndex;\n    if (tagEquality(rangeSubTags[rIndex], languageSubTags[lIndex])) ++rIndex;\n    return extendedTagMatch(rangeSubTags, languageSubTags, rIndex, ++lIndex);\n  }\n\n  function languagesTagsComparator(rangeSubTags, index, array) {\n    if (!languageTags[index]) return array;\n    if (extendedTagMatch(rangeSubTags, languageTags[index].split('-'), 0, 0)) array.push(languageTags[index]);\n    return languagesTagsComparator(rangeSubTags, ++index, array);\n  }\n\n  return filterTags(languagePriorityList(range), 0, [], languagesTagsComparator, true);\n}\n\n/**\n * Lookup produces a single language tag (RFC4647)\n * @param {String} range A range string to languagePriorityList.\n * @param {Array} languageTags A list of bcp47 locales that are supported\n * @param {String} defaultValue The default to return if no match can be made\n * @return {String} returns an array of objects or wildcard if input is not valid (RFC2616)\n */\nexport function lookup(range, languageTags, defaultValue) {\n  if (arguments.length !== 3) throw new Error('range:String, languageTags:Array, defaultValue:String required!');\n  if (!Array.isArray(languageTags) || languageTags.length === 0) return defaultValue;\n\n  const sortedLangTags = languageTags.sort(lengthSort);\n\n  function matchTag(rangeTags, langTags, index, array) {\n    if (index >= langTags.length || index >= rangeTags.length) return array;\n    if (rangeTags[index].length !== 1) {\n      if (!tagEquality(rangeTags[index], langTags[index])) return array;\n      array.push(rangeTags[index]);\n    }\n    return matchTag(rangeTags, langTags, ++index, array);\n  }\n\n  function directTagMatch(tag, index, array) {\n    if (!languageTags[index]) return array;\n    if (tagEquality(tag, languageTags[index])) {\n      if (array.indexOf(languageTags[index]) === -1) array.push(languageTags[index]);\n    }\n    return directTagMatch(tag, ++index, array);\n  }\n\n  function languagesTagsComparator(tag, index, array) {\n    if (!sortedLangTags[index]) return array;\n    const matches = matchTag(tag.split('-'), sortedLangTags[index].split('-'), 0, []).join('-');\n    if (matches && array.indexOf(matches) === -1) array.push(matches);\n    return languagesTagsComparator(tag, ++index, array);\n  }\n\n  const priorityList = languagePriorityList(range);\n  const directMatch = filterTags(priorityList, 0, [], directTagMatch, false)[0];\n  return directMatch || filterTags(priorityList, 0, [], languagesTagsComparator, false)[0] || defaultValue;\n}\n"],"file":"index.js"}