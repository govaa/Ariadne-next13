{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-length":"100458","content-security-policy":"connect-src 'self' https:;img-src 'self' data: blob: https://market-assets.strapi.io;media-src 'self' data: blob:;default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline'","content-type":"application/json; charset=utf-8","date":"Tue, 15 Aug 2023 18:41:13 GMT","expect-ct":"max-age=0","referrer-policy":"no-referrer","server":"nginx/1.18.0 (Ubuntu)","strict-transport-security":"max-age=31536000; includeSubDomains","vary":"Origin","x-content-type-options":"nosniff","x-dns-prefetch-control":"off","x-download-options":"noopen","x-frame-options":"SAMEORIGIN","x-permitted-cross-domain-policies":"none","x-powered-by":"Strapi <strapi.io>"},"body":"eyJkYXRhIjpbeyJpZCI6MTQsImF0dHJpYnV0ZXMiOnsidGl0bGUiOiJNYXN0ZXJpbmcgSW4tU3RvcmUgU3VjY2VzczogT3ZlcmNvbWluZyBDaGFsbGVuZ2VzIHdpdGggQ3VzdG9tZXIgSm91cm5leSBNYXBwaW5nIiwic2x1ZyI6ImN1c3RvbWVyLWpvdXJuZXktbWFwcGluZyIsImNvbnRlbnQiOiIjIEludHJvZHVjdGlvblxuSW4gdGhlIGV2ZXItZXZvbHZpbmcgcmV0YWlsIGxhbmRzY2FwZSwgYnJpY2stYW5kLW1vcnRhciByZXRhaWxlcnMgZmFjZSBhIG15cmlhZCBvZiBjaGFsbGVuZ2VzLiBGcm9tIHRoZSBncm93aW5nIGNvbXBldGl0aW9uIG9mIGUtY29tbWVyY2UgdG8gc2hpZnRpbmcgY29uc3VtZXIgYmVoYXZpb3IgYW5kIHJpc2luZyBvcGVyYXRpb25hbCBjb3N0cywgc3RheWluZyBhaGVhZCByZXF1aXJlcyBpbm5vdmF0aXZlIHNvbHV0aW9ucy4gT25lIHBvd2VyZnVsIHRvb2wgdGhhdCBjYW4gaGVscCByZXRhaWxlcnMgYWRkcmVzcyB0aGVzZSBjaGFsbGVuZ2VzIGhlYWQtb24gaXMgY3VzdG9tZXIgam91cm5leSBtYXBwaW5nIGluLXN0b3JlLiBCeSBtYXBwaW5nIHRoZSBjdXN0b21lciBqb3VybmV5IGFuZCBhbmFseXppbmcgZWFjaCB0b3VjaHBvaW50LCByZXRhaWxlcnMgZ2FpbiB2YWx1YWJsZSBpbnNpZ2h0cyB0byBlbmhhbmNlIHRoZSBpbi1zdG9yZSBleHBlcmllbmNlLiBJbiB0aGlzIGJsb2cgcG9zdCwgd2Ugd2lsbCBkZWx2ZSBpbnRvIHRoZSB0b3AgZml2ZSBjaGFsbGVuZ2VzIGZhY2VkIGJ5IHJldGFpbGVycyBhbmQgZXhwbG9yZSBob3cgY3VzdG9tZXIgam91cm5leSBtYXBwaW5nIGNhbiB0YWNrbGUgdGhlc2UgY2hhbGxlbmdlcyBlZmZlY3RpdmVseS5cblxuIyMgQ2hhbGxlbmdlIDE6IENvbXBldGl0aW9uIGZyb20gRS1jb21tZXJjZVxuIVtjaGFsbGVuZ2UtMS5qcGddKC91cGxvYWRzL2NoYWxsZW5nZV8xXzFfNWY3MGJhYTNlZS5qcGcpXG5JbiBhIGRpZ2l0YWwgYWdlIGRvbWluYXRlZCBieSBvbmxpbmUgc2hvcHBpbmcsIGJyaWNrLWFuZC1tb3J0YXIgcmV0YWlsZXJzIGZhY2UgZmllcmNlIGNvbXBldGl0aW9uIGZyb20gZS1jb21tZXJjZSBnaWFudHMuIEhvd2V2ZXIsIGN1c3RvbWVyIGpvdXJuZXkgbWFwcGluZyBwcm92aWRlcyBhIHBhdGh3YXkgZm9yIHN1Y2Nlc3MuIEJ5IG1hcHBpbmcgdGhlIGN1c3RvbWVyIGpvdXJuZXkgaW4gdGhlaXIgcGh5c2ljYWwgc3RvcmVzLCByZXRhaWxlcnMgY2FuIGlkZW50aWZ5IHBhaW4gcG9pbnRzIGFuZCBhcmVhcyB3aGVyZSB0aGUgaW4tc3RvcmUgZXhwZXJpZW5jZSBjYW4gYmUgZW5oYW5jZWQuIFVuZGVyc3RhbmRpbmcgd2hhdCBzZXRzIHRoZSBwaHlzaWNhbCBzdG9yZSBhcGFydCBmcm9tIGl0cyBvbmxpbmUgY291bnRlcnBhcnRzIGlzIGNydWNpYWwuIFJldGFpbGVycyBjYW4gZm9jdXMgb24gcGVyc29uYWxpemVkIGludGVyYWN0aW9ucywga25vd2xlZGdlYWJsZSBzdGFmZiwgYW5kIGltbWVyc2l2ZSBleHBlcmllbmNlcyB0aGF0IGNyZWF0ZSBtZW1vcmFibGUgbW9tZW50cyBmb3IgY3VzdG9tZXJzLiBCeSBsZXZlcmFnaW5nIGN1c3RvbWVyIGpvdXJuZXkgaW5zaWdodHMsIHJldGFpbGVycyBjYW4gY3JhZnQgdW5pcXVlIHZhbHVlIHByb3Bvc2l0aW9ucyBhbmQgZGlmZmVyZW50aWF0ZSB0aGVtc2VsdmVzIGZyb20gdGhlIG9ubGluZSBjb21wZXRpdGlvbi5cblxuIyMgQ2hhbGxlbmdlIDI6IEV2b2x2aW5nIENvbnN1bWVyIEJlaGF2aW9yXG4hW2NoYWxsZW5nZS0yLmpwZ10oL3VwbG9hZHMvY2hhbGxlbmdlXzJfMV9mMDhiOWVkNjQ0LmpwZylcbkNvbnN1bWVyIGJlaGF2aW9yIGFuZCBwcmVmZXJlbmNlcyBhcmUgY29uc3RhbnRseSBldm9sdmluZywgcG9zaW5nIGNoYWxsZW5nZXMgZm9yIHRyYWRpdGlvbmFsIHJldGFpbGVycy4gV2Ugc2VlIGFuIGluY3JlYXNlIG9mIHRpbWUtc3RhcnZlZCBzaG9wcGVycywgaW5ub3ZhdGlvbiBmb2N1c2VkIG9uZXMgYW5kIGluIGNlcnRhaW4gcmVnaW9ucywgYSBzaGFycCBncm93dGggb24gaGlnaC1pbmNvbWUvYWZmbHVlbmNlIG9uZXMuICBDdXN0b21lciBqb3VybmV5IG1hcHBpbmcgYWxsb3dzIHJldGFpbGVycyB0byBhZGFwdCBhbmQgY2F0ZXIgdG8gdGhlc2UgY2hhbmdpbmcgY3VzdG9tZXIgcHJvZmlsZXMgYW5kIHRoZWlyIGV4cGVjdGF0aW9ucy4gQnkgYW5hbHl6aW5nIGVhY2ggdG91Y2hwb2ludCBpbiB0aGUgY3VzdG9tZXIgam91cm5leSwgcmV0YWlsZXJzIGNhbiBpZGVudGlmeSBhcmVhcyB3aGVyZSBhZGp1c3RtZW50cyBhcmUgbmVlZGVkIHRvIGFsaWduIHdpdGggZXZvbHZpbmcgY29uc3VtZXIgYmVoYXZpb3IuIFRoaXMgaW5jbHVkZXMgb3B0aW1pemluZyBzdG9yZSBsYXlvdXRzLCBpbXByb3ZpbmcgdmlzdWFsIG1lcmNoYW5kaXNpbmcsIGFuZCBlbmhhbmNpbmcgY3VzdG9tZXIgc2VydmljZSBpbnRlcmFjdGlvbnMsIHN1Y2ggYXMgaW50ZWdyYXRpbmcgbW9iaWxlIGFwcHMgZm9yIHBlcnNvbmFsaXplZCByZWNvbW1lbmRhdGlvbnMgb3IgcHJvdmlkaW5nIGluLXN0b3JlIHBpY2t1cCBvcHRpb25zIGZvciBvbmxpbmUgcHVyY2hhc2VzLiBVbmRlcnN0YW5kaW5nIGFuZCBtZWV0aW5nIGN1c3RvbWVyIGV4cGVjdGF0aW9ucyB0aHJvdWdob3V0IHRoZWlyIGpvdXJuZXkgY2FuIGJ1aWxkIGN1c3RvbWVyIGxveWFsdHkgYW5kIGRyaXZlIHJlcGVhdCBidXNpbmVzcy5cblxuIyMgQ2hhbGxlbmdlIDM6IFJpc2luZyBPcGVyYXRpb25hbCBDb3N0c1xuIVtjaGFsbGVuZ2UtMy5qcGddKC91cGxvYWRzL2NoYWxsZW5nZV8zXzFfYWMxNmY2YjRlYi5qcGcpXG5SdW5uaW5nIGEgcGh5c2ljYWwgc3RvcmUgY29tZXMgd2l0aCB2YXJpb3VzIG9wZXJhdGlvbmFsIGNvc3RzIHRoYXQgY2FuIHN0cmFpbiBwcm9maXRhYmlsaXR5LCBlc3BlY2lhbGx5IGluIHRoZSBmYWNlIG9mIGRlY2xpbmluZyBmb290IHRyYWZmaWMuIEN1c3RvbWVyIGpvdXJuZXkgbWFwcGluZyBoZWxwcyByZXRhaWxlcnMgb3B0aW1pemUgb3BlcmF0aW9uYWwgY29zdHMgYnkgaWRlbnRpZnlpbmcgYXJlYXMgb2YgaW5lZmZpY2llbmN5LiBCeSBhbmFseXppbmcgY3VzdG9tZXIgZmxvdyB3aXRoaW4gdGhlIHN0b3JlLCByZXRhaWxlcnMgY2FuIG9wdGltaXplIHN0b3JlIGxheW91dCwgaW1wcm92ZSB0cmFmZmljIGZsb3csIGFuZCByZWR1Y2Ugb3BlcmF0aW9uYWwgY29zdHMuIFN0cmVhbWxpbmluZyBwcm9jZXNzZXMsIHN1Y2ggYXMgY2hlY2tvdXQgYW5kIHJldHVybnMsIGNhbiBlbmhhbmNlIHRoZSBvdmVyYWxsIGN1c3RvbWVyIGV4cGVyaWVuY2Ugd2hpbGUgc2ltdWx0YW5lb3VzbHkgaW5jcmVhc2luZyBvcGVyYXRpb25hbCBlZmZpY2llbmN5LiBMZXZlcmFnaW5nIHRlY2hub2xvZ2llcyBsaWtlIHNlbGYtY2hlY2tvdXQgb3IgbW9iaWxlIHBheW1lbnRzIGNhbiBmdXJ0aGVyIHN0cmVhbWxpbmUgb3BlcmF0aW9ucyBhbmQgcmVkdWNlIGNvc3RzLiBCeSBpZGVudGlmeWluZyBhbmQgYWRkcmVzc2luZyBpbmVmZmljaWVuY2llcyB0aHJvdWdoIGN1c3RvbWVyIGpvdXJuZXkgbWFwcGluZywgcmV0YWlsZXJzIGNhbiBzdHJpa2UgYSBiYWxhbmNlIGJldHdlZW4gb3BlcmF0aW9uYWwgY29zdHMgYW5kIGEgc2VhbWxlc3MgaW4tc3RvcmUgZXhwZXJpZW5jZS5cblxuIyMgQ2hhbGxlbmdlIDQ6IE9tbmljaGFubmVsIEludGVncmF0aW9uXG4hW2NoYWxsZW5nZS00anBnXSgvdXBsb2Fkcy9jaGFsbGVuZ2VfNF8xX2EyNTViMDI5ZDkuanBnKVxuQ3JlYXRpbmcgYSBzZWFtbGVzcyBpbnRlZ3JhdGlvbiBiZXR3ZWVuIG9ubGluZSBhbmQgb2ZmbGluZSBjaGFubmVscyBpcyBhIHNpZ25pZmljYW50IGNoYWxsZW5nZSBmb3IgcmV0YWlsZXJzLiBIb3dldmVyLCBjdXN0b21lciBqb3VybmV5IG1hcHBpbmcgcHJvdmlkZXMgaW5zaWdodHMgaW50byBob3cgZGlmZmVyZW50IHRvdWNocG9pbnRzIGludGVyYWN0IGFjcm9zcyBjaGFubmVscy4gQnkgdW5kZXJzdGFuZGluZyB0aGUgY3VzdG9tZXIgam91cm5leSBob2xpc3RpY2FsbHksIHJldGFpbGVycyBjYW4gaWRlbnRpZnkgb3Bwb3J0dW5pdGllcyBmb3IgaW50ZWdyYXRpb24uIFRoaXMgbWF5IGludm9sdmUgYWxpZ25pbmcgb25saW5lIGFuZCBpbi1zdG9yZSBwcm9tb3Rpb25zLCBvciBldmVuIGFkb3B0IHVuaXF1ZSB0ZWNobm9sb2d5IHN1Y2ggYXMgQXJpYWRuZSwgdGhhdCB0aHJvdWdoIGFuIG9wdC1pbiBwcm9jZXNzIHVuZGVyc3RhbmRzIHRoZSBjdXN0b21lciBwcmVzZW5jZSBpbi1zdG9yZSBhbmQgY2FuIGxldmVyYWdlIHVuaWZpZWQgY29tbWVyY2UgcGxhdGZvcm1zIGluZnJhc3RydWN0dXJlIHRvIGRlbGl2ZXIgYSBtb3JlIHBlcnNvbmFsaXplZCBzYWxlcyByZWNvbW1lbmRhdGlvbiBmcm9tIGluLXN0b3JlIHBlcnNvbm5lbC4gV2l0aCBhIGNvbXByZWhlbnNpdmUgdW5kZXJzdGFuZGluZyBvZiB0aGUgY3VzdG9tZXIgam91cm5leSwgcmV0YWlsZXJzIGNhbiBkZWxpdmVyIGEgY29uc2lzdGVudCBhbmQgY29oZXNpdmUgZXhwZXJpZW5jZSB0aGF0IHN0cmVuZ3RoZW5zIHRoZWlyIGJyYW5kIGlkZW50aXR5IGFuZCBlbmNvdXJhZ2VzIGN1c3RvbWVycyB0byBlbmdhZ2UgYWNyb3NzIG11bHRpcGxlIGNoYW5uZWxzLlxuXG4jIyBDaGFsbGVuZ2UgNTogRGF0YS1kcml2ZW4gRGVjaXNpb24gTWFraW5nXG5cbkluIHRoZSBlcmEgb2YgYmlnIGRhdGEsIHJldGFpbGVycyBuZWVkIHRvIGxldmVyYWdlIGluc2lnaHRzIGZvciBkYXRhLWRyaXZlbiBkZWNpc2lvbiBtYWtpbmcuIEN1c3RvbWVyIGpvdXJuZXkgbWFwcGluZyBlbXBvd2VycyByZXRhaWxlcnMgdG8gY29sbGVjdCBhbmQgYW5hbHl6ZSBkYXRhIGF0IGVhY2ggdG91Y2hwb2ludCwgZW5hYmxpbmcgdGhlbSB0byBtYWtlIGluZm9ybWVkIGRlY2lzaW9ucyB0byBlbmhhbmNlIHRoZSBjdXN0b21lciBqb3VybmV5LiBBbmFseXppbmcgZGF0YSByZWxhdGVkIHRvIGN1c3RvbWVyIGJlaGF2aW9yLCBwcmVmZXJlbmNlcywgYW5kIHBhaW4gcG9pbnRzIGhlbHBzIHJldGFpbGVycyBvcHRpbWl6ZSBzdG9yZSBsYXlvdXQsIHRhaWxvciBwcm9kdWN0IG9mZmVyaW5ncywgYW5kIGRlbGl2ZXIgcGVyc29uYWxpemVkIHByb21vdGlvbnMgb3IgcmVjb21tZW5kYXRpb25zLiBCeSBsZXZlcmFnaW5nIHRlY2hub2xvZ3kgYW5kIGFuYWx5dGljcyB0b29scywgcmV0YWlsZXJzIGNhbiBnYWluIHZhbHVhYmxlIGluc2lnaHRzIGFuZCB1bmRlcnN0YW5kIHRoZSBlZmZlY3RpdmVuZXNzIG9mIHZhcmlvdXMgc3RyYXRlZ2llcy4gVGhpcyBhbGxvd3MgdGhlbSB0byByZWZpbmUgdGhlaXIgYXBwcm9hY2gsIHRhaWxvciB0aGVpciBvZmZlcmluZ3MsIGFuZCB1bHRpbWF0ZWx5IGNyZWF0ZSBhIG1vcmUgdGFpbG9yZWQgYW5kIHNhdGlzZnlpbmcgaW4tc3RvcmUgZXhwZXJpZW5jZSBmb3IgdGhlaXIgY3VzdG9tZXJzLlxuXG4jIENvbmNsdXNpb25cbkJyaWNrLWFuZC1tb3J0YXIgcmV0YWlsZXJzIGZhY2UgbnVtZXJvdXMgY2hhbGxlbmdlcyBpbiB0b2RheSdzIHJldGFpbCBsYW5kc2NhcGUuIEhvd2V2ZXIsIGN1c3RvbWVyIGpvdXJuZXkgbWFwcGluZyBpbi1zdG9yZSBvZmZlcnMgYSBwb3dlcmZ1bCBzb2x1dGlvbi4gQnkgbWFwcGluZyB0aGUgY3VzdG9tZXIgam91cm5leSBhbmQgYW5hbHl6aW5nIGVhY2ggdG91Y2hwb2ludCwgcmV0YWlsZXJzIGdhaW4gdmFsdWFibGUgaW5zaWdodHMgdGhhdCBlbmFibGUgdGhlbSB0byB0YWNrbGUgdGhlc2UgY2hhbGxlbmdlcyBoZWFkLW9uLiBXaGV0aGVyIGl0J3MgYWRkcmVzc2luZyBjb21wZXRpdGlvbiBmcm9tIGUtY29tbWVyY2UsIGFkYXB0aW5nIHRvIGV2b2x2aW5nIGNvbnN1bWVyIGJlaGF2aW9yLCBvcHRpbWl6aW5nIG9wZXJhdGlvbmFsIGNvc3RzLCBhY2hpZXZpbmcgb21uaWNoYW5uZWwgaW50ZWdyYXRpb24sIG9yIGxldmVyYWdpbmcgZGF0YS1kcml2ZW4gZGVjaXNpb24gbWFraW5nLCBjdXN0b21lciBqb3VybmV5IG1hcHBpbmcgZXF1aXBzIHJldGFpbGVycyB3aXRoIHRoZSB0b29scyB0aGV5IG5lZWQgdG8gZW5oYW5jZSB0aGUgaW4tc3RvcmUgZXhwZXJpZW5jZSBhbmQgdGhyaXZlIGluIGFuIGV2ZXItY2hhbmdpbmcgcmV0YWlsIGxhbmRzY2FwZS5cbklmIHlvdSdyZSBpbnRlcmVzdGVkIGluIGxlYXJuaW5nIG1vcmUgYWJvdXQgQXJpYWRuZeKAmXMgdGVjaG5vbG9neSBhbmQgaG93IGl0IGNhbiBoZWxwIHlvdXIgcGh5c2ljYWwgc3RvcmUgb3ZlcmNvbWUgdGhlc2UgY2hhbGxlbmdlcywgZG9uJ3QgaGVzaXRhdGUgdG8gZ2V0IGluIHRvdWNoLiBXZSdkIGJlIGhhcHB5IHRvIHByb3ZpZGUgeW91IHdpdGggbW9yZSBpbmZvcm1hdGlvbiBhbmQgYW5zd2VyIGFueSBxdWVzdGlvbnMgeW91IG1heSBoYXZlLlxuXG4iLCJleGNlcnB0IjoiQXMgdGhlIHJldGFpbCBpbmR1c3RyeSB1bmRlcmdvZXMgY29udGludW91cyBjaGFuZ2UsIGJyaWNrLWFuZC1tb3J0YXIgc3RvcmVzIGdyYXBwbGUgd2l0aCB2YXJpb3VzIG9ic3RhY2xlcywgaW5jbHVkaW5nIHRoZSByaXNlIG9mIGUtY29tbWVyY2UsIHNoaWZ0aW5nIGNvbnN1bWVyIGJlaGF2aW9ycywgZXNjYWxhdGluZyBvcGVyYXRpb25hbCBjb3N0cywgYW5kIHRoZSBuZWVkIGZvciBvbW5pY2hhbm5lbCBpbnRlZ3JhdGlvbi4gSW4gdGhpcyBibG9nIHBvc3QsIHdlIGFkZHJlc3MgdGhlc2UgY2hhbGxlbmdlcyBieSBkaXZpbmcgaW50byB0aGUgdXRpbGl0eSBvZiBjdXN0b21lciBqb3VybmV5IG1hcHBpbmcgd2l0aGluIHBoeXNpY2FsIHN0b3Jlcy4gVGhpcyBwb3dlcmZ1bCB0b29sIHVuY292ZXJzIHVuaXF1ZSBpbnNpZ2h0cyBpbnRvIGVhY2ggY3VzdG9tZXIgaW50ZXJhY3Rpb24sIG9mZmVyaW5nIHBvdGVudGlhbCBwYXRod2F5cyB0byBlbmhhbmNlIHRoZSBpbi1zdG9yZSBleHBlcmllbmNlLiBEaXNjb3ZlciBob3cgdW5kZXJzdGFuZGluZyBhbmQgbGV2ZXJhZ2luZyB0aGUgY3VzdG9tZXIgam91cm5leSBjYW4gaGVscCByZXRhaWxlcnMgY2FydmUgb3V0IGEgbmljaGUgaW4gdGhlIG1hcmtldCwgYWRhcHQgdG8gY29uc3VtZXIgc2hpZnRzLCBpbmNyZWFzZSBvcGVyYXRpb25hbCBlZmZpY2llbmN5LCBjcmVhdGUgYSBzZWFtbGVzcyBvbW5pY2hhbm5lbCBleHBlcmllbmNlLCBhbmQgZm9zdGVyIGRhdGEtZHJpdmVuIGRlY2lzaW9uLW1ha2luZy4gQWxzbywgZXhwbG9yZSBob3cgQXJpYWRuZSdzIGlubm92YXRpdmUgdGVjaG5vbG9neSBjb3VsZCBiZSB5b3VyIHNlY3JldCB3ZWFwb24gaW4gdGhlIGZpZ2h0IGZvciByZXRhaWwgcmVsZXZhbmNlIiwiY3JlYXRlZEF0IjoiMjAyMy0wNy0xN1QxNTozOToyNS42OTdaIiwidXBkYXRlZEF0IjoiMjAyMy0wNy0xN1QxNTo1Mjo0OS41NzFaIiwicHVibGlzaGVkQXQiOiIyMDIzLTA3LTE3VDE1OjM5OjI3LjIyOFoiLCJpbWFnZSI6eyJkYXRhIjp7ImlkIjo2NCwiYXR0cmlidXRlcyI6eyJuYW1lIjoiY3VzdG9tZXItanB1cm5leS1tYXBwaW5nLnBuZyIsImFsdGVybmF0aXZlVGV4dCI6bnVsbCwiY2FwdGlvbiI6bnVsbCwid2lkdGgiOjcwMCwiaGVpZ2h0Ijo0NTAsImZvcm1hdHMiOnsic21hbGwiOnsiZXh0IjoiLnBuZyIsInVybCI6Ii91cGxvYWRzL3NtYWxsX2N1c3RvbWVyX2pwdXJuZXlfbWFwcGluZ181NzY0Mjc4MDQxLnBuZyIsImhhc2giOiJzbWFsbF9jdXN0b21lcl9qcHVybmV5X21hcHBpbmdfNTc2NDI3ODA0MSIsIm1pbWUiOiJpbWFnZS9wbmciLCJuYW1lIjoic21hbGxfY3VzdG9tZXItanB1cm5leS1tYXBwaW5nLnBuZyIsInBhdGgiOm51bGwsInNpemUiOjEzMy45LCJ3aWR0aCI6NTAwLCJoZWlnaHQiOjMyMX0sInRodW1ibmFpbCI6eyJleHQiOiIucG5nIiwidXJsIjoiL3VwbG9hZHMvdGh1bWJuYWlsX2N1c3RvbWVyX2pwdXJuZXlfbWFwcGluZ181NzY0Mjc4MDQxLnBuZyIsImhhc2giOiJ0aHVtYm5haWxfY3VzdG9tZXJfanB1cm5leV9tYXBwaW5nXzU3NjQyNzgwNDEiLCJtaW1lIjoiaW1hZ2UvcG5nIiwibmFtZSI6InRodW1ibmFpbF9jdXN0b21lci1qcHVybmV5LW1hcHBpbmcucG5nIiwicGF0aCI6bnVsbCwic2l6ZSI6NDQuMTksIndpZHRoIjoyNDMsImhlaWdodCI6MTU2fX0sImhhc2giOiJjdXN0b21lcl9qcHVybmV5X21hcHBpbmdfNTc2NDI3ODA0MSIsImV4dCI6Ii5wbmciLCJtaW1lIjoiaW1hZ2UvcG5nIiwic2l6ZSI6NDIuMDYsInVybCI6Ii91cGxvYWRzL2N1c3RvbWVyX2pwdXJuZXlfbWFwcGluZ181NzY0Mjc4MDQxLnBuZyIsInByZXZpZXdVcmwiOm51bGwsInByb3ZpZGVyIjoibG9jYWwiLCJwcm92aWRlcl9tZXRhZGF0YSI6bnVsbCwiY3JlYXRlZEF0IjoiMjAyMy0wNy0xN1QxNTozNjowNC4yNjlaIiwidXBkYXRlZEF0IjoiMjAyMy0wNy0xN1QxNTozNjowNC4yNjlaIn19fSwiYXV0aG9yIjp7ImRhdGEiOnsiaWQiOjIsImF0dHJpYnV0ZXMiOnsiZmlyc3RuYW1lIjoiR292YXJ0aGFuIiwibGFzdG5hbWUiOiJOYXRhcmFqYW4iLCJ1c2VybmFtZSI6bnVsbCwicHJlZmVyZWRMYW5ndWFnZSI6bnVsbCwiY3JlYXRlZEF0IjoiMjAyMy0wNS0xNlQwODozNDo0OC4xMzZaIiwidXBkYXRlZEF0IjoiMjAyMy0wNS0xNlQwOTowODoyNS4xNDlaIn19fX19LHsiaWQiOjEzLCJhdHRyaWJ1dGVzIjp7InRpdGxlIjoiU2hvcHBlciBGbG93IC0gTWFuZGF0b3J5IGZvciBFbmhhbmNlZCBDdXN0b21lciBFeHBlcmllbmNlLCBJbmNyZWFzZWQgVmlzaXRhdGlvbiBhbmQgQ29udmVyc2lvbnMiLCJzbHVnIjoic2hvcHBlci1qb3VybmV5IiwiY29udGVudCI6IiMgV2h5IHNob3VsZCB3ZSBsb3ZlIHNob3BwZXIgZmxvdyBpbnNpZ2h0cz9cblJldGFpbCBzdG9yZSBsYXlvdXQsIG9yIHN0b3JlIGRlc2lnbiwgaXMgdGhlIGxheW91dCB0aGF0IHJldGFpbGVycyB1c2UgdG8gb3JnYW5pemUgdGhlaXIgcHJvZHVjdHMsIGZpeHR1cmVzLCBhbmQgbWVyY2hhbmRpc2UgaW4gYnJpY2stYW5kLW1vcnRhciBzdG9yZXMuIFRyYWRpdGlvbmFsbHksIGEgcHJpbWFyeSBnb2FsIG9mIHN0b3JlIGxheW91dCBpcyB0byBpbXByb3ZlIHNob3BwZXIgZmxvdyBhbmQgbWF4aW1pemUgc2FsZXMsIGxldmVyYWdpbmcgYmVzdCBwZXJmb3JtaW5nIGNhdGVnb3JpZXMgYWRqYWNlbmNpZXMuIFRoZSBsYXlvdXQgZGVzaWduZXIgbXVzdCBjb25zaWRlciB0aGF0IHBlb3BsZSBkbyBub3QgbmF2aWdhdGUgdGhlIHNhbWUgd2F5IGluIGVhY2ggc3RvcmUuIFByb2R1Y3RzIChhcHBhcmVsLCBncm9jZXJpZXMsIGZ1cm5pdHVyZSwgaGFyZHdhcmUsIGV0Yy4pLCBkZW1vZ3JhcGhpY3MsIHN0b3JlIGxvY2F0aW9uLFsgYXZhaWxhYmxlIHNwYWNlXShodHRwczovL3NwYy1yZXRhaWwuY29tLzctc3RvcmUtbGF5b3V0LW1pc3Rha2VzLXJldGFpbGVycy1hcmUtbWFraW5nLyksIGFuZCB0YXJnZXQgY3VzdG9tZXJzLCBhbGwgbmVlZCB0byBiZSBjb25zaWRlcmVkIHdoZW4gY3JlYXRpbmcgc3BlY2lmaWMgc3RvcmUgbGF5b3V0cy5cblxuaGUgcG9zdC1DT1ZJRCByZWJpcnRoIG9mIHRoZSBicmljay1hbmQtbW9ydGFyIHJldGFpbCByZXF1aXJlcyBhIGN1c3RvbWVyLWNlbnRyaWMgbGF5b3V0IHRoYXQgZGlyZWN0bHkgY29ycmVzcG9uZHMgdG8gdGhlIG5ldyB3YXkgdGhhdCBzaG9wcGVycyBuYXZpZ2F0ZSB0aG9zZSBzdG9yZXMuIFN0b3JlIGxheW91dCBkZXNpZ24gc2hvdWxkIG5vdCBqdXN0IGluY2x1ZGUgZW5oYW5jaW5nIHNob3BwZXIgbmF2aWdhdGlvbi4gSW5zaWdodHMgYWJvdXQgdGhlIHNob3BwZXIgZmxvdyBwYXR0ZXJucyBhbGxvdyByZXRhaWxlcnMgdG8gb3B0aW1pc2UgdGhlIFtkZXNpZ24gb2YgbmV3IGxheW91dHNdKGh0dHBzOi8vY2hhcmxlc2tkZXNpZ24uY29tLzUtbWlzdGFrZXMtdG8tYXZvaWQtd2hlbi1kZXNpZ25pbmctYS1uZXctcmV0YWlsLXNwYWNlLykgdGhhdCB3aWxsIGF0dHJhY3QgbW9yZSBjdXN0b21lcnMsIGVuY291cmFnZSB0aGUgaW1wdWxzaXZlIHBpY2sgdXAgb2YgcHJvZHVjdHMgYW5kIGNyZWF0ZSBhIG1lbW9yYWJsZSBzaG9wcGluZyBleHBlcmllbmNlLiBDcmVhdGluZyB0aGUgcmlnaHQgc2hvcHBpbmcgZXhwZXJpZW5jZSBpcyBjcml0aWNhbCBhcyBwaHlzaWNhbCByZXRhaWwgc3RpbGwgcmVwcmVzZW50cyBtb3N0IHNhbGVzIGFuZCBjdXN0b21lcnMgZXhwZWN0IGFuIGV4cGVyaWVuY2UgdGhhdCBjYW7igJl0IGJlIHByb3ZpZGVkIG9ubGluZS5cblxuTGV0J3Mgc2VlIGhvdyBhIHdlbGwta25vd24gcmV0YWlsZXIgdXNlZCBzaG9wcGVyIGZsb3cgYW5hbHl0aWNzIGFuZCBzbWFsbCBjaGFuZ2VzIGluIHRoZSBzdG9yZSBsYXlvdXQgdG8gZHJpdmUgYSA1WCBpbmNyZWFzZSBpbiBzaG9wcGVyIHZpc2l0cyB0byBzcGVjaWZpYyBhcmVhcyBhbmQgaW5jcmVhc2Ugc2FsZXMuXG5cbiMgV2hhdCBpcyBoYXBwZW5pbmcgaW4gcmVhbGl0eT9cblBvb3IgdHJhZmZpYyBmbG93IGlzIGEgY29tbW9uIGlzc3VlIGluIHJldGFpbCBzdG9yZXMsIG5lZ2F0aXZlbHkgaW1wYWN0aW5nIHRoZSBjdXN0b21lciBleHBlcmllbmNlIGFuZCBkaXNjb3VyYWdpbmcgc2hvcHBlcnMgZnJvbSBzcGVuZGluZyBtb3JlIHRpbWUgZXhwbG9yaW5nIHRoZSBzdG9yZSBhbmQgcHVyY2hhc2luZyBtb3JlLiBQb29yIGNhdGVnb3J5IHBvc2l0aW9uaW5nLCBuYXJyb3cgb3IgdHdpc3RlZCBhaXNsZXMsIGFuZCBibG9ja2VkIHNob3BwZXJz4oCZIHZpZXdzIGFyZSBzb21lIG9mIHRoZSBbdHlwaWNhbCBtaXN0YWtlcyBdKGh0dHBzOi8vY2hhcmxlc2tkZXNpZ24uY29tLzUtbWlzdGFrZXMtdG8tYXZvaWQtd2hlbi1kZXNpZ25pbmctYS1uZXctcmV0YWlsLXNwYWNlLylpbiBzdG9yZSBsYXlvdXQuIEFkZGl0aW9uYWxseSwgY2F0ZWdvcmllcyBhcmUgb2Z0ZW4gcGxhY2VkIGNsb3NlIHRvIGVhY2ggb3RoZXIgYmFzZWQgb24gZXhwZXJpZW5jZSwgaW50dWl0aW9uLCBhbmQgZ3V0IGZlZWwgcmF0aGVyIHRoYW4gcmVhbCBkYXRhLCBmdXJ0aGVyIGNvbmZ1c2luZyBzaG9wcGVycyBhdHRlbXB0aW5nIHRvIGNvbXBsZXRlIHRoZWlyIHNob3BwaW5nIG1pc3Npb24gYW5kIGV2ZW4gdXBzZXR0aW5nIHNob3BwZXJzIHdpdGggb3ZlcmNyb3dkZWQgYWlzbGVzLCBkZXBhcnRtZW50cywgYW5kIGZpeHR1cmVzLlxuXG5JZiBub3QgYWRkcmVzc2VkLCBzdG9yZXMgd2lsbCBmYWNlIGRpc29yZ2FuaXplZCB0cmFmZmljIGZsb3dzLCBjcmFtcGVkIHByb2R1Y3QgYXJlYXMsIGFuZCBhIGhvcnJpYmxlIGN1c3RvbWVyIGV4cGVyaWVuY2UgbGVhZGluZyB0byBsZXNzIHNob3BwZXIgZXhwbG9yaW5nIGFuZCBkZWNyZWFzZWQgc2FsZXMgYW5kIGxveWFsdHkuIEFyaWFkbmUncyBTaG9wcGVyIEpvdXJuZXlmZWF0dXJlIGdpdmVzIHJldGFpbGVycyB0aGUgYWJpbGl0eSB0byB0cmFjayBzaG9wcGVycyBhbmQgdGhlaXIgam91cm5leXMsIGluY2x1ZGluZyBtYWpvciBhbmQgbWlub3Igc2hvcHBlciBmbG93cywgb3B0aW1pemUgaW4tc3RvcmUgdHJhZmZpYyBwYXR0ZXJucywgYW5kIGNvbnRpbnVlZCBlbmhhbmNlbWVudCBvZiBzdG9yZSBsYXlvdXQuIFRoZSByZXN1bHRpbmcgW29wdGltaXplZCBzdG9yZSBkZXNpZ25dKGh0dHBzOi8vd3d3LmRvdGFjdGl2LmNvbS9ibG9nL2d1aWRlLXRvLXRoZS1wZXJmZWN0LXN0b3JlLWZsb29yLXBsYW4pIGVuaGFuY2VzIHRoZSBjdXN0b21lciBleHBlcmllbmNlLCBpbmNyZWFzZXMgY3Jvc3Mtc2VsbGluZyBhbmQgdXAtc2VsbGluZywgYW5kIGJvb3N0cyBsb3lhbHR5IGFuZCBzYWxlcy5cblxuIyBXaGF0IGNhbiB0aGUgcmV0YWlsZXIgZG8/XG5BIGxhcmdlIHJldGFpbGVyIGlzIHVzaW5nIEFyaWFkbmUncyBwbGF0Zm9ybSB0byB0cmFjayB0aGVpbi1zdG9yZSBzaG9wcGluZyBqb3VybmV5IGFuZCBvcHRpbWl6ZSB0aGUgbGF5b3V0IG9mIGVhY2ggc3RvcmUuIFRvIGFjaGlldmUgdGhhdCwgdGhlIHJldGFpbGVyIHN0YXJ0ZWQgd2l0aCBpbnNpZ2h0cyBmcm9tIHR3byBzdG9yZXMuVGhlIGNvbXBhcmlzb24gb2Ygc2hvcHBlciBqb3VybmV5cywgaW5jbHVkaW5nIGRvbWluYW50IHNob3BwZXIgZmxvd3MsIHJldmVhbGVkIGdvb2QgYW5kIGJhZCBwcmFjdGljZXMgc2lnbmlmaWNhbnRseSBpbmZsdWVuY2luZyB0aGUgc2hvcHBlciBqb3VybmV5LlxuXG4jIyAxLiBQb3NpdGlvbmluZyBtYXR0ZXJzXG5BcyBtYW55IHN0dWRpZXMgaGF2ZSBmb3VuZCwgbGVzcyB2aXNpdGVkIHByb2R1Y3QgYXJlYXMgYmVuZWZpdCB3aGVuIHRoZXkgYXJlIHBsYWNlZCBvbiB0aGUgcmlnaHQgc2lkZSBvZiBtb3JlIHZpc2l0ZWQgb3IgcG9wdWxhciBhcmVhcyBhcyBjdXN0b21lcnMgdGVuZCB0byBtb3ZlIHRvIHRoZSByaWdodC4gSW4gdGhlIGlsbHVzdHJhdGlvbnMgYmVsb3csIHR3byBkaWZmZXJlbnQgc3RvcmVzIHBvc2l0aW9uZWQgYSBsZXNzIHZpc2l0ZWQgcHJvZHVjdCBjYXRlZ29yeSAtIFRWIHNldHMgaW4gdGhpcyBjYXNlIC0gaW4gZGlmZmVyZW50IGxvY2F0aW9ucy4gQnkgdXNpbmcgdGhlIEFyaWFkbmUgcGxhdGZvcm0sIHRoZSByZXRhaWxlciB3YXMgYWJsZSB0byBzZWUgdGhlIGRhdGEgcHJvdmluZyB0aGF0IHdoZW4gdGhlIFRWIGRlcGFydG1lbnQgaXMgcGxhY2VkIHRvIHRoZSByaWdodCBvZiB0aGUgSVQgZGVwYXJ0bWVudCBwcm9kdWN0cyAoU3RvcmUgQiksIHRoZSBUViBkZXBhcnRtZW50IGlzIHZpc2l0ZWQgYnkgZmFyIG1vcmUgc2hvcHBlcnMgY29tcGFyZWQgdG8gdmlzaXRvcnMgcmVzdWx0aW5nIGZyb20gdGhlIHBsYWNlbWVudCBpbiBTdG9yZSBBLiBUaGlzIHNtYWxsIGRpZmZlcmVuY2UgaW4gdGhlIFRWIGRlcGFydG1lbnQgbG9jYXRpb24gaXMgcmVzdWx0aW5nIGluIDVYIGluY3JlYXNlIGluIFRWIGRlcGFydG1lbnQgdHJhZmZpYyBhbmQgYSBzaWduaWZpY2FudCBpbmNyZWFzZSBpbiBzYWxlcy5cblxuIVtwb3NpdGlvbmluZy5wbmddKC91cGxvYWRzL3Bvc2l0aW9uaW5nXzA0MmNiYWQ3Y2QucG5nKVxuXG4jIyAyLiBNYWtlIGl0IGxhc3QgbG9uZ2VyXG5Vc2luZyBBcmlhZG5lLCB0aGlzIHJldGFpbGVyIGRpc2NvdmVyZWQgdGhhdCBwb3B1bGFyIHByb2R1Y3QgYXJlYXMgcGxhY2VkIGF0IHRoZSBjZW50cmUgb2YgdGhlIHN0b3JlIG9yIG5lYXIgdGhlIGNhc2hpZXJzIHdhcyBpbnRlcnJ1cHRpbmcgc2hvcHBlciBqb3VybmV5cyBlYXJseSwgcmVzdWx0aW5nIGluIGxvc3Qgc2FsZXMuIEJvb2tzIGFyZSBvbmUgb2YgdGhlIHRvcCBjYXRlZ29yaWVzIGZvciB0aGlzIHJldGFpbGVyLCBzbyB0aGVpciBsb2NhdGlvbiBpbiB0aGUgc3RvcmUgaGFzIGEgc2lnbmlmaWNhbnQgaW1wYWN0IHRvIHNob3BwZXIgZmxvdy4gQXMgc2hvd24gaW4gdGhlIGlsbHVzdHJhdGlvbiBiZWxvdywgU3RvcmUgQiBwbGFjZWQgYm9va3MgbmVhciB0aGUgY2VudHJlIG9mIHRoZSBzdG9yZS4gQXMgYSByZXN1bHQsIGFsbW9zdCBoYWxmIG9mIHRoZSBzdG9yZSBpcyByYXJlbHkgdmlzaXRlZCBiZWNhdXNlIGN1c3RvbWVycyBoYXZlIGFscmVhZHkgYWNjb21wbGlzaGVkIHRoZWlyIGludGVuZGVkIHNob3BwaW5nIGdvYWwuIFRoZSBwbGFjZW1lbnQgb2YgYm9va3MgaW4gU3RvcmUgQiBkaXNydXB0cyB0aGUgc2hvcHBlciBqb3VybmV5LCBmb3JjaW5nIGl0IHRvIGVuZCBwcmVtYXR1cmVseS4gSG93ZXZlciBhcyBzZWVuIGJlbG93LCBTdG9yZSBBIHBsYWNlZCBCb29rcyBpbiB0aGUgYmFjaywgcmVzdWx0aW5nIGluIGEgZmFyIGJldHRlciBjdXN0b21lciBqb3VybmV5IGRpc3RyaWJ1dGlvbiBhbW9uZyBhbGwgZGVwYXJ0bWVudHMgYW5kIGFjcm9zcyB0aGUgZW50aXJlIHN0b3JlLCBpbXBhY3RpbmcgYm90aCBjdXN0b21lciBleHBlcmllbmNlIGFuZCBzYWxlcy5cblxuIVtzdG9yZS12aXNpdGF0aW9uLnBuZ10oL3VwbG9hZHMvc3RvcmVfdmlzaXRhdGlvbl8wN2M0MzI3MzgyLnBuZylcblxuIyMgMy4gUG9wdWxhciBhbmQgbm9uLXBvcHVsYXI6IFRoZSBwZXJmZWN0IG1hdGNoXG5UaGlzIHJldGFpbGVyIGFsc28gbGVhcm5lZCB0aGF0IHBsYWNpbmcgdGhlIG1vc3QgdmlzaXRlZCBwcm9kdWN0IGNhdGVnb3JpZXMgc2lkZSBieSBzaWRlIGRpc3J1cHRlZCBzaG9wcGVyIG5hdmlnYXRpb24sIG5lZ2F0aXZlbHkgaW1wYWN0aW5nIGFsbCBwcm9kdWN0IGNhdGVnb3JpZXMuIFVzaW5nIGFjdHVhbCBkYXRhLCB0aGV5IHdlcmUgYWJsZSB0byBsZWFybiwgYW5kIHNlZSwgdGhhdCBwdXR0aW5nIHBvcHVsYXIgY2F0ZWdvcmllcyBuZXh0IHRvIGVhY2ggb3RoZXIgcmVzdWx0aW5nIGluIG1hbnkgc2hvcHBlcnMgZ2F0aGVyaW5nIGluIHRoZSBzYW1lIGFyZWFzIGFuZCBkaXNjb3VyYWdpbmcgb3RoZXIgc2hvcHBlcnMgZnJvbSB2aXNpdGluZyBvciBwYXNzaW5nIHRocm91Z2ggdGhvc2UgYXJlYXMuIFNob3BwZXJzIHdlcmUgZGlzY291cmFnZWQgYW5kIGRlY3JlYXNlZCBhZGRpdGlvbmFsIHN0b3JlIGV4cGxvcmF0aW9uLCBkZWNyZWFzaW5nIHNhbGVzLiBUaGlzIGVmZmVjdCBpcyBldmVuIG1vcmUgcHJvbm91bmNlZCBwb3N0LUNPVklEIGFzIHNob3BwZXJzIGF2b2lkIGNyb3dkZWQgYW5kIGNyYW1wZWQgc3BhY2VzLiBBIHJlYWwgZXhhbXBsZSBvZiB0aGlzIGVmZmVjdCBpcyBzZWVuIGluIHRoZSBpbGx1c3RyYXRpb24gYmVsb3cuIEluIFN0b3JlIEIgdGhlIElUIGRlcGFydG1lbnQgaXMgbmVhciBCb29rcy4gQXMgYm90aCBCb29rcyBhbmQgSVQgYXJlIHBvcHVsYXIgZGVwYXJ0bWVudHMgdGhleSBkcmF3IHRoZSBtb3N0IHNob3BwZXJzLCBjcmVhdGluZyB0aGUgY3Jvd2QgZWZmZWN0IGFuZCBkaXNjb3VyYWdpbmcgb3RoZXIgc2hvcHBlcnMgZnJvbSBhZGRpdGlvbmFsIGV4cGxvcmF0aW9uIGFuZCB2aXNpdGluZyBhcmVhcyBiZXlvbmQgdGhvc2UgdHdvIGRlcGFydG1lbnRzLiBXaXRoIHRoaXMgZGlzY292ZXJ5LCB0aGlzIHJldGFpbGVyIHdhcyBhZGRyZXNzZWQgY29tYmluaW5nIHBvcHVsYXIgd2l0aCBsZXNzIHBvcHVsYXIgcHJvZHVjdCBhcmVhcy4gSW4gU3RvcmUgQSwgdGhlIE1ham9yIERvbWVzdGljIEFwcGxpYW5jZXMgKE1EQSksIGEgbGVzcyB2aXNpdGVkIGRlcGFydG1lbnQsIHdhcyBwbGFjZWQgbmV4dCB0byBCb29rcywgYSBwb3B1bGFyIGNhdGVnb3J5LiBUaGUgcmV0YWlsZXIgd2FzIGFibGUgdG8gbWVhc3VyZSB0aGUgcmVzdWx0IHdpdGggQXJpYWRuZeKAmXMgcGxhdGZvcm0sIHdpdGggdGhlIGRhdGEgc2hvd2luZyB0aGF0IHNob3BwZXIgZmxvdyB3YXMgc3ByZWFkIG91dCwgc3VwcG9ydGluZyBiZXR0ZXIgc2hvcHBlciBqb3VybmV5cywgbW9yZSBzaG9wcGVycyB2aXNpdGluZyBtb3JlIGRlcGFydG1lbnRzLCBpbmNyZWFzZWQgZXhwbG9yYXRpb24gb2YgbGVzcyB2aXNpdGVkIGFyZWFzLCBhbmQgaW5jcmVhc2VkIHRvIHNhbGVzLlxuIVtzdG9yZS12aXNpdGF0aW9uMi5wbmddKC91cGxvYWRzL3N0b3JlX3Zpc2l0YXRpb24yXzg1MjFkOTk3MmIucG5nKVxuXG4jIyA0LiBVbHRpbWF0ZSBtYXRjaCwgYSBzdHJhdGVnaWMgbWF0Y2hcbkdvb2Qgc3RvcmUgZGVzaWduIGFuZCBsYXlvdXQgYWxzbyBlbmFibGVzIHNob3BwZXJzIHRvIGZpbmQgdmFyaW91cyBwcm9kdWN0cyBpbiBhIG1vcmUgY29udmVuaWVudCB3YXkuIEJ5IHBvc2l0aW9uaW5nIG1vcmUgb2Z0ZW4gdmlzaXRlZCBhbmQgbGVzcyBvZnRlbiB2aXNpdGVkIGNhdGVnb3JpZXMgdGhhdCBhcmUgY29tcGxlbWVudGFyeSwgdGhlIHBlcmZlY3QgbWF0Y2ggYWJvdmUgaXMgdHJhbnNmb3JtZWQgaW50byBhIHN0cmF0ZWdpYyBtYXRjaC4gVGhpcyBkZXNpZ24gc3RyYXRlZ3kgZW5jb3VyYWdlcyBpbmNyZWFzZWQgc3RvcmUgZXhwbG9yYXRpb24sIGNyZWF0ZXMgcHJvZHVjdCBkaXNjb3ZlcnksIGFuZCByZXN1bHRzIGluIGluY3JlYXNlZCBpbXB1bHNlIHB1cmNoYXNlcyBhcyB3ZWxsIGFzIHRoZSBjcm9zcy1zZWxsaW5nIGFuZCB1cC1zZWxsaW5nIGJlbmVmaXRzIG91dGxpbmVkIHByZXZpb3VzbHkuIEluIFN0b3JlIEEsIHNob3duIGJlbG93LCB0aGUgVG95IGRlcGFydG1lbnQgd2FzIHBsYWNlZCBpbiB3aGF0IGNvdWxkIGJlIHNlZW4gYXMgYSBjaGFsbGVuZ2luZyBsb2NhdGlvbi4gSG93ZXZlciwgYmVjYXVzZSBvZiBpdHMgcG9zaXRpb25pbmcgYWRqYWNlbnQgdG8gQ2hpbGRyZW4ncyBCb29rcywgc2hvcHBlcnMgdmlzaXRlZCBUb3lzIGV2ZW4gbW9yZSBvZnRlbiBhbmQgdGhlIGNyb3NzLXNlbGxpbmcgaW1wYWN0IGZyb20gQm9va3Mgd2FzIDk0JS5cblxuIVtkZXRhaWxlZC1zdG9yZS1oZWF0bWFwLnBuZ10oL3VwbG9hZHMvZGV0YWlsZWRfc3RvcmVfaGVhdG1hcF9jZDUxNTQxYzhhLnBuZylcblxuV2l0aCB0aGlzIHN0cmF0ZWdpYyBtYXRjaCBhcHByb2FjaCwgU3RvcmUgQSB3YXMgYWJsZSB0byBmcmVlIHVwIHZhbHVhYmxlIHNwYWNlIHdpdGhpbiB0aGUgc2hvcHBlcidzIGpvdXJuZXkgYnkgbW92aW5nIFRveXMgYW5kIG1vdmluZyBNREEgYWRqYWNlbnQgdG8gQm9va3MuIEFsdGhvdWdoIE1EQSBhbmQgQm9va3Mgd291bGQgbm90IHNlZW0gdG8gYmUgY29tcGxlbWVudGFyeSwgdGhhdCBtb3ZlIHJlc3VsdGVkIGluIGEgMlggaW5jcmVhc2UgaW4gdmlzaXRvcnMgdG8gdGhlIE1EQSBhcmVhIGFuZCBhIHNpZ25pZmljYW50IGluY3JlYXNlIHRvIHNhbGVzIGFzIHdlbGwuXG5cbiMgQ29uY2x1c2lvblxuVGhpcyByZWFsIGFuZCBzaW1wbGUgY2FzZSBzdHVkeSBwcm92ZXMgdGhhdCByZXRhaWwgc3RvcmUgbGF5b3V0IGRlc2lnbiBpcyBub3QganVzdCBhYm91dCBpbXByb3ZpbmcgbmF2aWdhdGlvbi4gSXQgbm93IHJlcXVpcmVzIGEgZGVlcCB1bmRlcnN0YW5kaW5nIG9mIHNob3BwZXIgZmxvdywgaW5jbHVkaW5nIGNyaXRpY2FsIGluc2lnaHRzIGFib3V0IGN1c3RvbWVyIGpvdXJuZXlzIGluIHNwZWNpZmljIHN0b3JlcyBpbmNsdWRpbmcgc2hvcHBlciBwYXRocywgZmxvdyBwYXR0ZXJucywgbnVtYmVyIG9mIGN1c3RvbWVycywgYXJlYXMgdmlzaXRlZCwgdGltZSBpbiBlYWNoIGFyZWEsIGFuZCBtb3JlLiBXaXRoIHRoaXMgZGF0YSBhbmQgaW5zaWdodHMgcmV0YWlsZXJzIGNhbiBkZXNpZ24gYW5kIGNvbnRpbnVvdXNseSBpbXByb3ZlIHN0b3JlIGxheW91dHMgdGhhdCBzdXBwb3J0IHNob3BwZXIgZXhwbG9yYXRpb24sIGFuIGV4Y2VwdGlvbmFsIGN1c3RvbWVyIGV4cGVyaWVuY2UsIGluY3JlYXNlZCBjb252ZXJzaW9uIGF0IHN0b3JlIGFuZCBkZXBhcnRtZW50IGxldmVsLCBhbmQgc2lnbmlmaWNhbnRseSBpbmNyZWFzZWQgc3RvcmUgcGVyZm9ybWFuY2UuIFJldGFpbCB3aW5uZXJzIHBvc3QtQ09WSUQtMTkgd2lsbCB1bmRlcnN0YW5kIHRoZWlyIHNob3BwZXIncyBqb3VybmV5cyB0aHJvdWdoIGRhdGEgYW5kIGluc2lnaHRzLCBhbGxvd2luZyB0aGVtIHRvIG9wdGltaXplIHRoZSBjdXN0b21lciBleHBlcmllbmNlIGFuZCByZWFwIHRoZSByZXdhcmRzIG9mIGluY3JlYXNlZCBsb3lhbHR5IGFuZCBzYWxlcy5cblxuV2FudCB0byBsZWFybiBtb3JlIGFib3V0IGhvdyBBcmlhZG5lIHN1cHBvcnRzIHJldGFpbGVycyBpbiB0cmFja2luZyBzaG9wcGVyIGZsb3cgcGF0dGVybnM/IEdvIGFoZWFkIGFuZCBib29rIGFuIGFwcG9pbnRtZW50OiBMZXQncyBUYWxrISIsImV4Y2VycHQiOiJJbiB0b2RheSdzIGNvbXBldGl0aXZlIHJldGFpbCBsYW5kc2NhcGUsIHVuZGVyc3RhbmRpbmcgdGhlIGJlaGF2aW91ciBhbmQgbW92ZW1lbnQgcGF0dGVybnMgb2Ygc2hvcHBlcnMgd2l0aGluIGEgc3RvcmUgb3Igc2hvcHBpbmcgY2VudHJlIGNhbiBwcm92aWRlIHZhbHVhYmxlIGluc2lnaHRzIGZvciByZXRhaWxlcnMgbG9va2luZyB0byBvcHRpbWl6ZSB0aGVpciBzYWxlcyBhbmQgY3VzdG9tZXIgZXhwZXJpZW5jZS4gU2hvcHBlciBmbG93IGFuYWx5dGljcywgYWxzbyBrbm93biBhcyBjb25zdW1lciB0cmFmZmljIGFuYWx5c2lzLCBpcyBhIHBvd2VyZnVsIHRvb2wgdGhhdCBjYW4gaGVscCByZXRhaWxlcnMgdG8gZ2FpbiBhIGRlZXBlciB1bmRlcnN0YW5kaW5nIG9mIGhvdyBjb25zdW1lcnMgaW50ZXJhY3QuLi4iLCJjcmVhdGVkQXQiOiIyMDIzLTA3LTEyVDA4OjM2OjUyLjM4OFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA3LTEyVDA4OjQ5OjQ2LjExMloiLCJwdWJsaXNoZWRBdCI6IjIwMjMtMDctMTJUMDg6NDk6NDYuMTA2WiIsImltYWdlIjp7ImRhdGEiOnsiaWQiOjUyLCJhdHRyaWJ1dGVzIjp7Im5hbWUiOiJzaG9wcGVyIGZsb3cucG5nIiwiYWx0ZXJuYXRpdmVUZXh0IjpudWxsLCJjYXB0aW9uIjpudWxsLCJ3aWR0aCI6MTUwMCwiaGVpZ2h0IjoxMDI0LCJmb3JtYXRzIjp7ImxhcmdlIjp7ImV4dCI6Ii5wbmciLCJ1cmwiOiIvdXBsb2Fkcy9sYXJnZV9zaG9wcGVyX2Zsb3dfMWNiMmY3NzdkYi5wbmciLCJoYXNoIjoibGFyZ2Vfc2hvcHBlcl9mbG93XzFjYjJmNzc3ZGIiLCJtaW1lIjoiaW1hZ2UvcG5nIiwibmFtZSI6ImxhcmdlX3Nob3BwZXIgZmxvdy5wbmciLCJwYXRoIjpudWxsLCJzaXplIjozOTAuNjcsIndpZHRoIjoxMDAwLCJoZWlnaHQiOjY4M30sInNtYWxsIjp7ImV4dCI6Ii5wbmciLCJ1cmwiOiIvdXBsb2Fkcy9zbWFsbF9zaG9wcGVyX2Zsb3dfMWNiMmY3NzdkYi5wbmciLCJoYXNoIjoic21hbGxfc2hvcHBlcl9mbG93XzFjYjJmNzc3ZGIiLCJtaW1lIjoiaW1hZ2UvcG5nIiwibmFtZSI6InNtYWxsX3Nob3BwZXIgZmxvdy5wbmciLCJwYXRoIjpudWxsLCJzaXplIjoxMTkuNjksIndpZHRoIjo1MDAsImhlaWdodCI6MzQxfSwibWVkaXVtIjp7ImV4dCI6Ii5wbmciLCJ1cmwiOiIvdXBsb2Fkcy9tZWRpdW1fc2hvcHBlcl9mbG93XzFjYjJmNzc3ZGIucG5nIiwiaGFzaCI6Im1lZGl1bV9zaG9wcGVyX2Zsb3dfMWNiMmY3NzdkYiIsIm1pbWUiOiJpbWFnZS9wbmciLCJuYW1lIjoibWVkaXVtX3Nob3BwZXIgZmxvdy5wbmciLCJwYXRoIjpudWxsLCJzaXplIjoyMzIuOTUsIndpZHRoIjo3NTAsImhlaWdodCI6NTEyfSwidGh1bWJuYWlsIjp7ImV4dCI6Ii5wbmciLCJ1cmwiOiIvdXBsb2Fkcy90aHVtYm5haWxfc2hvcHBlcl9mbG93XzFjYjJmNzc3ZGIucG5nIiwiaGFzaCI6InRodW1ibmFpbF9zaG9wcGVyX2Zsb3dfMWNiMmY3NzdkYiIsIm1pbWUiOiJpbWFnZS9wbmciLCJuYW1lIjoidGh1bWJuYWlsX3Nob3BwZXIgZmxvdy5wbmciLCJwYXRoIjpudWxsLCJzaXplIjozOS41OSwid2lkdGgiOjIyOSwiaGVpZ2h0IjoxNTZ9fSwiaGFzaCI6InNob3BwZXJfZmxvd18xY2IyZjc3N2RiIiwiZXh0IjoiLnBuZyIsIm1pbWUiOiJpbWFnZS9wbmciLCJzaXplIjoxNzMuODgsInVybCI6Ii91cGxvYWRzL3Nob3BwZXJfZmxvd18xY2IyZjc3N2RiLnBuZyIsInByZXZpZXdVcmwiOm51bGwsInByb3ZpZGVyIjoibG9jYWwiLCJwcm92aWRlcl9tZXRhZGF0YSI6bnVsbCwiY3JlYXRlZEF0IjoiMjAyMy0wNi0wNVQwODoyNDoyNS4xNTZaIiwidXBkYXRlZEF0IjoiMjAyMy0wNy0xMlQwODo0Njo1Ni43NjRaIn19fSwiYXV0aG9yIjp7ImRhdGEiOnsiaWQiOjYsImF0dHJpYnV0ZXMiOnsiZmlyc3RuYW1lIjoiU3RhdnJvdWxhIiwibGFzdG5hbWUiOiJTYXJyaSIsInVzZXJuYW1lIjpudWxsLCJwcmVmZXJlZExhbmd1YWdlIjpudWxsLCJjcmVhdGVkQXQiOiIyMDIzLTA1LTMxVDEwOjM2OjI2LjE4MVoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA1LTMxVDEwOjM3OjEyLjgwNFoifX19fX0seyJpZCI6MTIsImF0dHJpYnV0ZXMiOnsidGl0bGUiOiJDYXB0dXJlIEluc2lnaHRzIHdpdGggTmV4dC1HZW5lcmF0aW9uIFBhc3NlbmdlciBNYXBwaW5nIiwic2x1ZyI6Im5leHQtZ2VuLXBhc3Nlbmdlci1tYXBwaW5nIiwiY29udGVudCI6IioqQWlycG9ydHMqKiBhcmUga25vd24gZm9yIGJlaW5nIGJ1c3RsaW5nIGh1YnMgb2YgYWN0aXZpdHksIHdpdGggdGhvdXNhbmRzIG9mIHBhc3NlbmdlcnMgbW92aW5nIHRocm91Z2ggdGhlbSBkYWlseS4gKipNYW5hZ2luZyBwYXNzZW5nZXIgZmxvdyoqIGdvZXMgYmV5b25kIHNpbXBseSBvYnNlcnZpbmcgY2lyY3VsYXRpb247IGl0IGVuY29tcGFzc2VzICoqc2VjdXJpdHksIHRlY2hub2xvZ3ksIHBhc3NlbmdlciBiZWhhdmlvciwgYW5kIGluZnJhc3RydWN0dXJlKiosIGFuZCBhaXJwb3J0IG9wZXJhdG9ycyBhcmUgb3ZlcndoZWxtZWQgd2l0aCoqIGJlc3Bva2Ugc29sdXRpb25zKiogdGhhdCBhcmUgcG9wcGluZyB1cCBpbiBlYWNoIGFyZWEgdG8gYWRkcmVzcyBpbmRlcGVuZGVudCBuZWVkcy4gXG5cbiNBIENoYWxsZW5naW5nIExhbmRzY2FwZVxuVGhlIG1hcmtldCBpcyBiZWluZyBmbG9vZGVkIHdpdGggc29sdXRpb25zIHRoYXQgYXJlIGh5cGVyLWZvY3VzZWQgaW4gb25lIGNhcGFiaWxpdHksIGxlYXZpbmcgVGVjaG5vbG9neSBhbmQgT3BlcmF0aW9ucyBkZXBhcnRtZW50cyBncmFwcGxpbmcgd2l0aCB0aGUgZGVwbGV0ZWQgcmVzb3VyY2VzIGFuZCBlZmZvcnQgb2YgaW50ZWdyYXRpbmcgbXVsdGlwbGUgdmVuZG9ycyBpbiBvcmRlciB0byBnZXQgYSBjbGVhciBwaWN0dXJlIG9mIHRoZSBlbnRpcmUgYWlycG9ydC5cblxuIVtUQUwtb250YXJpby1pbnRlcm5hdGlvbmFsLWFpcnBvcnQtc2VjdWlydHktbGluZS1PTlROT1RQQVNTMTAyMi0xOTIwMzRjODg5MDU0YWQ4OTJlZjUwY2Q4ZWY3YmQyNC53ZWJwXSgvdXBsb2Fkcy9UQUxfb250YXJpb19pbnRlcm5hdGlvbmFsX2FpcnBvcnRfc2VjdWlydHlfbGluZV9PTlROT1RQQVNTXzEwMjJfMTkyMDM0Yzg4OTA1NGFkODkyZWY1MGNkOGVmN2JkMjRfNWM0MTY3NjVkMS53ZWJwKVxuXG5UaG9zZSBjaGFsbGVuZ2VzIGFyZSBjb21wb3VuZGVkIGJ5IGFuIGV2ZXItaW5jcmVhc2luZyBwYXNzZW5nZXIgdm9sdW1lLiBUaGVbIDIwMjMgQWlycG9ydCBCdXNpbmVzcyBJbmZyYXN0cnVjdHVyZSBTdXJ2ZXldKGh0dHBzOi8vd3d3LmF2aWF0aW9ucHJvcy5jb20vYWlycG9ydHMvd2hpdGVwYXBlci81MzAyOTE1Ni8yMDIzLWFpcnBvcnQtYnVzaW5lc3MtaW5mcmFzdHJ1Y3R1cmUtc3VydmV5KSByZXZlYWxlZCB0aGF0IDU0JSBvZiBhaXJwb3J0cyByZXBvcnRlZCB0aGF0IGV4cGFuZGluZyB0aGVpciBjYXBhY2l0eSBpcyBhIHRvcCBwcmlvcml0eSBhcyB0aGV5IGFyZSBhbHJlYWR5IG9wZXJhdGluZyBhdCB0aGVpciBmdWxsIGNhcGFiaWxpdGllcy4gV2l0aCBubyByb29tIGZvciBlcnJvciwgY3Jvd2RlZCBwYXNzZW5nZXIgZmxvd3MgYXJlIGFyaXNpbmcgYXQgY2hlY2staW4gY291bnRlcnMsIHNlY3VyaXR5IGNoZWNrcG9pbnRzLCBhbmQgcG9zdC1zZWN1cml0eSBjaXJjdWxhdGlvbiBhcmVhcyB0aGF0IGxlYWQgdG8gbG9uZyB3YWl0IHRpbWVzLCBib3R0bGVuZWNrZWQgdGVybWluYWxzLCBhbmQgZGVsYXlzLiBcblxuIyBTb2x1dGlvbiBHYXBzXG5NYW55IGFpcnBvcnRzIHRoYXQgaW1wbGVtZW50ZWQgcGllY2VtZWFsIHNvbHV0aW9ucyBhcmUgYWxyZWFkeSBmaW5kaW5nIGdhcHMgaW4gdGhlaXIgaW5zaWdodHMgYW5kIHZpc2liaWxpdHksIHdoaWNoIG1ha2VzIGl0IGRpZmZpY3VsdCB0byBwcm92aWRlIHZhbHVlIHRvIHN0YWtlaG9sZGVycyBhbmQgdG8ganVzdGlmeSBpbXBsZW1lbnRhdGlvbi5cblxuIVthcmlhZG5lLWFsdGVybmF0aXZlLWNhbWVhLmpwZ10oL3VwbG9hZHMvYXJpYWRuZV9hbHRlcm5hdGl2ZV9jYW1lYV9kYmEwMjU4OGMyLmpwZylcblxuQ2FtZXJhcywgd2hpY2ggYXJlIG5lY2Vzc2FyeSBmb3IgY2FwdHVyaW5nIHNlY3VyaXR5IGZvb3RhZ2UsIGNhbiBhbHNvIGJlIHVzZWQgdG8gZGlzdGluZ3Vpc2ggYW5kIGNvdW50IHBlb3BsZSBmcm9tIG90aGVyIG1vdmluZyBvYmplY3RzIHN1Y2ggYXMgbHVnZ2FnZSBjYXJ0cyBhbmQgc3VpdGNhc2VzLiBIb3dldmVyLCBibGluZCBzcG90cyBhbmQgcG9vciBjYW1lcmEgYW5nbGVzIGxlYWQgdG8gbG93IGFjY3VyYWN5LCBhbmQgZGVtb2dyYXBoaWNzIG9yIGNvdW50aW5nIHNvZnR3YXJlIGNhbiBoYXZlIGRpZmZpY3VsdHkgd2hlbiBzcGFjZXMgYXJlIGNyb3dkZWQuIFNpbWlsYXJseSwgVGltZSBvZiBGbGlnaHQgKFRvRikgc2Vuc29ycyBtYXkgYmUgZWFzeSB0byBpbnN0YWxsIGJ1dCBoYXZlIGEgbGltaXRlZCByYW5nZSwgc3RydWdnbGUgd2l0aCBhY2N1cmFjeSB3aGVuIHBhc3NlbmdlcnMgYXJlIGluIGNsb3NlIHByb3hpbWl0eSwgYW5kIGxhY2sgdGhlIGFiaWxpdHkgdG8gdHJhY2sgcmV0dXJuaW5nIHZpc2l0b3JzIG9yIHBhc3NlbmdlciBmbG93IHRyYWplY3Rvcmllcy4gXG5PdGhlciBzb2x1dGlvbnMgc3VjaCBhcyBMaURBUiwgQmx1ZXRvb3RoLCBhbmQgTFRFL0dTTSBuZXR3b3JrcyBleHBlcmllbmNlIGNoYWxsZW5nZXMgd2l0aCBzY2FsYWJpbGl0eSBkdWUgdG8gZXhwZW5zZSBvciBsYWNrIG9mIGZ1blxuY3Rpb25hbGl0eSBpbiB0eXBpY2FsIGFpcnBvcnQgc2NlbmFyaW9zLiBNYW55IG9mIHRoZXNlIHNvbHV0aW9ucyBlbmNvdW50ZXIgcHJpdmFjeSBjb25jZXJucyB3aXRoIHNpdHVhdGlvbnMgc3VjaCBhcyBmYWNpYWwgcmVjb2duaXRpb24gb3IgZGF0YSBjb2xsZWN0aW9uLiBcblxuIyBBcmlhZG5lOiBBIE5leHQtR2VuZXJhdGlvbiBPZmZlcmluZ1xuQXJpYWRuZSBzb3VnaHQgdG8gc3RyZWFtbGluZSB0aGUgdGVjaG5vbG9neSBsYW5kc2NhcGUgYnkgYnVpbGRpbmcgYSBwbGF0Zm9ybSB0aGF0IGFkZHJlc3NlcyBidXNpbmVzcyBpbnRlbGxpZ2VuY2UgbmVlZHMgd2hpbGUgc2ltdWx0YW5lb3VzbHkgcHJvdmlkaW5nIHNlY3VyZSBkYXRhIGNvbXBsaWFuY2UuIFxuXG5BcmlhZG5lIGRldmVsb3BlZCBzbWFsbCwgZGlzY3JldGUgc2Vuc29ycyB0aGF0IGRldGVjdCB1bmlxdWUgc2lnbmFscyBlbWl0dGVkIGJ5IHNtYXJ0cGhvbmVzIGV2ZW4gd2hlbiB0aG9zZSBkZXZpY2VzIGFyZSBpbiBhaXJwbGFuZSBtb2RlLiBUaGUgZGF0YSBjb2xsZWN0aW9uIGlzIDEwMCUgR0RQUiBjb21wbGlhbnQgYW5kIGRvZXNu4oCZdCBjb2xsZWN0IG9yIHN0b3JlIHBlcnNvbmFsIGluZm9ybWF0aW9uLCBwcm92aWRpbmcgZGF0YSBzZWN1cml0eSBhbmQgcHJpdmFjeSByZWFzc3VyYW5jZS4gXG5cbiFbYXJpYWRuZS1zdXJ2ZXlvcnMgKDQpLnBuZ10oL3VwbG9hZHMvYXJpYWRuZV9zdXJ2ZXlvcnNfNF8xYWQ5OGI2MGQ2LnBuZylcblxuIyMgQWNjdXJhdGUgSm91cm5leSBNYXBwaW5nIGFuZCBBbmFseXRpY3NcbkFyaWFkbmXigJlzIHNlbnNvcnMgY2FuIGRldGVjdCB0aGUgbG9jYXRpb24gYW5kIGpvdXJuZXkgb2YgaW5kaXZpZHVhbCBkZXZpY2Ugc2lnbmFscyB3aXRoIHVwIHRvIDEgbWV0ZXIgb2YgYWNjdXJhY3kgYW5kIGluY2x1ZGVzIHRoZSBhYmlsaXR5IHRvIGRldGVybWluZSBpZiBhIHNpbmdsZSBwZXJzb24gaXMgY2FycnlpbmcgbW9yZSB0aGFuIG9uZSBkZXZpY2UsIG9yIGlmIG11bHRpcGxlIHBlb3BsZSBhcmUgdHJhdmVsaW5nIHRvZ2V0aGVyIGFzIGEgZ3JvdXAuIEFuYWx5dGljcyBzb2x1dGlvbnMgaW5jbHVkZSBwZW9wbGUgY291bnRpbmcsIGR3ZWxsIHRpbWUsIGhlYXRtYXBwaW5nLCB0cmFuc2l0aW9ucyBiZXR3ZWVuIGFyZWFzLCBhbmQgY3VzdG9tZXIgcGF0aHMuIEFsbCB0aGVzZSBkYXRhIHByb3ZpZGVzIHZhbHVhYmxlIGluc2lnaHRzIHRoYXQgY2FuIGluZm9ybSBub24tYWVyb25hdXRpY2FsIHJldmVudWUgZGVjaXNpb25zLCBvcHRpbWl6ZSB1dGlsaXphdGlvbiBvZiByZXNvdXJjZXMsIGltcHJvdmUgZWZmaWNpZW5jeSBhbmQgcmVkdWNlIHdhc3RlLiBcblxuIyMgUmVhbC1UaW1lIERhdGEgYW5kIEFsZXJ0c1xuXG4hW3RpbHRlZC1hbmFseXRpY3MucG5nXSgvdXBsb2Fkcy90aWx0ZWRfYW5hbHl0aWNzX2UyMzYyZmZkMzgucG5nKVxuXG5EYXNoYm9hcmRzIHNob3dpbmcgcmVhbC10aW1lIGNpcmN1bGF0aW9uIGRhdGEgZm9yIHRoZSBlbnRpcmUgY3VyYi10by1nYXRlIHBhc3NlbmdlciBqb3VybmV5LCBhbGxvd2luZyBvcGVyYXRpb25zIGFuZCBzZWN1cml0eSBzdGFmZiB0byBwcm9hY3RpdmVseSBtYW5hZ2UgY29uZ2VzdGlvbiBhcyB3ZWxsIGFzIGFudGljaXBhdGUgamFuaXRvcmlhbCBvciBlbXBsb3llZSBzY2hlZHVsaW5nIG5lZWRzLiBDdXN0b21pemVkIHRocmVzaG9sZHMgY2FuIGJlIGJ1aWx0IGludG8gdGhlIHN5c3RlbSB0aGF0IGFsZXJ0IHN0YWZmIHRocm91Z2ggbm90aWZpY2F0aW9ucyBvbmNlIHRoZSB0aHJlc2hvbGQgaXMgbWV0LCBlbmFibGluZyBpbW1lZGlhdGUgYXdhcmVuZXNzIG9mIHRoZSBlbnRpcmUgdGVybWluYWwuIFxuXG4jIyBQcmVkaWN0aXZlIG1vZGVsaW5nXG5IaXN0b3JpY2FsIGRhdGEgaXMgY29tYmluZWQgd2l0aCByZWFsLXRpbWUgbW9uaXRvcmluZyB0byBpZGVudGlmeSBwYXR0ZXJucyBhbmQgdHJlbmRzLCBhbGxvd2luZyB0aGUgYWlycG9ydCB0byBwcmVkaWN0IGFuZCBtYXAgaG93IGNoYW5nZXMgd2lsbCBpbXBhY3QgcGFzc2VuZ2VyIGZsb3cgYW5kIG9wZXJhdGlvbnMuIFxuXG4jIyBBZGRpdGlvbmFsIFNvbHV0aW9uc1xuSW4gYWRkaXRpb24sIEFyaWFkbmXigJlzIHBsYXRmb3JtIGNhbiBhbHNvIG9mZmVyIEVSUCBpbnRlZ3JhdGlvbiwgc2FsZXMgY29udmVyc2lvbiB0cmFja2luZyB3aXRoaW4gYWlyc2lkZSwgd29ya2ZvcmNlIG1hbmFnZW1lbnQsIGFwcC1mcmVlIG5hdmlnYXRpb24gZm9yIHBhc3NlbmdlcnMgYW5kIGVtcGxveWVlcywgY2F0Y2htZW50IGFyZWEgZGVmaW5pdGlvbiwgYXNzZXQgdHJhY2tpbmcsIGxveWFsdHkgcmF0ZXMsIGFuZCBtb3JlLiBcblxuIyBBbnN3ZXJpbmcgdGhlIENoYWxsZW5nZVxuVGhlIGxhbmRzY2FwZSBpcyBjaGFuZ2luZyBmb3IgYWlycG9ydHMsIGJvdGggaW4gdGVybXMgb2YgdGVjaG5vbG9neSBhbmQgcGFzc2VuZ2VyIGVuZ2FnZW1lbnQuIEFyaWFkbmUgbWV0IHRoYXQgY2hhbGxlbmdlIGFuZCBicmluZ3MgYSBob2xpc3RpYyBhcHByb2FjaCB0byBwYXNzZW5nZXIgYW5hbHl0aWNzIHRocm91Z2ggdGhlaXIgdW5pcXVlLCBzZWN1cmUsIGFuZCBjb3N0LWVmZmVjdGl2ZSBzb2x1dGlvbi4gQm90aCBmbGV4aWJsZSBhbmQgc2NhbGFibGUsIEFyaWFkbmUgcHJvdmlkZXMgYmVzdC1pbi1jbGFzcyB2YWx1ZSB0byBhaXJwb3J0cyBhY3Jvc3MgdGhlIGdsb2JlLiBcblxuW1NjaGVkdWxlIGEgZGVtb10oaHR0cHM6Ly9hcmlhZG5lLmluYy9sZXRzdGFsay8pIHRvIGxlYXJuIG1vcmUuICIsImV4Y2VycHQiOiJcbk5hdmlnYXRpbmcgYW4gaW5jcmVhc2luZ2x5IGNvbXBsZXggYWlycG9ydCBsYW5kc2NhcGUsIEFyaWFkbmUgcHJlc2VudHMgYSBzdHJlYW1saW5lZCwgR0RQUi1jb21wbGlhbnQgcGxhdGZvcm0gZm9yIG1hbmFnaW5nIHBhc3NlbmdlciBmbG93LiBBZGRyZXNzaW5nIGN1cnJlbnQgZ2FwcyBpbiBhaXJwb3J0IHNvbHV0aW9ucywgQXJpYWRuZSdzIHRlY2hub2xvZ3kgZGV0ZWN0cyB1bmlxdWUgc2lnbmFscyBmcm9tIHNtYXJ0cGhvbmVzIHRvIGNyZWF0ZSBhY2N1cmF0ZSBqb3VybmV5IG1hcHMsIHByb3ZpZGluZyByZWFsLXRpbWUgYW5hbHl0aWNzIGFuZCBwcmVkaWN0aXZlIG1vZGVsaW5nIGNhcGFiaWxpdGllcyB0byBvcHRpbWl6ZSBhaXJwb3J0IG9wZXJhdGlvbnMuIFRoZSBwbGF0Zm9ybSBvZmZlcnMgYSBob2xpc3RpYyBhcHByb2FjaCB0byBhaXJwb3J0IG1hbmFnZW1lbnQsIHdpdGggYWRkZWQgY2FwYWJpbGl0aWVzIGxpa2UgRVJQIGludGVncmF0aW9uLCBzYWxlcyBjb252ZXJzaW9uIHRyYWNraW5nLCBhcHAtZnJlZSBuYXZpZ2F0aW9uLCBhbmQgbW9yZS4gQnkgbWFycnlpbmcgdGVjaG5vbG9neSBhbmQgcGFzc2VuZ2VyIGVuZ2FnZW1lbnQgaW4gYSBzZWN1cmUgYW5kIGNvc3QtZWZmZWN0aXZlIHNvbHV0aW9uLCBBcmlhZG5lIGlzIG1lZXRpbmcgdGhlIGNoYWxsZW5nZXMgb2YgbW9kZXJuIGFpcnBvcnQgb3BlcmF0aW9ucyBoZWFkLW9uLiIsImNyZWF0ZWRBdCI6IjIwMjMtMDYtMDVUMTM6MzI6NDcuNjc1WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDYtMTJUMDg6NTk6MDcuMDk4WiIsInB1Ymxpc2hlZEF0IjoiMjAyMy0wNi0wNVQxMzozMjo1Ni4wMTBaIiwiaW1hZ2UiOnsiZGF0YSI6eyJpZCI6NjAsImF0dHJpYnV0ZXMiOnsibmFtZSI6Im5leHQtZ2VuLXBhc3Nlbmdlci1tYXBwaW5nICgxKS5qcGciLCJhbHRlcm5hdGl2ZVRleHQiOm51bGwsImNhcHRpb24iOm51bGwsIndpZHRoIjoyMDAwLCJoZWlnaHQiOjEzMzMsImZvcm1hdHMiOnsibGFyZ2UiOnsiZXh0IjoiLmpwZyIsInVybCI6Ii91cGxvYWRzL2xhcmdlX25leHRfZ2VuX3Bhc3Nlbmdlcl9tYXBwaW5nXzFfNDM1Y2I5N2QxZC5qcGciLCJoYXNoIjoibGFyZ2VfbmV4dF9nZW5fcGFzc2VuZ2VyX21hcHBpbmdfMV80MzVjYjk3ZDFkIiwibWltZSI6ImltYWdlL2pwZWciLCJuYW1lIjoibGFyZ2VfbmV4dC1nZW4tcGFzc2VuZ2VyLW1hcHBpbmcgKDEpLmpwZyIsInBhdGgiOm51bGwsInNpemUiOjkzLjY0LCJ3aWR0aCI6MTAwMCwiaGVpZ2h0Ijo2Njd9LCJzbWFsbCI6eyJleHQiOiIuanBnIiwidXJsIjoiL3VwbG9hZHMvc21hbGxfbmV4dF9nZW5fcGFzc2VuZ2VyX21hcHBpbmdfMV80MzVjYjk3ZDFkLmpwZyIsImhhc2giOiJzbWFsbF9uZXh0X2dlbl9wYXNzZW5nZXJfbWFwcGluZ18xXzQzNWNiOTdkMWQiLCJtaW1lIjoiaW1hZ2UvanBlZyIsIm5hbWUiOiJzbWFsbF9uZXh0LWdlbi1wYXNzZW5nZXItbWFwcGluZyAoMSkuanBnIiwicGF0aCI6bnVsbCwic2l6ZSI6MzMuMiwid2lkdGgiOjUwMCwiaGVpZ2h0IjozMzN9LCJtZWRpdW0iOnsiZXh0IjoiLmpwZyIsInVybCI6Ii91cGxvYWRzL21lZGl1bV9uZXh0X2dlbl9wYXNzZW5nZXJfbWFwcGluZ18xXzQzNWNiOTdkMWQuanBnIiwiaGFzaCI6Im1lZGl1bV9uZXh0X2dlbl9wYXNzZW5nZXJfbWFwcGluZ18xXzQzNWNiOTdkMWQiLCJtaW1lIjoiaW1hZ2UvanBlZyIsIm5hbWUiOiJtZWRpdW1fbmV4dC1nZW4tcGFzc2VuZ2VyLW1hcHBpbmcgKDEpLmpwZyIsInBhdGgiOm51bGwsInNpemUiOjYxLjUxLCJ3aWR0aCI6NzUwLCJoZWlnaHQiOjUwMH0sInRodW1ibmFpbCI6eyJleHQiOiIuanBnIiwidXJsIjoiL3VwbG9hZHMvdGh1bWJuYWlsX25leHRfZ2VuX3Bhc3Nlbmdlcl9tYXBwaW5nXzFfNDM1Y2I5N2QxZC5qcGciLCJoYXNoIjoidGh1bWJuYWlsX25leHRfZ2VuX3Bhc3Nlbmdlcl9tYXBwaW5nXzFfNDM1Y2I5N2QxZCIsIm1pbWUiOiJpbWFnZS9qcGVnIiwibmFtZSI6InRodW1ibmFpbF9uZXh0LWdlbi1wYXNzZW5nZXItbWFwcGluZyAoMSkuanBnIiwicGF0aCI6bnVsbCwic2l6ZSI6MTAuMzYsIndpZHRoIjoyMzQsImhlaWdodCI6MTU2fX0sImhhc2giOiJuZXh0X2dlbl9wYXNzZW5nZXJfbWFwcGluZ18xXzQzNWNiOTdkMWQiLCJleHQiOiIuanBnIiwibWltZSI6ImltYWdlL2pwZWciLCJzaXplIjoyNjAuNDMsInVybCI6Ii91cGxvYWRzL25leHRfZ2VuX3Bhc3Nlbmdlcl9tYXBwaW5nXzFfNDM1Y2I5N2QxZC5qcGciLCJwcmV2aWV3VXJsIjpudWxsLCJwcm92aWRlciI6ImxvY2FsIiwicHJvdmlkZXJfbWV0YWRhdGEiOm51bGwsImNyZWF0ZWRBdCI6IjIwMjMtMDYtMDlUMDk6NTY6MjkuMzM5WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDYtMDlUMDk6NTY6MjkuMzM5WiJ9fX0sImF1dGhvciI6eyJkYXRhIjp7ImlkIjoyLCJhdHRyaWJ1dGVzIjp7ImZpcnN0bmFtZSI6IkdvdmFydGhhbiIsImxhc3RuYW1lIjoiTmF0YXJhamFuIiwidXNlcm5hbWUiOm51bGwsInByZWZlcmVkTGFuZ3VhZ2UiOm51bGwsImNyZWF0ZWRBdCI6IjIwMjMtMDUtMTZUMDg6MzQ6NDguMTM2WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDUtMTZUMDk6MDg6MjUuMTQ5WiJ9fX19fSx7ImlkIjoxMSwiYXR0cmlidXRlcyI6eyJ0aXRsZSI6IkhvdyB0byBtYWtlIHNob3BwaW5nIG1hbGxzIGZ1dHVyZS1wcm9vZiIsInNsdWciOiJmdXR1cmUtcHJvb2YteW91ci1tIiwiY29udGVudCI6IlJ1bm5pbmcgYSBzaG9wcGluZyBtYWxsIGlzIGNoYWxsZW5naW5nLCB3aXRoIHRoZSBuZWVkIHRvIGVuc3VyZSB0ZW5hbnQgYW5kIGN1c3RvbWVyIHNhdGlzZmFjdGlvbiB3aGlsZSBtYXhpbWl6aW5nIHByb2ZpdHMuIFRoZSByaXNlIG9mIG9ubGluZSByZXRhaWwgaGFzIGNoYW5nZWQgY29uc3VtZXIgc2hvcHBpbmcgYmVoYXZpb3IsIGFuZCB0aGUgcGFuZGVtaWMgZnVydGhlciBkaXNydXB0ZWQgc2hvcHBpbmcgZXhwZXJpZW5jZXMuIFRvIGFkYXB0IHRvIHRoZXNlIGNoYWxsZW5nZXMsIG1hbGxzIG5lZWQgdG8gZ2F0aGVyIGRhdGEgZm9yIGluZm9ybWVkIGRlY2lzaW9uLW1ha2luZy4gVGhhdOKAmXMgd2hlcmUgQXJpYWRuZSBjb21lcyBpbiwgYXNzaXN0aW5nIHNob3BwaW5nIG1hbGxzIGluIHN0ZXBwaW5nIGludG8gdGhlIGZ1dHVyZSBhbmQgYWNoaWV2aW5nIHRoZWlyIGdvYWxzIGJ5IHByb3ZpZGluZyB2YXJpb3VzIGJlbmVmaXRzLiBTaG9wcGluZyBtYWxscyBzaG91bGQgc3RyYXRlZ2ljYWxseSBmb2N1cyBvbiBvZmZlcmluZyBjb252ZW5pZW5jZSBhbmQgZXhwZXJpZW5jZSBhcyBhZGRlZC12YWx1ZSBlbGVtZW50cywgYXMgdGhleSBjYW4ndCBjb21wZXRlIHdpdGggdGhlIHVubGltaXRlZCBwcm9kdWN0IHNlbGVjdGlvbiBvZiBvbmxpbmUgc2hvcHMuXG5cbk1hbnkgc2hvcHBpbmcgbWFsbHMgYXJlIGFscmVhZHkgZm9jdXNpbmcgdGhlaXIgZWZmb3J0cyBvbiBkaWdpdGFsaXphdGlvbiBhbmQgY3JlYXRpbmcgdW5pcXVlIHNob3BwaW5nIGV4cGVyaWVuY2VzLiBUbyBhY2hpZXZlIHRoZSBsYXR0ZXIsIHRoZXkgYXJlIGFkb3B0aW5nIFtzdHJhdGVnaWVzIF0oaHR0cHM6Ly93d3cubWNraW5zZXkuY29tL2NhcGFiaWxpdGllcy9ncm93dGgtbWFya2V0aW5nLWFuZC1zYWxlcy9vdXItaW5zaWdodHMvdGhlLWZ1dHVyZS1vZi10aGUtc2hvcHBpbmctbWFsbClzdWNoIGFzIGNyZWF0aW5nIHNtYWxsZXIgc2hvcHMsIGhvc3RpbmcgYSBkaXZlcnNlIG1peCBvZiB0ZW5hbnRzLCBhbmQgY2F0ZXJpbmcgdG8gc3BlY2lhbGl6ZWQgbmljaGVzLiBBZGRpdGlvbmFsbHksIHBvcC11cCBzdG9yZXMgYXJlIGJlaW5nIHV0aWxpemVkIGJleW9uZCB0aGVpciB0cmFkaXRpb25hbCBzZWFzb25hbCBhbmQgcHJvbW90aW9uLWJhc2VkIHB1cnBvc2VzLlxuXG4jIFdoeSBjYW4gdGhlIG1peCBvZiBzbWFsbGVyIGFuZCBwb3AtdXAgc3RvcmVzIGxlYWQgc2hvcHBpbmcgbWFsbHMgdG8gdGhlIGZ1dHVyZT9cblxuXG5UaGUgbWl4IG9mIHNtYWxsZXIgYW5kIHBvcC11cCBzdG9yZXMgaW4gc2hvcHBpbmcgbWFsbHMgY2FuIGxlYWQgdG8gYSBtb3JlIHZpYnJhbnQgYW5kIHN1Y2Nlc3NmdWwgZnV0dXJlIGZvciBzZXZlcmFsIHJlYXNvbnMuIEZpcnN0bHksIHNtYWxsZXIgc3RvcmVzIGFuZCBwb3AtdXBzIHByb3ZpZGUgYSBkaXZlcnNlIGFuZCB1bmlxdWUgc2hvcHBpbmcgZXhwZXJpZW5jZSB0aGF0IGRpZmZlcnMgZnJvbSB0aGUgc3RhbmRhcmQgY2hhaW4gc3RvcmVzIGZvdW5kIGluIG1hbnkgbWFsbHMuIFRoaXMgYXBwZWFscyB0byBjb25zdW1lcnMgd2hvIGFyZSBzZWVraW5nIHNvbWV0aGluZyBkaWZmZXJlbnQgYW5kIHBlcnNvbmFsaXplZC5cblxuTW9yZW92ZXIsIHRoZXNlIHNtYWxsZXIgc3RvcmVzIGFuZCBwb3AtdXBzIG9mZmVyIGZsZXhpYmlsaXR5IGFuZCBhZGFwdGFiaWxpdHkgdGhhdCBsYXJnZXIgY2hhaW4gc3RvcmVzIG9mdGVuIGxhY2suIFRoZXkgYWxsb3cgZm9yIHRoZSBpbmNsdXNpb24gb2YgYWRkaXRpb25hbCBzZXJ2aWNlcyBhbmQgZXhwZXJpZW5jZXMgaW4gdGhlIG1hbGwsIHN1Y2ggYXMgbm9uLXRyYWRpdGlvbmFsIGZvb2Qgb3B0aW9ucywgZ2F0aGVyaW5nIGNlbnRyZXMsIGNvbmNlcnRzLCBzcGFzLCBmaXRuZXNzIGNsdWJzLCBhbmQgZ3JvY2VyaWVzLiBUaGlzIHRyYW5zZm9ybXMgdGhlIG1hbGwgaW50byBhIGR5bmFtaWMgYW5kIG11bHRpZmFjZXRlZCBkZXN0aW5hdGlvbiwgZW5jb3VyYWdpbmcgY29uc3VtZXJzIHRvIHZpZXcgc2hvcHBpbmcgYXMgcGFydCBvZiBhIFticm9hZGVyIGV4cGVyaWVuY2VdKGh0dHBzOi8vd3d3Lm15dG90YWxyZXRhaWwuY29tL2FydGljbGUvMy13YXlzLW1hbGxzLXJldGFpbGVycy1jYW4td2luLXdpdGgtZGl2ZXJzZS1zaG9wcGluZy1leHBlcmllbmNlcy8pIHJhdGhlciB0aGFuIHNpbXBseSB2aXNpdGluZyBpbmRpdmlkdWFsIG1lZ2Etc3RvcmVzLiBcblxuUG9wLXVwIHN0b3JlcywgdHJhZGl0aW9uYWxseSBhc3NvY2lhdGVkIHdpdGggc2hvcnQtdGVybSByZXRhaWwgc2V0dGluZ3MsIGNhbiBhbHNvIHNlcnZlIGFzIHZhbHVhYmxlIHRlc3RpbmcgZ3JvdW5kcyBmb3IgZXN0YWJsaXNoZWQgcmV0YWlsZXJzLiBUaGV5IGVuYWJsZSB0aGUgdGVzdGluZyBvZiBuZXcgcHJvZHVjdHMsIGV2YWx1YXRpb24gb2YgY3VzdG9tZXIgaW50ZXJlc3QsIGFuZCBpbmNyZWFzZWQgYnJhbmQgb3IgcHJvZHVjdCBhd2FyZW5lc3MuIEFkZGl0aW9uYWxseSwgdGhlIGluY2x1c2lvbiBvZiBzbWFsbCBhbmQgbG9jYWwgYnVzaW5lc3NlcyBvciB5b3VuZyBlbnRyZXByZW5ldXJzIGluIG1hbGxzIGJlY29tZXMgcG9zc2libGUsIG9mZmVyaW5nIG9wcG9ydHVuaXRpZXMgZm9yIHRoZXNlIGNvbXBhbmllcyB0aGF0IG1heSBub3QgaGF2ZSB0aGUgcmVzb3VyY2VzIGZvciBsb25nLXRlcm0gdGVuYW5jeS5cblxuQSBzdWNjZXNzZnVsIG1peCBvZiBzbWFsbGVyIHN0b3JlcyBjYW4gYmVjb21lIGEgc3RyYXRlZ2ljIGFzc2V0IGZvciBtYWxsIG93bmVycywgY29tcGxlbWVudGluZyB0aGUgYW5jaG9yIHRlbmFudHMgdGhhdCBkcml2ZSB0cmFmZmljLiBJdCBicmluZ3Mgbm92ZWx0eSBhbmQgdW5pcXVlIGV4cGVyaWVuY2VzIHRvIHZpc2l0b3JzLCBvZmZlcmluZyBtb3JlIGlubm92YXRpdmUgcHJvZHVjdHMgYW5kIHNlcnZpY2VzIHRoYXQgY2F0ZXIgdG8gbmljaGUgbWFya2V0cywgc3VjaCBhcyBsdXh1cnkgYnJhbmRzLiBTbWFsbCBzdG9yZXMgb2Z0ZW4gaGF2ZSBrbm93bGVkZ2VhYmxlIHNhbGVzIGFzc2lzdGFudHMgd2hvIHByb3ZpZGUgaW5kaXZpZHVhbGl6ZWQgYXR0ZW50aW9uLCBmb3N0ZXJpbmcgYSBzZW5zZSBvZiBjb21tdW5pdHkgYW5kIGN1c3RvbWVyIGxveWFsdHkuIEZ1cnRoZXJtb3JlLCB0aGUgbG93ZXIgb3ZlcmhlYWQgY29zdHMgb2Ygc21hbGwgc3RvcmVzIGFsbG93IGZvciBtb3JlIGNvbXBldGl0aXZlIHByaWNpbmcsIG1ha2luZyBzaG9wcGluZyBpbiB0aGVzZSBzdG9yZXMgbW9yZSBhZmZvcmRhYmxlIGZvciBjdXN0b21lcnMuXG5cblxuIyBXaHkgYnVpbGRpbmcgYXBwcyBtaWdodCBub3QgYmUgdGhlIHNpbmdsZSB3YXkgdG93YXJkcyB0aGUgZnV0dXJlP1xuXG5BdCBBcmlhZG5lLCB3ZSBoYXZlIHRoZSBhYmlsaXR5IHRvIHRyYWNrIHRoZSBudW1iZXIgb2YgY3VzdG9tZXJzIHdobyBoYXZlIGluc3RhbGxlZCB0aGUgc2hvcHBpbmcgY2VudHJl4oCZcyBhcHBsaWNhdGlvbiwgYW5kIHdoYXQgd2UndmUgZm91bmQgaXMgYSByZWN1cnJpbmcgcmF0aW86IG9uZSBwZXJzb24gaW4gb25lIHRob3VzYW5kIHZpc2l0b3JzIGlzIHVzaW5nIHRoZSBhcHBsaWNhdGlvbi4gU28sIG9uZSBpbiB0aG91c2FuZCB2aXNpdG9ycyBhcmUgaW5zdGFsbGluZyB0aGUgYXBwbGljYXRpb24gb2YgdGhlIHNob3BwaW5nIGNlbnRyZS4gVGhpcyBtaWdodCBzZWVtIGNvdW50ZXJpbnR1aXRpdmUsIGVzcGVjaWFsbHkgaWYgeW91IGhhdmUgcGVyc29uYWxseSB3aXRuZXNzZWQgdGVucyBvciBldmVuIGh1bmRyZWRzIG9mIHRob3VzYW5kcyBvZiBkb3dubG9hZHMuIEFmdGVyIGFsbCwgdGhlIG51bWJlciBvZiB2aXNpdG9ycyBpbiB0aGUgc2hvcHBpbmcgY2VudHJlIGlzIHVubGlrZWx5IHRvIGV4Y2VlZCB0d2VudHktZml2ZSB0aG91c2FuZC4gU28gaG93IGNhbiB0aGlzIHJhdGlvIGJlIGFjY3VyYXRlP1xuXG5UaGUgYW5zd2VyIGJlY29tZXMgYXBwYXJlbnQgd2hlbiB2aXN1YWxpemluZyB0aGUgc2l0dWF0aW9uIHVzaW5nIGEgVmVubiBkaWFncmFtLiBJZiB3ZSBjb25zaWRlciB0aGUgZ3JvdXAgb24gdGhlIGxlZnQgdG8gYmUgdXNlcnMgd2hvIGhhdmUgZG93bmxvYWRlZCB0aGUgYXBwLCBhbmQgdGhlIGdyb3VwIG9uIHRoZSByaWdodCB0byBiZSBjdXN0b21lcnMgd2hvIGhhdmUgdmlzaXRlZCB0aGUgc2hvcHBpbmcgY2VudHJlLCB0aGVuIHRoZSBmb2N1cyBzaG91bGQgYmUgb24gdGhlIG92ZXJsYXBwaW5nIHJlZ2lvbiBvZiB0aGUgdHdvIGdyb3Vwcy4gQnkgaG9taW5nIGluIG9uIHRoaXMgaW50ZXJzZWN0aW9uLCB3ZSBjYW4gZ2FpbiBhIG1vcmUgYWNjdXJhdGUgdW5kZXJzdGFuZGluZyBvZiBob3cgbWFueSB2aXNpdG9ycyBhcmUgYWxzbyBhcHAgdXNlcnMgYW5kIHVzZSB0aGlzIGluZm9ybWF0aW9uIHRvIGluZm9ybSBtYXJrZXRpbmcgYW5kIHByb21vdGlvbmFsIGVmZm9ydHMuIFRvIG1ha2UgdGhpbmdzIGV2ZW4gd29yc2UsIGlmIHlvdSB3aXNoIHRvIG9idGFpbiBzcGF0aWFsIGFuYWx5dGljcywgZm9yIGV4YW1wbGUgdG8gYW5zd2VyIHF1ZXN0aW9ucyBzdWNoIGFzIHRvIGZpbmQgdGhlIHNlcXVlbmNlIG9mIHN0b3JlcyBwZW9wbGUgbG92ZSB0byB2aXNpdCB0b2dldGhlciwgeW91IG5lZWQgdG8gaGF2ZSB5b3VyIHZpc2l0b3JzIHVzaW5nIHRoZSBhcHBsaWNhdGlvbiB3aGlsZSB0aGV5IGFyZSBsb2NhdGVkIGluIHRoZSBzaG9wcGluZyBjZW50cmUuXG5cbiFbbW9iaWxlLWFwcC1kcHdubG9hZHMucG5nXSgvdXBsb2Fkcy9tb2JpbGVfYXBwX2Rwd25sb2Fkc183ZmRiNWI2ZDM4LnBuZylcblxuIyBIb3cgY2FuIEFyaWFkbmUgZ3VpZGUgc2hvcHBpbmcgbWFsbHMgdG8gdGhlIGZ1dHVyZT9cblxuQXJpYWRuZSBjYW4gYWN0IGFzIGEgZ2F0ZSB0byB0aGUgZnV0dXJlIGFuZCBoZWxwIHNob3BwaW5nIG1hbGxzIGluIHRoZWlyIHRyYW5zaXRpb24gZnJvbSB0cmFkaXRpb25hbCBzaG9wcGluZyBjZW50cmVzIHRvIGV4cGVyaWVuY2UgY2VudHJlcyBpbiB0aGUgZm9sbG93aW5nIGFzcGVjdHM6XG5cbiMjIDEuXHRJZGVudGlmeSB0aGUgbGVhc2luZyB0eXBlXG5BcmlhZG5l4oCZcyBzb2x1dGlvbnMgY2FuIGFzc2lzdCBtYWxsIG93bmVycyBpbiBpZGVudGlmeWluZyB0aGUgdHlwZSwgbG9jYXRpb24sIGFuZCB0aW1lIGxlbmd0aCBvZiBzcGFjZSBsZWFzaW5nIHRvIHBvcC11cCBzdG9yZXMuIEZpcnN0bHksIGxvY2F0aW9uIGFuYWx5dGljcyBjYW4gYmUgdXNlZCB0byBpZGVudGlmeSB0aGUgYmVzdCBsb2NhdGlvbnMgZm9yIHN1Y2ggc3RvcmVzIHRoYXQgd2lsbCByZWNlaXZlIHRoZSBtb3N0IGV4cG9zdXJlIGJhc2VkIG9uIGZvb3QgdHJhZmZpYyBhbmQgY3VzdG9tZXIgYmVoYXZpb3VyLiBUaGVuLCB0aGUgcG9wdWxhcml0eSBvZiBjZXJ0YWluIHBvcC11cCBzdG9yZXMgY2FuIGJlIG1lYXN1cmVkIGJ5IHRyYWNraW5nIGhvdyBtYW55IHBlb3BsZSB2aXNpdCB0aGVtIGFuZCBob3cgbG9uZyB0aGV5IHN0YXkuIENvbnNlcXVlbnRseSwgbWFsbCBvd25lcnMgY2FuIG1ha2UgZGF0YS1kcml2ZW4gZGVjaXNpb25zIG9uIHdoaWNoIHN0b3JlcyBvciBjYXRlZ29yaWVzIHRoZXkgc2hvdWxkIGJyaW5nIGJhY2sgaW4gdGhlIGZ1dHVyZS5cblxuIyMgMi5cdE9wdGltaXppbmcgTGF5b3V0IGFuZCBEZXNpZ25cbkJ5IGFuYWx5c2luZyB2aXNpdG9yIGdlb3NwYXRpYWwgZGF0YSBwcm92aWRlZCBieSBBcmlhZG5lLCBTaG9wcGluZyBNYWxsIG93bmVycyBhbmQgcHJvcGVydHkgbWFuYWdlcnMgd2lsbCBiZSBhYmxlIHRvIG9wdGltaXplIHRoZWlyIGxheW91dHMuIExvY2F0aW9uIEFuYWx5dGljcyBwcm92aWRlIGluc2lnaHRzIGFib3V0IGhvdyBwZW9wbGUgbW92ZSB0aHJvdWdoIHNwYWNlIGFuZCB0aHVzIGhlbHAgaWRlbnRpZnkgc3BhY2VzIHRoYXQgYXJlIG92ZXJseSBjcm93ZGVkIG9yIHVuZGVydXRpbGl6ZWQuIFRoZSBhZGp1c3RlZCBsYXlvdXQgY2FuIG9wdGltaXplIHRoZSBzaG9wcGVyIGZsb3cgYW5kIHRodXMgaW1wcm92ZSB0aGUgb3ZlcmFsbCBjdXN0b21lciBleHBlcmllbmNlLlxuXG4jIyAzLlx0Q3JlYXRpbmcgVW5pcXVlIEV4cGVyaWVuY2VzXG5XZSBrbm93IHRoYXQgZW5nYWdpbmcgd2l0aCB2aXNpdG9ycyBpbiBhIHNob3BwaW5nIGNlbnRyZSBjYW4gYmUgYSBjaGFsbGVuZ2UsIGVzcGVjaWFsbHkgd2hlbiB0aGV5IGFyZSBsb29raW5nIGZvciBhIGhhc3NsZS1mcmVlIGV4cGVyaWVuY2UuIEFyaWFkbmXCtHMgRW5nYWdlbWVudCBmZWF0dXJlIG9mZmVycyBhIHNlYW1sZXNzIG9wdC1pbiBwcm9jZXNzIHRoYXQgZG9lcyBub3QgcmVxdWlyZSBhbnkgYXBwIGluc3RhbGxhdGlvbi4gVmlzaXRvcnMgY2FuIHNpbXBseSBvcHQtaW4gdmlhIG91ciBmcmVlIFdpRmkgbmV0d29yaywgYnkgc2Nhbm5pbmcgYSBRUiBjb2RlLCBvciBieSB0YXBwaW5nIG9uIGFuIE5GQy4gV2l0aCBvdXIgaW5ub3ZhdGl2ZSBhcHByb2FjaCwgd2UndmUgcmVjb3JkZWQgMjAwIHRpbWVzIG1vcmUgb3B0LWlucyB0aGFuIHRyYWRpdGlvbmFsIGFwcGxpY2F0aW9uIGRvd25sb2FkcyEgV2hhdCdzIG1vcmUsIG91ciBvcHQtaW4gcmF0ZXMgYXJlIGNvbnNpc3RlbnRseSBoaWdoLCB3aXRoIHVwIHRvIDYwJSBvZiB2aXNpdG9ycyBjaG9vc2luZyB0byBvcHQtaW4gZGFpbHkuIFRoaXMgbWVhbnMgdGhhdCB5b3UgY2FuIHRhcmdldCB0aGVzZSB2aXNpdG9ycyBkaXJlY3RseSBhbmQgZWFzaWx5IGJhc2VkIG9uIHRoZWlyIGxvY2F0aW9uIHdpdGhpbiB0aGUgc2hvcHBpbmcgY2VudGVyLlxuXG4jIyA0Llx0SWRlbnRpZnlpbmcgQ3VzdG9tZXIgUHJvZmlsZXNcbkxpZmVzdHlsZSBpbnNpZ2h0cyBjYW4gYmUgZGVyaXZlZCBieSB1dGlsaXppbmcgdGhlIGluZm9ybWF0aW9uIG9uIHRoZSBsb2NhdGlvbiBhbmQgdHJhamVjdG9yeSBwYXR0ZXJuIG9mIHRoZSB2aXNpdG9ycywgd2l0aG91dCBpbmZyaW5naW5nIHRoZSBkYXRhIHByb3RlY3Rpb24gcmVndWxhdGlvbnMuIFRoaXMgaW5mb3JtYXRpb24gY2FuIGFzc2lzdCBzaG9wcGluZyBtYWxscyB0byBjcmVhdGUgYSBtb3JlIHBlcnNvbmFsaXplZCBleHBlcmllbmNlIGJ5IHNlbmRpbmcgY3VzdG9taXplZCBjYW1wYWlnbnMgdGFpbG9yZWQgdG8gdGhlaXIgbmVlZHMgb3Igb2ZmZXJzIHRvIGN1c3RvbWVycyBiYXNlZCBvbiB0aGVpciB0cmFqZWN0b3JpZXMgYW5kIHRoZWlyIGN1cnJlbnQgbG9jYXRpb24gd2l0aGluIHRoZSBtYWxsLiBGb3IgZXhhbXBsZSwgdmlzaXRvcnMgdGhhdCB2aXNpdCBhIGd5bSBpbiB0aGUgc2hvcHBpbmcgbWFsbCwgYW5kIHRoZW4gZ28gdG8gdGhlIHN1cGVybWFya2V0IG9yIHNwb3J0IHJlbGF0ZWQgcmV0YWlsZXJzIGNhbiBoYXZlIHRhcmdldGVkIG1hcmtldGluZyBhY3Rpdml0aWVzIGZvciBwcm9tb3RpbmcgcHJvZHVjdHMgdGhhdCBwcm9tb3RlIGEgaGVhbHRoeSBsaWZlc3R5bGUgbGlrZSBwcm90ZWluIGJhcnMuIEFyaWFkbmXigJlzIE9wdC1pbiBzZXJ2aWNlIGNhbiBhbHNvIGJlIHVzZWQgZm9yIHRoaXMgcHVycG9zZSBieSBwdXNoaW5nIHRoZXNlIHBlcnNvbmFsaXplZCBvZmZlcnMgdG8gdGhlIGN1c3RvbWVycy4gXG5cbiMgV2h5IGlzIEFyaWFkbmUgdW5pcXVlID9cbkFyaWFkbmUgaXMgdGhlIG5leHQtZ2VuZXJhdGlvbiB2aXNpdG9yL3Nob3BwZXIgYW5hbHl0aWNzIHBsYXRmb3JtIGZvciBDb21tZXJjaWFsIFJlYWwgRXN0YXRlLCBwcm92aWRpbmcgKipyZWFsLXRpbWUgcGVvcGxlIGZsb3cqKiBhbmFseXRpY3MgdGhyb3VnaG91dCB0aGUqKiBlbnRpcmUgdmlzaXRvci9zaG9wcGVyIGpvdXJuZXkqKi4gXG5cbk91ciBwYXRlbnRlZCB0ZWNobm9sb2d5IGlzIGJhc2VkIG9uICoqc2lnbmFsLWJhc2VkIHRyYWNraW5nKiogYW5kIGRvZXNu4oCZdCByZXF1aXJlIGFueSBjYW1lcmEsIGJlYWNvbiwgd2ktZmkgam9pbmluZyBvciBhbnkgYXBwIHRvIGJlIGRvd25sb2FkZWQsIGxlYWRpbmcgdG8qKiAxMDAlIHVuaXF1ZSBjb3ZlcmFnZSBvZiBwaG9uZSBob2xkZXJzKiogYW5kIGRvd24gdG8qKiAxbSBvZiBsb2NhdGlvbiBhY2N1cmFjeSoqLlxuXG5XaGlsZSBvdXIgbXVsdGktbGF5ZXJlZCBTYWFTIHNvbHV0aW9uIGFsbG93cyBmb3IgcGFzc2l2ZSB0cmFja2luZyBpbiBhIGNlcnRpZmllZCBHRFBSIGNvbXBsaWFudCBtYW5uZXIsIGl0IGNhbiB0cmFuc2Zvcm0gaXRzZWxmIGludG8gYSAqKnBvd2VyZnVsIG9tbmljaGFubmVsIG1hcmtldGluKipnIGFuZCAqKm5hdmlnYXRpb24gdG9vbCoqIHdoZW4gdmlzaXRvcnMvc2hvcHBlcnMgb3B0IGluLlxuXG5JZiB5b3UncmUgaW50ZXJlc3RlZCBpbiBsZWFybmluZyBtb3JlIGFib3V0IG91ciBzeXN0ZW0gYW5kIGhvdyBpdCBjYW4gYmVuZWZpdCB5b3UsIGRvbid0IGhlc2l0YXRlIHRvIGdldCBpbiB0b3VjaC4gV2UnZCBiZSBoYXBweSB0byBwcm92aWRlIHlvdSB3aXRoIG1vcmUgaW5mb3JtYXRpb24gYW5kIGFuc3dlciBhbnkgcXVlc3Rpb25zIHlvdSBtYXkgaGF2ZS5cblxuIiwiZXhjZXJwdCI6IlRoaXMgYmxvZyBwb3N0IGRlbHZlcyBpbnRvIHRoZSBmdXR1cmUtcHJvb2Zpbmcgc3RyYXRlZ2llcyBmb3Igc2hvcHBpbmcgbWFsbHMsIGVtcGhhc2l6aW5nIHRoZSByb2xlIG9mIEFyaWFkbmUsIGEgbmV4dC1nZW5lcmF0aW9uIHZpc2l0b3IgYW5hbHl0aWNzIHBsYXRmb3JtLiBJdCBoaWdobGlnaHRzIHRoZSBzaWduaWZpY2FuY2Ugb2YgaW50ZWdyYXRpbmcgc21hbGxlciBhbmQgcG9wLXVwIHN0b3JlcyBmb3IgYSBkaXZlcnNlLCB1bmlxdWUsIGFuZCBhZGFwdGFibGUgc2hvcHBpbmcgZXhwZXJpZW5jZS4gVGhlIGFydGljbGUgYWxzbyBkaXNzZWN0cyB0aGUgZWZmZWN0aXZlbmVzcyBvZiBzaG9wcGluZyBtYWxsIGFwcHMsIHJldmVhbGluZyB0aGF0IG9ubHkgYSBzbWFsbCBmcmFjdGlvbiBvZiB2aXNpdG9ycyB1c2UgdGhlc2UgYXBwbGljYXRpb25zLCB0aHVzIHF1ZXN0aW9uaW5nIHRoZWlyIGltcGFjdC4gQXJpYWRuZSBhc3Npc3RzIGluIHRoaXMgdHJhbnNpdGlvbiBieSBwcm92aWRpbmcgc29sdXRpb25zIGZvciBvcHRpbWl6ZWQgbGVhc2luZywgbGF5b3V0IGRlc2lnbiwgY3VzdG9tZXIgZW5nYWdlbWVudCwgYW5kIHBlcnNvbmFsaXplZCBleHBlcmllbmNlcyB0aHJvdWdoIHJlYWwtdGltZSBwZW9wbGUgZmxvdyBhbmFseXRpY3MuIEFyaWFkbmUncyBwYXRlbnRlZCB0ZWNobm9sb2d5IGlzIHVuaXF1ZSwgcHJvdmlkaW5nIDEwMCUgY292ZXJhZ2Ugb2YgcGhvbmUgaG9sZGVycyB3aXRob3V0IHJlcXVpcmluZyBjYW1lcmEgc3VydmVpbGxhbmNlLCBiZWFjb24gdHJhY2tpbmcsIG9yIGFwcCBkb3dubG9hZHMgd2hpbGUgZW5zdXJpbmcgR0RQUiBjb21wbGlhbmNlLiIsImNyZWF0ZWRBdCI6IjIwMjMtMDYtMDVUMTM6MDA6MDQuNzQwWiIsInVwZGF0ZWRBdCI6IjIwMjMtMDYtMDVUMTM6MDM6MzYuMzY4WiIsInB1Ymxpc2hlZEF0IjoiMjAyMy0wNi0wNVQxMzowMDowNy45NjFaIiwiaW1hZ2UiOnsiZGF0YSI6eyJpZCI6MjEsImF0dHJpYnV0ZXMiOnsibmFtZSI6InJlZGVzaWdueW91cnN0b3JlLmpwZyIsImFsdGVybmF0aXZlVGV4dCI6bnVsbCwiY2FwdGlvbiI6bnVsbCwid2lkdGgiOjYwMCwiaGVpZ2h0Ijo0MDAsImZvcm1hdHMiOnsic21hbGwiOnsiZXh0IjoiLmpwZyIsInVybCI6Ii91cGxvYWRzL3NtYWxsX3JlZGVzaWdueW91cnN0b3JlX2FkMTIxN2FiNjcuanBnIiwiaGFzaCI6InNtYWxsX3JlZGVzaWdueW91cnN0b3JlX2FkMTIxN2FiNjciLCJtaW1lIjoiaW1hZ2UvanBlZyIsIm5hbWUiOiJzbWFsbF9yZWRlc2lnbnlvdXJzdG9yZS5qcGciLCJwYXRoIjpudWxsLCJzaXplIjo0MC43Mywid2lkdGgiOjUwMCwiaGVpZ2h0IjozMzN9LCJ0aHVtYm5haWwiOnsiZXh0IjoiLmpwZyIsInVybCI6Ii91cGxvYWRzL3RodW1ibmFpbF9yZWRlc2lnbnlvdXJzdG9yZV9hZDEyMTdhYjY3LmpwZyIsImhhc2giOiJ0aHVtYm5haWxfcmVkZXNpZ255b3Vyc3RvcmVfYWQxMjE3YWI2NyIsIm1pbWUiOiJpbWFnZS9qcGVnIiwibmFtZSI6InRodW1ibmFpbF9yZWRlc2lnbnlvdXJzdG9yZS5qcGciLCJwYXRoIjpudWxsLCJzaXplIjoxMS4yOSwid2lkdGgiOjIzNCwiaGVpZ2h0IjoxNTZ9fSwiaGFzaCI6InJlZGVzaWdueW91cnN0b3JlX2FkMTIxN2FiNjciLCJleHQiOiIuanBnIiwibWltZSI6ImltYWdlL2pwZWciLCJzaXplIjo0OC4yNywidXJsIjoiL3VwbG9hZHMvcmVkZXNpZ255b3Vyc3RvcmVfYWQxMjE3YWI2Ny5qcGciLCJwcmV2aWV3VXJsIjpudWxsLCJwcm92aWRlciI6ImxvY2FsIiwicHJvdmlkZXJfbWV0YWRhdGEiOm51bGwsImNyZWF0ZWRBdCI6IjIwMjMtMDUtMzBUMDY6MzQ6MjAuMjI4WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDYtMDVUMTI6NDk6MTMuODc1WiJ9fX0sImF1dGhvciI6eyJkYXRhIjp7ImlkIjo2LCJhdHRyaWJ1dGVzIjp7ImZpcnN0bmFtZSI6IlN0YXZyb3VsYSIsImxhc3RuYW1lIjoiU2FycmkiLCJ1c2VybmFtZSI6bnVsbCwicHJlZmVyZWRMYW5ndWFnZSI6bnVsbCwiY3JlYXRlZEF0IjoiMjAyMy0wNS0zMVQxMDozNjoyNi4xODFaIiwidXBkYXRlZEF0IjoiMjAyMy0wNS0zMVQxMDozNzoxMi44MDRaIn19fX19LHsiaWQiOjEwLCJhdHRyaWJ1dGVzIjp7InRpdGxlIjoiSG93IENhbiBJIFVzZSBUaGUgSGVhdG1hcCBvZiBNeSBSZXRhaWwgU3RvcmU/Iiwic2x1ZyI6ImhlYXRtYXAtb2YtbXktc3RvcmUiLCJjb250ZW50IjoiIyBIb3cgQ2FuIEkgVXNlIFRoZSBIZWF0bWFwIG9mIE15IFJldGFpbCBTdG9yZT9cbk9uZSBvZiB0aGUgbW9zdCBpbXBvcnRhbnQgdG9vbHMgdG8gdW5kZXJzdGFuZCBjdXN0b21lciBiZWhhdmlvdXIgaXMgdGhlIGhlYXRtYXAgb2YgeW91ciBzdG9yZXMuIFRoZSBjb3ZpZCBwYW5kZW1pYyBoYXMgc3B1cnJlZCBkaWdpdGFsIGdyb3d0aCwgYW5kIHJldGFpbGVycyBtdXN0IHVzZSBldmVyeSB0ZWNobmlxdWUgYXQgdGhlaXIgZGlzcG9zYWwgdG8gYm9vc3QgdGhlaXIgZGltaW5pc2hpbmcgcHJvZml0YWJpbGl0eSBhbmQgcmVtYWluIGNvbXBldGl0aXZlLlxuXG4jIFdoYXQgaXMgYSBIZWF0bWFwP1xuQSBoZWF0bWFwIGlzIGEgZ3JhcGggaW4gd2hpY2ggY29tcGxleCBkYXRhIGlzIGJyb2tlbiBkb3duIGludG8gaW50dWl0aXZlIGltYWdlcywgd2l0aCBkYXRhIHZhcmlhbmNlIHJlcHJlc2VudGVkIGJ5IGNoYW5nZXMgaW4gY29sb3VyIGludGVuc2l0eSAoc2VlIHRoZSBpbWFnZSBiZWxvdykuXG5cbiFbaGVhdG1hcDNkLmpwZ10oL3VwbG9hZHMvaGVhdG1hcDNkXzljMGY0ZDA3MjIuanBnKVxuXG5Vc3VhbGx5LCB0aGUgcmVkIGNvbG91ciBjb2RlIGluZGljYXRlcyBhIGhpZ2ggY3Jvd2RlZCByZWdpb24gd2hlcmVhcyBncmVlbiBpcyB0aGUgbG93ZXN0IGNyb3dkZWQgcmVnaW9uLlxuXG4jIFdoYXQgZG9lcyBhIGhlYXRtYXAgaW5kaWNhdGU/XG5UaGUgaGVhdG1hcCBpbGx1c3RyYXRlcyBob3cgY2xpZW50cyBtYXJjaCBhcm91bmQgYW5kIGluIHlvdXIgc3RvcmUuIEl0IHJldmVhbHMgd2hpY2ggc2VjdGlvbnMgeW91ciBjb25zdW1lcnMgcHJlZmVyIHRvIHZpc2l0LCB3aGljaCB0aGV5IGF2b2lkLCBhbmQgd2hpY2ggdGhleSByZXR1cm4gdG8gdGltZSB0byB0aW1lIGFnYWluLlxuXG5Ob3cgbGV0J3MgYWRkcmVzcyB0aGUgZWxlcGhhbnQgaW4gdGhlIHJvb206IEhvdyBjYW4gSSB1c2UgaGVhdCBlZmZpY2llbnRseSB0byBpbXByb3ZlIG15IHByb2ZpdHM/XG5cbiMgSWRlbnRpZnkgaG93IHlvdXIgY3VzdG9tZXJzIG5hdmlnYXRlXG5JdCBpcyBjcml0aWNhbCBmb3IgYSByZXRhaWxlciB0byBmdWxseSB1bmRlcnN0YW5kIGhvdyB0aGVpciBjbGllbnRzIG5hdmlnYXRlIHRocm91Z2ggdGhlaXIgc3RvcmUgdG8gaW5jcmVhc2UgY3VzdG9tZXIgc2F0aXNmYWN0aW9uIGFuZCBnZXQgdGhlIG1vc3QgcmV0dXJuLiBBIHNlcmllcyBvZiBxdWVzdGlvbnMgYXJlIGFuc3dlcmVkIGJ5IHRoZSBoZWF0IG1hcDpcblxuLVdoYXQgcGxhY2VzIGFyZW4ndCBiZWluZyBmcmVxdWVudGVkLCBhbmQgaG93IGNhbiBJIG1ha2UgdGhlIHJlZ2lvbiBtb3JlIGFwcGVhbGluZz9cbi1XaGF0IGhhcHBlbnMgd2hlbiBJIHB1dCBteSBiZXN0IHByb2R1Y3QgaW4gYSBsb2NhdGlvbiB3aGVyZSBjdXN0b21lcnMgcmFyZWx5IGdvP1xuLUFyZSBteSBiZXN0IGVtcGxveWVlcyB3b3JraW5nIGluIHRoZSBidXNpZXN0IGxvY2F0aW9uP1xuLUV4cGVyaW1lbnQgaW4geW91ciBzdG9yZXNcbi1XaWxsIHB1dHRpbmcgdGhlIGxlYXN0IG9mdGVuIHB1cmNoYXNlZCBpdGVtcyBpbiB0aGUgYnVzaWVzdCBsb2NhdGlvbiBlbmhhbmNlIHNhbGVzP1xuLUhlYXRtYXBzIGxldCB5b3UgdmlzdWFsaXplIHRoZSByZXN1bHRzIG9mIHlvdXIgZXhwZXJpbWVudCBhbmQgc3RyYXRlZ2l6ZSBtb3JlIGVmZmVjdGl2ZWx5LlxuXG4jIEV4cGVyaW1lbnQgaW4geW91ciBzdG9yZVxuSGVhdG1hcHMgbGV0IHlvdSB2aXN1YWxpemUgdGhlIHJlc3VsdHMgb2YgeW91ciBleHBlcmltZW50IGFuZCBzdHJhdGVnaXplIG1vcmUgZWZmZWN0aXZlbHkuXG5cbklzIGl0IGxvZ2ljYWwgdGhhdCBjaGFuZ2luZyB0aGUgc3RvcmUncyBsYXlvdXQgd2lsbCBpbmNyZWFzZSBzYWxlcz9cblxuSXMgaXQgdHJ1ZSB0aGF0IHBsYWNpbmcgbXkgYmVzdC1zZWxsaW5nIHByb2R1Y3QgaW4gYSByYXJlbHkgdmlzaXRlZCByZWdpb24gd2lsbCBib29zdCB0aGUgbnVtYmVyIG9mIHZpc2l0b3JzIHRvIHRoYXQgYXJlYT9cblxuUmVtb3ZlIHRoZSBkZWFkIHpvbmVzXG5SZW1lbWJlciB0aGF0IHRoZSBzZWN0aW9ucyB0aGF0IHlvdXIgY3VzdG9tZXJzIGRvIG5vdCB2aXNpdCBhcmUgYSBmaW5hbmNpYWwgYnVyZGVuIGZvciB5b3UuIFVzaW5nIGhlYXRtYXBzLCB5b3UgY2FuIHBpbnBvaW50IGNlcnRhaW4gcmVnaW9ucyBhbmQgYWN0LiBJcyB0aGVyZSBhbnkgcmVhc29uIHdoeSBjdXN0b21lcnMgYXJlbid0IHZpc2l0aW5nIHRoZSBsb2NhdGlvbiwgYW5kIGlzIHRoZXJlIGFueXRoaW5nIHByZXZlbnRpbmcgdGhlbSBmcm9tIGJlaW5nIHRoZXJlP1xuXG5JbXByb3ZlIHRoZSBDdXN0b21lciBTYXRpc2ZhY3Rpb24gYW5kIEN1c3RvbWVyIEV4cGVyaWVuY2VcbkNhcHR1cmluZyB0aGUgYXR0ZW50aW9uIHNwYW4gb2YgY2xpZW50cyBpcyBhIG5lY2Vzc2l0eSBvZiB0aGUgaG91ci4gUmV0YWlsZXJzIG1heSBhY2NvbXBsaXNoIHRoaXMgYnkgbWFya2V0aW5nIGFuZCBlbmhhbmNpbmcgdGhlIGNvbnN1bWVyIGV4cGVyaWVuY2U6IHVuZGVyc3RhbmQgd2hlcmUgeW91ciBjdXN0b21lcnMgZnJlcXVlbnRseSBzdHJvbGwgYW5kIGVtcGxveSBtb3JlIHN0YWZmIGluIHRoZSBidXNpZXN0IGFyZWFzLiBXaXRoIEFyaWFkbmUsIHlvdSBjYW4gdmlzdWFsaXNlIHRoZSBoZWF0IGluIHJlYWwgdGltZS4gV2hlbiB3YWl0aW5nIHRpbWVzIGV4Y2VlZHMgYSB0aHJlc2hvbGQgYW5kIG1vcmUgcGVvcGxlIHF1ZXVlIGF0IHRoZSBjb3VudGVycywgb3BlbiBuZXcgY291bnRlcnMgcmlnaHQgYXdheSB0byBzZXJ2ZSB5b3VyIGNvbnN1bWVycy4gWW91IGNhbiB1c2UgQXJpYWRuZSdzIGNvc3QtZWZmZWN0aXZlIEFsZXJ0IFN5c3RlbSB0byBzYXZlIHJlc291cmNlcyBhbmQgaW5jcmVhc2UgY3VzdG9tZXIgc2F0aXNmYWN0aW9uLlxuIyMgXG5UaGVyZSBhcmUgc29tZSBvdGhlciBsaW1pdGF0aW9ucyB3aXRoIHRoZSBoZWF0bWFwIHdoaWNoIHdlIHdvdWxkIGxpa2UgdG8gaGlnaGxpZ2h0OlxuXG5JdCBpcyBub3QgYW4gYXV0b21pemF0aW9uIHRvb2w7IGl0IHNpbXBseSB2aXN1YWxpemVzIGhvdyBzdWNjZXNzZnVsIHlvdXIgYXJlYXMvcHJvZHVjdHMvc3RyYXRlZ2llcyBhcmUuXG5Pbmx5IHdoZW4gc3RvcmUgbWFuYWdlcnMgdW5kZXJzdGFuZCB0aGUgdmFsdWUgYW5kIHV0aWxpdHkgb2YgaGVhdCwgd2lsbCB0aGV5IGJlIGFibGUgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgdGhlIGFuYWx5c2lzLiBPdXIgZXhwZXJ0cyBpbi1ob3VzZSB3aWxsIGJlIGhhcHB5IHRvIGd1aWRlIHlvdSBvbiBob3cgdG8gbWFrZSB0aGUgYmVzdCB1c2Ugb2YgdGhlIGhlYXRtYXAgdG9vbC5cbldl4oCZbGwgY3JhY2sgdGhlIGNvZGUganVzdCBub3cgYW5kIGNyZWF0ZSBhIHN1bW1hcnkuIFRoaXMgaXMgYSBwcm9jZXNzLCBhbmQgd2Ugd2lsbCBleHBsYWluIGl0IHN0ZXBzIGJ5IHN0ZXBzLlxuXG4tQ3JlYXRlIGEgcGxhbi9zdHJhdGVneSB0byBmb2xsb3dcbi1FeGVjdXRlIHRoZSBzdHJhdGVneVxuLUV2YWx1YXRlIHRoZSBvdXRjb21lIHdpdGggdGhlIGhlYXRtYXBzXG4tSW52ZXN0aWdhdGUgdGhlIGRpc2NyZXBhbmN5IGJldHdlZW4geW91ciBleHBlY3RhdGlvbnMgYW5kIHRoZSBhY3R1YWwgb3V0Y29tZVxuLVJlLXN0cmF0ZWdpemUgYW5kIGdvIHRocm91Z2ggdGhlIHByb2NlZHVyZSBhZ2FpblxuRG8geW91IHdhbnQgdG8gdHJhY2sgYW5kIGFuYWx5emUgeW91ciBhdWRpZW5jZXMgYWNjdXJhdGVseSBpbiByZWFsLXRpbWUgd2l0aG91dCB2aW9sYXRpbmcgR0RQUj8gQ2xpY2sgaGVyZSB0byBib29rIGFuIGFwcG9pbnRtZW50IHdpdGggdXMgYW5kIGdldCBhIG9uZS1tb250aCBmcmVlIHN1YnNjcmlwdGlvbi5cblxuU2VhcmNoLi4uXG5cblJlY2VudCBQb3N0c1xuU0VQVEVNQkVSIDIwLCAyMDIyXG5Ib3cgdG8gR2V0IHRoZSBNb3N0IE91dCBvZiBQZW9wbGUgQ291bnRpbmdcblNFUFRFTUJFUiAxMywgMjAyMlxuSG93IENhbiBQaHlzaWNhbCBTdG9yZXMgV2luIEJhY2sgb24gVGhlIENvbXBldGl0aW9uP1xuU0VQVEVNQkVSIDA3LCAyMDIyXG44IERhdGEtRHJpdmVuIFN0ZXBzIHRvIFJlLURlc2lnbiBZb3VyIFN0b3JlXG4iLCJleGNlcnB0IjoiSW4gdGhlIHdha2Ugb2YgYSBkaWdpdGFsIGdyb3d0aCBzdXJnZSwgdGhpcyBhcnRpY2xlIG9mZmVycyBpbnNpZ2h0cyBpbnRvIGhvdyByZXRhaWxlcnMgY2FuIGxldmVyYWdlIGhlYXRtYXBzIHRvIHVuZGVyc3RhbmQgY3VzdG9tZXIgYmVoYXZpb3IgYW5kIGVuaGFuY2UgcHJvZml0YWJpbGl0eS4gVGhlc2UgaW50dWl0aXZlIGdyYXBoaWNhbCByZXByZXNlbnRhdGlvbnMgaGlnaGxpZ2h0IGN1c3RvbWVyIG1vdmVtZW50IGFuZCBwcmVmZXJlbmNlcyB3aXRoaW4gYSBzdG9yZSwgYWlkaW5nIGluIGlkZW50aWZ5aW5nIHVuZGVyLXZpc2l0ZWQgYXJlYXMgYW5kIHN0YWZmIGFsbG9jYXRpb24uIFVzaW5nIGhlYXRtYXBzLCByZXRhaWxlcnMgY2FuIGV4cGVyaW1lbnQgd2l0aCBwcm9kdWN0IHBsYWNlbWVudCBhbmQgc3RvcmUgbGF5b3V0cywgZWxpbWluYXRlICdkZWFkIHpvbmVzJywgYW5kIGVuaGFuY2UgY3VzdG9tZXIgc2F0aXNmYWN0aW9uLiBGdXJ0aGVybW9yZSwgdGhleSBjYW4gcmV2aXNpdCBzdHJhdGVnaWVzIGJhc2VkIG9uIGhlYXRtYXAgcmVzdWx0cywgZm9zdGVyaW5nIGEgY29udGludW91cyBpbXByb3ZlbWVudCBjeWNsZS4iLCJjcmVhdGVkQXQiOiIyMDIzLTA2LTAyVDEzOjMxOjQ5LjQ1NVoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA2LTA1VDA5OjE1OjQzLjQ1N1oiLCJwdWJsaXNoZWRBdCI6IjIwMjMtMDYtMDJUMTM6MzE6NTEuMDc0WiIsImltYWdlIjp7ImRhdGEiOnsiaWQiOjU3LCJhdHRyaWJ1dGVzIjp7Im5hbWUiOiJoZWF0bWFwLW9mLW15LXN0b3JlLnBuZyIsImFsdGVybmF0aXZlVGV4dCI6bnVsbCwiY2FwdGlvbiI6bnVsbCwid2lkdGgiOjE1MDAsImhlaWdodCI6OTU1LCJmb3JtYXRzIjp7ImxhcmdlIjp7ImV4dCI6Ii5wbmciLCJ1cmwiOiIvdXBsb2Fkcy9sYXJnZV9oZWF0bWFwX29mX215X3N0b3JlX2U2YmU3YjFmMTcucG5nIiwiaGFzaCI6ImxhcmdlX2hlYXRtYXBfb2ZfbXlfc3RvcmVfZTZiZTdiMWYxNyIsIm1pbWUiOiJpbWFnZS9wbmciLCJuYW1lIjoibGFyZ2VfaGVhdG1hcC1vZi1teS1zdG9yZS5wbmciLCJwYXRoIjpudWxsLCJzaXplIjo0MTQuNDYsIndpZHRoIjoxMDAwLCJoZWlnaHQiOjYzN30sInNtYWxsIjp7ImV4dCI6Ii5wbmciLCJ1cmwiOiIvdXBsb2Fkcy9zbWFsbF9oZWF0bWFwX29mX215X3N0b3JlX2U2YmU3YjFmMTcucG5nIiwiaGFzaCI6InNtYWxsX2hlYXRtYXBfb2ZfbXlfc3RvcmVfZTZiZTdiMWYxNyIsIm1pbWUiOiJpbWFnZS9wbmciLCJuYW1lIjoic21hbGxfaGVhdG1hcC1vZi1teS1zdG9yZS5wbmciLCJwYXRoIjpudWxsLCJzaXplIjoxNDIuNTgsIndpZHRoIjo1MDAsImhlaWdodCI6MzE4fSwibWVkaXVtIjp7ImV4dCI6Ii5wbmciLCJ1cmwiOiIvdXBsb2Fkcy9tZWRpdW1faGVhdG1hcF9vZl9teV9zdG9yZV9lNmJlN2IxZjE3LnBuZyIsImhhc2giOiJtZWRpdW1faGVhdG1hcF9vZl9teV9zdG9yZV9lNmJlN2IxZjE3IiwibWltZSI6ImltYWdlL3BuZyIsIm5hbWUiOiJtZWRpdW1faGVhdG1hcC1vZi1teS1zdG9yZS5wbmciLCJwYXRoIjpudWxsLCJzaXplIjoyNjAuODMsIndpZHRoIjo3NTAsImhlaWdodCI6NDc4fSwidGh1bWJuYWlsIjp7ImV4dCI6Ii5wbmciLCJ1cmwiOiIvdXBsb2Fkcy90aHVtYm5haWxfaGVhdG1hcF9vZl9teV9zdG9yZV9lNmJlN2IxZjE3LnBuZyIsImhhc2giOiJ0aHVtYm5haWxfaGVhdG1hcF9vZl9teV9zdG9yZV9lNmJlN2IxZjE3IiwibWltZSI6ImltYWdlL3BuZyIsIm5hbWUiOiJ0aHVtYm5haWxfaGVhdG1hcC1vZi1teS1zdG9yZS5wbmciLCJwYXRoIjpudWxsLCJzaXplIjo0Ny4xMiwid2lkdGgiOjI0NSwiaGVpZ2h0IjoxNTZ9fSwiaGFzaCI6ImhlYXRtYXBfb2ZfbXlfc3RvcmVfZTZiZTdiMWYxNyIsImV4dCI6Ii5wbmciLCJtaW1lIjoiaW1hZ2UvcG5nIiwic2l6ZSI6MjEyLjc1LCJ1cmwiOiIvdXBsb2Fkcy9oZWF0bWFwX29mX215X3N0b3JlX2U2YmU3YjFmMTcucG5nIiwicHJldmlld1VybCI6bnVsbCwicHJvdmlkZXIiOiJsb2NhbCIsInByb3ZpZGVyX21ldGFkYXRhIjpudWxsLCJjcmVhdGVkQXQiOiIyMDIzLTA2LTA1VDA5OjE1OjE2LjA2MloiLCJ1cGRhdGVkQXQiOiIyMDIzLTA2LTA1VDA5OjE1OjE2LjA2MloifX19LCJhdXRob3IiOnsiZGF0YSI6eyJpZCI6MiwiYXR0cmlidXRlcyI6eyJmaXJzdG5hbWUiOiJHb3ZhcnRoYW4iLCJsYXN0bmFtZSI6Ik5hdGFyYWphbiIsInVzZXJuYW1lIjpudWxsLCJwcmVmZXJlZExhbmd1YWdlIjpudWxsLCJjcmVhdGVkQXQiOiIyMDIzLTA1LTE2VDA4OjM0OjQ4LjEzNloiLCJ1cGRhdGVkQXQiOiIyMDIzLTA1LTE2VDA5OjA4OjI1LjE0OVoifX19fX0seyJpZCI6OSwiYXR0cmlidXRlcyI6eyJ0aXRsZSI6IkVtcGxveWVlcyBhcmUgeW91ciBzdG9yZSdzIHN0cm9uZ2VzdCB3ZWFwb24gYWdhaW5zdCBFLUNvbW1lcmNlLiBFcXVpcCB0aGVtIHdpdGggdGhlIHByb3BlciB0b29scyBub3chIiwic2x1ZyI6ImVtcG93ZXItc3RvcmUtZW1wbG95ZWVzIiwiY29udGVudCI6IiFbb25saW5lLXNob3BwaW5nLnBuZ10oL3VwbG9hZHMvb25saW5lX3Nob3BwaW5nX2JiMTU3YTExZDcucG5nKVxuXG5Gb3IgZGVjYWRlcywgcGh5c2ljYWwgcmV0YWlsZXJzIGhhdmUgcmVsaWVkIG9uIGludHVpdGlvbiBhbmQgdHJhZGl0aW9uYWwgbWFya2V0aW5nIG1ldGhvZHMgdG8gbWFrZSBkZWNpc2lvbnMsIGJ1dCB0aGUgcmlzZSBvZiBlY29tbWVyY2UgaGFzIGRpc3J1cHRlZCB0aGUgaW5kdXN0cnkuIEFzIGNvbnN1bWVycyBpbmNyZWFzaW5nbHkgdHVybiB0byBvbmxpbmUgc2hvcHBpbmcsIHBoeXNpY2FsIHJldGFpbGVycyBhcmUgc3RydWdnbGluZyB0byBrZWVwIHVwLiBBcyBhIHJlc3BvbnNlLCBtYW55IHRyYWRpdGlvbmFsIHBoeXNpY2FsIHJldGFpbGVycyBoYXZlIGF0dGVtcHRlZCB3aXRob3V0IGFueSBzdWNjZXNzIGF0IG9wZW5pbmcgb25saW5lIHN0b3JlcyBvZiB0aGVpciBvd24uIEhvd2V2ZXIsIG9wZW5pbmcgYW4gZWNvbW1lcmNlIHN0b3JlIGlzIG5vdCBuZWNlc3NhcmlseSB0aGUgc29sdXRpb24sIGFzIGl0IHJlcXVpcmVzIGV4cGVydGlzZSBpbiB2YXJpb3VzIGFyZWFzIHN1Y2ggYXMgbWFya2V0aW5nLCBwcmljaW5nLCBwcm9tb3Rpb25zLCBTRU8sIGFuZCBwbGF0Zm9ybSBzZWxsaW5nLlxuXG5JbnN0ZWFkLCBwaHlzaWNhbCByZXRhaWxlcnMgY2FuIGxldmVyYWdlIHRoZSBwb3dlciBvZiB0aGVpciBwaHlzaWNhbCBzdG9yZXMgdG8gY29tcGV0ZSB3aXRoIGVjb21tZXJjZS4gVGhpcyBpcyBleGVtcGxpZmllZCBieSBnbG9iYWwgZ2lhbnRzIHN1Y2ggYXMgQXBwbGUsIEFtYXpvbiwgWmFsYW5kbywgYW5kIENhc3BlciwgYWxsIG9mIHdoaWNoIHN0YXJ0ZWQgYXMgZWNvbW1lcmNlIGJ1c2luZXNzZXMgYnV0IHRocml2ZWQgYWZ0ZXIgb3BlbmluZyBwaHlzaWNhbCBzdG9yZXMuXG5cbk9uZSBrZXkgYWR2YW50YWdlIG9mIHBoeXNpY2FsIHN0b3JlcyBpcyB0aGUgYWJpbGl0eSB0byBwcmVzZW50IGEgYnJhbmQgdGhyb3VnaCBodW1hbiBpbnRlcmFjdGlvbi4gU2FsZXMgcmVwcmVzZW50YXRpdmVzIGluIHBoeXNpY2FsIHN0b3JlcyBjYW4gcHJvdmlkZSBhIHBlcnNvbmFsaXplZCBzaG9wcGluZyBleHBlcmllbmNlIGFuZCBidWlsZCBhIHJhcHBvcnQgd2l0aCBjdXN0b21lcnMsIHNvbWV0aGluZyB0aGF0IGlzIGRpZmZpY3VsdCB0byBhY2hpZXZlIG9ubGluZS4gRnVydGhlcm1vcmUsIHBoeXNpY2FsIHN0b3JlcyBjYW4gc2hvd2Nhc2UgcHJvZHVjdHMgYW5kIGNyZWF0ZSBhIHRhbmdpYmxlIGV4cGVyaWVuY2UgdGhhdCBjYW5ub3QgYmUgcmVwbGljYXRlZCBvbmxpbmUuXG5cbktlZXAgaW4gbWluZCB0aGF0IGhhdmluZyBsb3lhbCBjdXN0b21lcnMgY2FuIHByb3ZpZGUgc2lnbmlmaWNhbnQgYmVuZWZpdHMgdG8gYSBidXNpbmVzcy4gTG95YWwgY3VzdG9tZXJzIHRlbmQgdG8gc3BlbmQgbW9yZSBtb25leSBhbmQgYnV5IG1vcmUgZnJlcXVlbnRseSB0aGFuIG5ldyBjdXN0b21lcnMsIHJlc3VsdGluZyBpbiBpbmNyZWFzZWQgcmV2ZW51ZS4gUmV0YWluaW5nIGN1c3RvbWVycyBpcyBhbHNvIG1vcmUgY29zdC1lZmZlY3RpdmUgdGhhbiBhY3F1aXJpbmcgbmV3IG9uZXMsIHdoaWNoIHJlZHVjZXMgbWFya2V0aW5nIGNvc3RzLiBBZGRpdGlvbmFsbHksIGxveWFsIGN1c3RvbWVycyBoYXZlIGEgaGlnaGVyIGN1c3RvbWVyIGxpZmV0aW1lIHZhbHVlIChDTFYpLCBnZW5lcmF0aW5nIG1vcmUgcmV2ZW51ZSBvdmVyIHRoZWlyIGxpZmV0aW1lLiBUaGV5IGFsc28gYWR2b2NhdGUgZm9yIHRoZSBicmFuZCwgaW5jcmVhc2luZyB2aXNpYmlsaXR5IGFuZCBhY3F1aXJpbmcgbmV3IGN1c3RvbWVycyB0aHJvdWdoIHJlZmVycmFscy4gTGFzdGx5LCBsb3lhbCBjdXN0b21lcnMgcHJvdmlkZSB2YWx1YWJsZSBmZWVkYmFjayB0byBoZWxwIGJ1c2luZXNzZXMgaW1wcm92ZSB0aGVpciBwcm9kdWN0cyBhbmQgc2VydmljZXMgYW5kIG1lZXQgY3VzdG9tZXIgbmVlZHMuXG5cbiMjIFNDSEVEVUxFIFlPVVIgU0FMRVMgUkVQUkVTRU5UQVRJVkVcbiFbZW1wbG95ZWUtaW4tc3RvcmUucG5nXSgvdXBsb2Fkcy9lbXBsb3llZV9pbl9zdG9yZV9mZjhkYWE4NDliLnBuZylcblxuQXQgQXJpYWRuZSwgd2UgaGF2ZSBvYnNlcnZlZCB0aGF0IHRoZSBtb3N0IGFkdmFuY2VkIHNjaGVkdWxpbmcgbWVjaGFuaXNtcyB1dGlsaXplIHNhbGVzIGRhdGEuIEluIGNlcnRhaW4gc2NlbmFyaW9zLCB1c2VycyBjYW4gc2V0IHNhbGVzIGdvYWxzIGZvciB0aGUgd2VlaywgYW5kIHRoZSBhbGdvcml0aG0gd2lsbCBnZW5lcmF0ZSBhIHNjaGVkdWxlIHRoYXQgYWNjb3VudHMgZm9yIGNvbnRyYWN0dWFsIGVtcGxveWVlIGF2YWlsYWJpbGl0eS4gV2hpbGUgdGhpcyBhcHByb2FjaCBpcyBzb3BoaXN0aWNhdGVkLCBpdCBhc3N1bWVzIHRoYXQgdGhlIGNvbnZlcnNpb24gcmF0ZSBvZiB2aXNpdG9ycyB0byBjdXN0b21lcnMgaXMgZXZlbmx5IGRpc3RyaWJ1dGVkIHRocm91Z2hvdXQgdGhlIGRheS4gQXMgYSByZXN1bHQsIG1pc3NlZCBvcHBvcnR1bml0aWVzIGR1ZSB0byBoaWdoIGRlbWFuZCwgbGltaXRlZCBlbXBsb3llZSBza2lsbHMsIG9yIHBvb3IgdmlzaXRvciBleHBlcmllbmNlcyBhcmUgbm90IGFkZHJlc3NlZCBpbiB0aGUgc2NoZWR1bGluZyBwcm9jZXNzLCB1bHRpbWF0ZWx5IGxlYWRpbmcgdG8gYSBkZWNsaW5lIGluIGN1c3RvbWVyIGxveWFsdHksIHdoaWNoIGNhbiBpbXBhY3QgdGhlIHN0cmVuZ3RoIG9mIHRoZSBicmFuZCBhbmQgb3ZlcmFsbCByZXZlbnVlLlxuXG4jIyBBVCBBUklBRE5FXG4hW2FuYWx5dGljcy1vbi1zY3JlZW4ucG5nXSgvdXBsb2Fkcy9hbmFseXRpY3Nfb25fc2NyZWVuX2M1NTdjOTE1YTEucG5nKVxuXG5BdCBBcmlhZG5lLCB3ZSBwcmlkZSBvdXJzZWx2ZXMgb24gb2ZmZXJpbmcgY3V0dGluZy1lZGdlIHNvbHV0aW9ucyB0byBoZWxwIGJ1c2luZXNzZXMgb3B0aW1pemUgdGhlaXIgb3BlcmF0aW9ucyBhbmQgbWF4aW1pemUgcmV2ZW51ZS4gT3VyIGFkdmFuY2VkIHNjaGVkdWxpbmcgbWVjaGFuaXNtcyBhcmUgZGVzaWduZWQgdG8gcHJvdmlkZSB1bnByZWNlZGVudGVkIGFjY3VyYWN5IGluIGZvcmVjYXN0aW5nIGhvdXJseSBmb290IHRyYWZmaWMgZm9yIGV2ZXJ5IGFyZWEgb2YgeW91ciBzdG9yZSwgZXZlcnkgaG91ciB0aHJvdWdob3V0IHRoZSBlbnRpcmUgd2Vlay4gQnkgbGV2ZXJhZ2luZyB0aGlzIGluZm9ybWF0aW9uLCB3ZSBhcmUgYWJsZSB0byBnZW5lcmF0ZSBhbiBvcHRpbWFsIHNjaGVkdWxlIHRoYXQgaXMgZm9jdXNlZCBvbiBtYXhpbWl6aW5nIHRoZSBjb252ZXJzaW9uIHJhdGUgb2YgZXZlcnkgcHJvZHVjdC5cblxuIVt1bnBsZWFzZWQtY3VzdG9tZXIucG5nXSgvdXBsb2Fkcy91bnBsZWFzZWRfY3VzdG9tZXJfNDU2MzU2NGE0ZC5wbmcpXG5cblRoZSBleGlzdGluZyBzY2hlZHVsaW5nIHN5c3RlbXMgZG8gbm90IHRha2UgaW50byBjb3NpZGVyYXRpb24gbWlzc2VkIG9wcG9ydHVuaXRpZXMgZHVlIHRvOlxuXG4xKSBoaWdoIGRlbWFuZFxuXG4yKSBsaW1pdGVkIGVtcGxveWVlIHNraWxscywgb3JcblxuMykgcG9vciB2aXNpdG9yIGV4cGVyaWVuY2VzLlxuXG5UaGlzIGNhbiBzaWduaWZpY2FudGx5IGltcGFjdCBjdXN0b21lciBsb3lhbHR5IGFuZCB1bHRpbWF0ZWx5IGltcGFjdCB0aGUgc3RyZW5ndGggb2YgeW91ciBicmFuZCBhbmQgb3ZlcmFsbCByZXZlbnVlLiBUbyBhZGRyZXNzIHRoaXMgaXNzdWUsIG91ciBzY2hlZHVsaW5nIGFsZ29yaXRobXMgYXJlIGNvbnRpbnVvdXNseSBtb25pdG9yaW5nIHlvdXIgcHJvY2Vzc2VzIHRvIGVuc3VyZSB0aGV5IGFyZSBvcHRpbWl6ZWQgZm9yIG1heGltdW0gZWZmaWNpZW5jeS4gT3VyIHJlYWwtdGltZSBhbmFseXRpY3MgZnVydGhlciBjb250cmlidXRlcyB0byB0aGUgY29ycmVjdGlvbiBvZiBzY2hlZHVsaW5nIGVycm9ycyBieSBsaXZlIGNvbW11bmljYXRpbmcgd2l0aCB5b3VyIHNhbGVzIHJlcHJlc2VudGF0aXZlcyBvbiB0aGUgZmllbGQgYW5kIHJlcXVlc3RpbmcgdGhlbSB0byBmb2N1cyB0aGVpciBhdHRlbnRpb24gb24gaGlnaGVyIG9idGFpbmVkIG9wcG9ydHVuaXRpZXMsIHdoaWNoIG1heSBoYXZlIGJlZW4gaW1wb3NzaWJsZSB0byBmb3JlY2FzdCBiZWZvcmVoYW5kLlxuXG4hW3RpbHRlZC1hbmFseXRpY3MucG5nXSgvdXBsb2Fkcy90aWx0ZWRfYW5hbHl0aWNzX2UyMzYyZmZkMzgucG5nKVxuXG5PdXIgc29sdXRpb24gaXMgZmxleGlibGUgYW5kIGRlc2lnbmVkIHRvIGFkYXB0IHRvIHlvdXIgYnVzaW5lc3MgbmVlZHMuIFRoZSBzY2hlZHVsZSBpcyBiZWluZyBhbHRlcmVkIG9uIGEgd2Vla2x5IGJhc2lzLCB0b3dhcmRzIGEgY29uc3RhbnQgaW1wcm92ZW1lbnQgb2YgeW91ciBjb252ZXJzaW9uIHJhdGUuIFdlIGFsc28gbW9uaXRvciBjcm9zcy1zZWxsaW5nIG9wcG9ydHVuaXRpZXMgb2YgZWFjaCBwcm9kdWN0LCBwcm92aWRpbmcgZ3VpZGFuY2UgdG8gc2FsZXMgcmVwcmVzZW50YXRpdmVzIG9uIGhvdyB0byBzZWxsIGFuZCBiZXR0ZXIgc3RydWN0dXJlIHRoZSBzcGFjZS4gQWRkaXRpb25hbGx5LCBvdXIgc29sdXRpb24gdHJhY2tzIHRoZSBwcmVjaXNlIGNvbnZlcnNpb24gcmF0ZSBvZiBldmVyeSBwcm9kdWN0LCBlbmFibGluZyB1cyB0byBwcm9wb3NlIHByaWNpbmcgYWRqdXN0bWVudHMgdGhhdCBjYW4gY29udHJpYnV0ZSB0b3dhcmRzIGluY3JlYXNpbmcgdGhlIGNvbnZlcnNpb24gcmF0ZSBvZiB2aXNpdG9ycyB0byBjdXN0b21lcnMgYW5kIHVsdGltYXRlbHkgbWF4aW1pemUgeW91ciBpbmNvbWUuXG5cbkluIGNvbmNsdXNpb24sIG91ciBhZHZhbmNlZCBzY2hlZHVsaW5nIG1lY2hhbmlzbXMsIHJlYWwtdGltZSBhbmFseXRpY3MsIGFuZCBwcmVjaXNlIG1vbml0b3Jpbmcgb2YgcHJvZHVjdCBjb252ZXJzaW9uIHJhdGVzIHByb3ZpZGUgYSBjb21wcmVoZW5zaXZlIHNvbHV0aW9uIHRvIGhlbHAgeW91ciBidXNpbmVzcyBvcHRpbWl6ZSBpdHMgb3BlcmF0aW9ucyBhbmQgbWF4aW1pemUgcmV2ZW51ZS4gT3VyIHRlYW0gaXMgZGVkaWNhdGVkIHRvIGhlbHBpbmcgeW91IGFjaGlldmUgeW91ciBnb2FscyBhbmQgZW5zdXJlIHRoYXQgeW91ciBjdXN0b21lcnMgcmVjZWl2ZSB0aGUgYmVzdCBwb3NzaWJsZSBleHBlcmllbmNlIHdoZW4gdmlzaXRpbmcgeW91ciBzdG9yZS4gSWYgeW91IGFyZSBpbnRlcmVzdGVkIGluIEFyaWFkbmUncyBhZHZhbmNlZCBzY2hlZHVsaW5nIG1lY2hhbmlzbXMsIHlvdSBjYW4gZ2V0IGluIGNvbnRhY3Qgd2l0aCBvdXIgdGVhbSBoZXJlLiIsImV4Y2VycHQiOiJFeHBsb3JlIGhvdyBBcmlhZG5lJ3MgaW5ub3ZhdGl2ZSB0ZWNobm9sb2d5IGlzIHJldmFtcGluZyBwaHlzaWNhbCByZXRhaWwuIFdlIGxldmVyYWdlIGFkdmFuY2VkIHNjaGVkdWxpbmcgbWVjaGFuaXNtcyBhbmQgcmVhbC10aW1lIGFuYWx5dGljcyB0byBvcHRpbWl6ZSBzdG9yZSBvcGVyYXRpb25zLCBtYXhpbWl6aW5nIHJldmVudWUgYnkgZW5oYW5jaW5nIGNvbnZlcnNpb24gcmF0ZXMuIE91ciBzb2x1dGlvbnMgYXJlIHRhaWxvcmVkIHRvIGNvdW50ZXIgbWlzc2VkIG9wcG9ydHVuaXRpZXMgZHVlIHRvIGhpZ2ggZGVtYW5kLCBlbXBsb3llZSBza2lsbCBnYXBzLCBvciBwb29yIHZpc2l0b3IgZXhwZXJpZW5jZXMgLSBmYWN0b3JzIG9mdGVuIG92ZXJsb29rZWQgYnkgZXhpc3Rpbmcgc3lzdGVtcy4gV2UgYWltIHRvIHByZXNlcnZlIGN1c3RvbWVyIGxveWFsdHksIGJvbHN0ZXIgeW91ciBicmFuZCwgYW5kIHByb3BlbCB5b3VyIHByb2ZpdHMuIERpdmUgaW50byB0aGlzIHBvc3QgdG8gZGlzY292ZXIgaG93IEFyaWFkbmUgY2FuIGhlbHAgdHJhbnNmb3JtIHlvdXIgaW4tc3RvcmUgZXhwZXJpZW5jZS4iLCJjcmVhdGVkQXQiOiIyMDIzLTA2LTAyVDEyOjU4OjIzLjQ2NFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA2LTA1VDEzOjM3OjAxLjkwNVoiLCJwdWJsaXNoZWRBdCI6IjIwMjMtMDYtMDJUMTM6MDM6NDEuMjg4WiIsImltYWdlIjp7ImRhdGEiOnsiaWQiOjU2LCJhdHRyaWJ1dGVzIjp7Im5hbWUiOiJFbXBsb3llZS1vZi15b3VyLnN0b3JlLnBuZyIsImFsdGVybmF0aXZlVGV4dCI6bnVsbCwiY2FwdGlvbiI6bnVsbCwid2lkdGgiOjgwMCwiaGVpZ2h0Ijo0NDksImZvcm1hdHMiOnsic21hbGwiOnsiZXh0IjoiLnBuZyIsInVybCI6Ii91cGxvYWRzL3NtYWxsX0VtcGxveWVlX29mX3lvdXJfc3RvcmVfOTExMWY0MDM4OC5wbmciLCJoYXNoIjoic21hbGxfRW1wbG95ZWVfb2ZfeW91cl9zdG9yZV85MTExZjQwMzg4IiwibWltZSI6ImltYWdlL3BuZyIsIm5hbWUiOiJzbWFsbF9FbXBsb3llZS1vZi15b3VyLnN0b3JlLnBuZyIsInBhdGgiOm51bGwsInNpemUiOjM2LjQ4LCJ3aWR0aCI6NTAwLCJoZWlnaHQiOjI4MX0sIm1lZGl1bSI6eyJleHQiOiIucG5nIiwidXJsIjoiL3VwbG9hZHMvbWVkaXVtX0VtcGxveWVlX29mX3lvdXJfc3RvcmVfOTExMWY0MDM4OC5wbmciLCJoYXNoIjoibWVkaXVtX0VtcGxveWVlX29mX3lvdXJfc3RvcmVfOTExMWY0MDM4OCIsIm1pbWUiOiJpbWFnZS9wbmciLCJuYW1lIjoibWVkaXVtX0VtcGxveWVlLW9mLXlvdXIuc3RvcmUucG5nIiwicGF0aCI6bnVsbCwic2l6ZSI6NjMuMDMsIndpZHRoIjo3NTAsImhlaWdodCI6NDIxfSwidGh1bWJuYWlsIjp7ImV4dCI6Ii5wbmciLCJ1cmwiOiIvdXBsb2Fkcy90aHVtYm5haWxfRW1wbG95ZWVfb2ZfeW91cl9zdG9yZV85MTExZjQwMzg4LnBuZyIsImhhc2giOiJ0aHVtYm5haWxfRW1wbG95ZWVfb2ZfeW91cl9zdG9yZV85MTExZjQwMzg4IiwibWltZSI6ImltYWdlL3BuZyIsIm5hbWUiOiJ0aHVtYm5haWxfRW1wbG95ZWUtb2YteW91ci5zdG9yZS5wbmciLCJwYXRoIjpudWxsLCJzaXplIjoxNC41MSwid2lkdGgiOjI0NSwiaGVpZ2h0IjoxMzh9fSwiaGFzaCI6IkVtcGxveWVlX29mX3lvdXJfc3RvcmVfOTExMWY0MDM4OCIsImV4dCI6Ii5wbmciLCJtaW1lIjoiaW1hZ2UvcG5nIiwic2l6ZSI6MTEuMjksInVybCI6Ii91cGxvYWRzL0VtcGxveWVlX29mX3lvdXJfc3RvcmVfOTExMWY0MDM4OC5wbmciLCJwcmV2aWV3VXJsIjpudWxsLCJwcm92aWRlciI6ImxvY2FsIiwicHJvdmlkZXJfbWV0YWRhdGEiOm51bGwsImNyZWF0ZWRBdCI6IjIwMjMtMDYtMDVUMDk6MTE6MjUuNzA4WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDYtMDVUMDk6MTE6MjUuNzA4WiJ9fX0sImF1dGhvciI6eyJkYXRhIjp7ImlkIjoyLCJhdHRyaWJ1dGVzIjp7ImZpcnN0bmFtZSI6IkdvdmFydGhhbiIsImxhc3RuYW1lIjoiTmF0YXJhamFuIiwidXNlcm5hbWUiOm51bGwsInByZWZlcmVkTGFuZ3VhZ2UiOm51bGwsImNyZWF0ZWRBdCI6IjIwMjMtMDUtMTZUMDg6MzQ6NDguMTM2WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDUtMTZUMDk6MDg6MjUuMTQ5WiJ9fX19fSx7ImlkIjo4LCJhdHRyaWJ1dGVzIjp7InRpdGxlIjoiSG93IHRvIENvcGUgd2l0aCB0aGUgRm9yZWNhc3QgRGVjbGluZSBpbiBOdW1iZXIgb2YgUGFzc2VuZ2VycyIsInNsdWciOiJhaXJwb3J0LWhlYXRtYXAiLCJjb250ZW50IjoiIyBIb3cgdG8gQ29wZSB3aXRoIHRoZSBGb3JlY2FzdCBEZWNsaW5lIGluIE51bWJlciBvZiBQYXNzZW5nZXJzXG5BaXJwb3J0cyBoYXZlIGV4cGVyaWVuY2VkIHRoZSBiaWdnZXN0IGNoYWxsZW5nZSBpbiB0aGUgaW5kdXN0cnkgc2luY2UgaXRzIGluY2VwdGlvbiB3aXRoIENvdmlkLTE5LiBUaGUgbnVtYmVyIG9mIHBhc3NlbmdlcnMgdG9kYXkgaXMgc3RpbGwgWzM2JSBsZXNzIF0oaHR0cHM6Ly93d3cuaWNhby5pbnQvc3VzdGFpbmFiaWxpdHkvRG9jdW1lbnRzL0NvdmlkLTE5L0lDQU9fY29yb25hdmlydXNfRWNvbl9JbXBhY3QucGRmKXRoYW4gcHJlLWNvdmlkIGxldmVscywgd2l0aCBvdmVyYWxsIHJlZHVjdGlvbiBvZiB1cCB0byA2NzIgbWlsbGlvbiB0cmF2ZWxlcnMuIEhvd2V2ZXIsIHRoYXQgaXMgbm90IHRoZSBvbmx5IGJpZyBoaXQgdG8gdGhlIGFpcnBvcnRzLiBbQmFpbiAmIENvIHByZWRpY3RzXShodHRwczovL3d3dy5iYWluLmNvbS9pbnNpZ2h0cy9haXJwb3J0LXJldGFpbC1icmFjZS1mb3ItZGlzcnVwdGlvbi8pIHRoYXQgdGhlcmUgd2lsbCBiZSBhIGRlY3JlYXNlIGluIHRoZSBzaGFyZSBvZiBidXNpbmVzcyB0cmF2ZWwsIGFsb25nIHdpdGggbG9uZy1oYXVsIGdyb3VwcyBhbmQgQ2hpbmVzZSBwYXNzZW5nZXJzLCB3aGljaCBtZWFucyBhIGRyb3AgaXMgcHJvamVjdGVkIGluIHRoZSBsdXh1cnkgZ29vZHMgc2FsZXMuXG5cblRvIGtlZXAgdGhlaXIgZmluYW5jaWFsIHN1c3RhaW5hYmlsaXR5LCBhaXJwb3J0cyBuZWVkIHRvIHJlLXN0cmF0ZWdpemUgdGhlaXIgbWFya2V0aW5nIGFuZCBkZWFsIHdpdGggdGhlIGRlY2xpbmUgaW4gcGFzc2VuZ2VyIG51bWJlcnMsIGFtb25nIG90aGVyIHByb2JsZW1zIHN1Y2ggYXMgdGhlIGVjb25vbWljIGNyaXNpcyB3ZSBhcmUgY3VycmVudGx5IGV4cGVyaWVuY2luZy47XG5cbkluIHRoaXMgYXJ0aWNsZSwgSSB3aWxsIGJlIGludmVzdGlnYXRpbmcgdGhlIHdheXMgaG93IGFpcnBvcnRzIGFyZSBkZWFsaW5nIHdpdGggdGhlc2UgY2hhbGxlbmdlcyBhbmQga2VlcGluZyB0aGVpciByZXZlbnVlcyB1cC5cblxuIyBXaGVyZSB0byBmb2N1czogYWVyb25hdXRpY2FsIG9yIG5vbi1hZXJvbmF1dGljYWwgcmV2ZW51ZXM/XG5cblRoZSBxdWV1ZXMgYXJlIGluZGVlZCBhIGJpZyB0cm91YmxlIGZvciBhaXJwb3J0cyB0aGF0IGNvbmNlYWxzIHRoZSBwb3RlbnRpYWwgb2YgaXRzIHJldGFpbCBjb25jZXNzaW9ucy4gV2Ugc3BlbmQgYW4gYXZlcmFnZSBvZiAkNyBmb3IgZXZlcnkgaG91ciB3ZSBzcGVuZCBpbiBhIHRlcm1pbmFsOyBjb252ZXJzZWx5LCBvdXIgc3BlbmRpbmcgZGVjcmVhc2VzIDMwJSBmb3IgZXZlcnkgMTAgbWludXRlcyB3ZSBzdGFuZCBpbiBhIHNjcmVlbmluZyBsaW5lLiBUbyBpbmNyZWFzZSBkd2VsbCB0aW1lLCBhaXJwb3J0cyBlbmNvdXJhZ2UgcGFzc2VuZ2VycyB0byBhcnJpdmUgZXh0cmVtZWx5IGVhcmx5IGFuZCB0aGV5IGludmVzdCBpbiBleHBlZGl0aW5nIHRoZSBzZWN1cml0eSBwcm9jZXNzLlxuXG5Xb3VsZCB5b3UgbGlrZSB0byBhY2Nlc3MgdGhlc2Ugc29sdXRpb25zIGZvciB5b3VyIGFpcnBvcnQsIGFuZCB0cmFjayBhbmQgYW5hbHl6ZSB5b3VyIHBhc3NlbmdlcnMgYWNjdXJhdGVseSBpbiByZWFsLXRpbWUgd2l0aG91dCB2aW9sYXRpbmcgR0RQUj8gQ2xpY2sgaGVyZSB0byBib29rIGFuIGFwcG9pbnRtZW50IHdpdGggdXMgYW5kIGdldCBhIG9uZS1tb250aCBmcmVlIHN1YnNjcmlwdGlvbi5cblRoZSByZXZlbnVlIHN0cmVhbXMgb2YgYWlycG9ydHMgY2FuIGJlIGRpdmlkZWQgaW50byB0d28gbWFpbiBzb3VyY2VzOiBhZXJvbmF1dGljYWwgYW5kIG5vbi1hZXJvbmF1dGljYWwgcmV2ZW51ZXMuXG5cbkFlcm9uYXV0aWNhbCByZXZlbnVlIG1ha2VzIHRoZSBtYWpvcml0eSBvZiB0aGUgYWlycG9ydCBpbmNvbWUgd2l0aCA1NCUgb2YgdG90YWwgYWlycG9ydCByZXZlbnVlcyAoQUNJKSwgaG93ZXZlciwgdGhpcyBtaWdodCBjaGFuZ2Ugc29vbi4gQmFpbiAmIENvIGFydGljbGUgc2hvd3MgdGhhdCBpdCBtaWdodCBmYWxsIGRvd24gdG8gYXJvdW5kIDQ1JSBieSAyMDI1LlxuXG4hW2Rpc3RyaWJ1dGlvbi1vZi1nbG9iYWwtcmV2ZW51ZXMucG5nXSgvdXBsb2Fkcy9kaXN0cmlidXRpb25fb2ZfZ2xvYmFsX3JldmVudWVzXzQwZmFkZTM3NzQucG5nKVxuXG4jIE5vbi1hZXJvbmF1dGljYWwgcmV2ZW51ZSB0byB0aGUgcmVzY3VlXG5Ob24tYWVyb25hdXRpY2FsIHJldmVudWVzIGFyZSBhaXJwb3J0IGluY29tZSB0aGF0IGlzIGdhaW5lZCBmcm9tIG5vbi1mbGlnaHQgZmFjaWxpdGllcyBzdWNoIGFzIHBhcmtpbmcgZ2FyYWdlcywgY2FyIHJlbnRhbHMsIHJlc3RhdXJhbnRzIGFuZCBzaG9wcy5cblxuVGhlIGZhY3RzIGFib3ZlIGFyZSBwdXNoaW5nIGFpcnBvcnRzIHRvIGJlY29tZSByYXRoZXIgY29tbWVyY2lhbCBidXNpbmVzcyBjZW50ZXJzIGFuZCBmb2N1cyBtb3JlIG9uIG5vbi1hZXJvbmF1dGljYWwgcmV2ZW51ZXMsIHdoaWNoIG1ha2VzIHNlbnNlIGZyb20gYW4gaW52ZXN0bWVudCBwZXJzcGVjdGl2ZSBzaW5jZSBpdCBkaXZlcnNpZmllcyB0aGVpciByZXZlbnVlIHBvcnRmb2xpby5cblxuQmVzaWRlcywgYWVyb25hdXRpY2FsIHJldmVudWUgcGVyIHBhc3NlbmdlciAoJDkuOTkpIGlzIHN0aWxsIGxlc3MgdGhhbiB0aGUgY29zdCBwZXIgcGFzc2VuZ2VyICgkMTQuMTEpLiBUaGlzIGFnYWluIHNob3dzIHRoZSBpbXBvcnRhbmNlIG9mIHRoZSBub24tYWVyb25hdXRpY2FsIHJldmVudWVzIGZvciB0aGUgZmluYW5jaWFsIHN1c3RhaW5hYmlsaXR5IG9mIHRoZSBhaXJwb3J0IHNlY3Rvci5cblxuQmVsb3cgYXJlIGhvdyBsZWFkaW5nIGFpcnBvcnRzIGFyZSB0b2RheSBzdWNjZXNzZnVsbHkgZGVhbGluZyB3aXRoIHRoZSBkZWNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIHBhc3NlbmdlcnM6XG5cbiMjIFN0b3JlLW1peCBhbmQgUHJvZHVjdC1taXggYmFzZWQgb24gUGVyc29uYXNcbkEgZm9yZWNhc3QgcmVkdWN0aW9uIGluIHRoZSB2b2x1bWUgb2YgcGFzc2VuZ2VycyBpbiB0aGUgbmV4dCBmaXZlIHRvIHNpeCB5ZWFycyBjcmVhdGVzIGEgbmV3IGNoYWxsZW5nZSBmb3IgYWlycG9ydCByZXRhaWxlcnMuIFRoZXkgbmVlZCB0byB1bmRlcnN0YW5kIHRoZWlyIGN1c3RvbWVycyBiZXR0ZXIsIGFuZCByZS1kZWZpbmUgdGhlaXIgb2ZmZXJpbmdzIGFjY29yZGluZ2x5IHRvIGluY3JlYXNlIHBhc3NlbmdlciBwZW5ldHJhdGlvbiBpbiBzaG9wcywgYW5kIG1haW50YWluIGEgc3VzdGFpbmFibGUgZmluYW5jaWFsIHNvdXJjZS5cblxuVG8gYWNoaWV2ZSB0aGlzLCB0aGV5IHdpbGwgbmVlZCBtb3JlIHRoYW4gb25lIHBlcnNvbmEuIFRoZXkgd2lsbCBuZWVkIHRvIHRhcmdldCBzcGVjaWZpYyBwZXJzb25hcyB3aXRoIHRoZWlyIHByb2R1Y3QtbWl4LCBzdG9yZS1taXgsIGludGVncmF0ZWQgZXhwZXJpZW5jZXMuLi4gVXN1YWxseSBpbiB0aGlzIHN0ZXAsIG9uZSBtaWdodCBjb25zaWRlciB0aGUgY29udmVudGlvbmFsIHdheSBvZiBkaXZpZGluZyB0aGVpciB0YXJnZXQgY3VzdG9tZXIgaW50byBkaWZmZXJlbnQgcGVyc29uYXMgYmFzZWQgb24gYWdlLCBnZW5kZXIsIHJhY2UuLi4gSG93ZXZlciwgdGhlcmUgaXMgYSBtb3JlIHRhcmdldGVkIHdheS5cblxuQXJpYWRuZSBoYXMgZGV2ZWxvcGVkIGEgc29sdXRpb24gdGhhdCBhbm9ueW1vdXNseSBjcmVhdGVzIHBlcnNvbmFzIGJhc2VkIG9uIHdoaWNoIHN0b3Jlcy9yZXN0YXVyYW50cyB0aGV5IGhhdmUgdmlzaXRlZC4gRm9yIGV4YW1wbGUsIG9uZSBwZXJzb25hIGlzIOKAnHBlb3BsZSB0aGF0IHZpc2l0ZWQgY2xvdGhpbmcgc3RvcmUsIHNob2Ugc3RvcmUsIG51dHJpdGlvbiBzaG9wIGFuZCBzcG9ydHMtY2xvdGhpbmcgc2hvcOKAnS4gQXJpYWRuZSBoYXMgZm91bmQgdGhhdCB0aGlzIHBlcnNvbmEncyBuZXh0IHN0b3AgaXMgZS5nLiwgNjclIGEgcmVzdGF1cmFudCwgMzAlIGFub3RoZXIgY2xvdGhpbmcgc3RvcmUgb3IgaGUgd2lsbCBmaW5pc2ggaGlzIGpvdXJuZXkgYnkgMyUgcHJvYmFiaWxpdHkuIEJlbG93IGlzIGFuIGV4YW1wbGUgb2YgYSBwcm9kdWN0LW1peCBhbmFseXNpcy4gQmFzZWQgb24gdGhlc2UgcGVyc29uYXMsIEFyaWFkbmUncyBhaXJwb3J0IGNsaWVudHMgZG8gQS9CIHRlc3RpbmcgYW5kIGZpbmQgd2hhdCB3b3JrcyBiZXN0IGZvciB0aGVpciByZXRhaWwgY29uY2Vzc2lvbnMsIHdoaWNoIGlzIGEgY29tbW9uIHByYWN0aWNlIGluIHRoZSByZXRhaWwgaW5kdXN0cnkuXG5cbiFbcHJvZHVjdC1taXgucG5nXSgvdXBsb2Fkcy9wcm9kdWN0X21peF9lOTdmN2U0MWUwLnBuZylcblxuRmluYWxseSwgdGhleSB3aWxsIGhhdmUgYSBiZXR0ZXIgc3RvcmUtbWl4LCBhbmQgd2lsbCBiZSBhYmxlIHRvIGRlY2lkZSBiZXR0ZXIgd2hpY2ggYXJlYSB0byBsZWFzZSB0byB3aGF0IGtpbmQgb2Ygc2hvcC4gVGhpcyB3YXksIHRoZXkgY2FuIG1ha2Ugc3VyZSB0aGF0IHRoZSBjb25jZXNzaW9uYWlyZXMgYXJlIGdldHRpbmcgdGhlIGJlc3QgZm9vdGZhbGwgdHJhZmZpYy4gU2FtZSBnb2VzIGluc2lkZSB0aGUgcmV0YWlsIHN0b3JlLCBiYXNlZCBvbiB0aGVzZSBwZXJzb25hcyBhbmQgdGhlaXIgdHJhamVjdG9yaWVzLCB0aGUgY3VzdG9tZXIgam91cm5leSBjYW4gYmUgaW1wcm92ZWQsIHByb2R1Y3QtbWl4IGNhbiBiZSBvcHRpbWl6ZWQsIGFuZCB0aGUgc2VydmljZXMgY2FuIGJlIGJldHRlciBjYXRlcmVkLlxuXG4jIyBEeW5hbWljIGxlYXNlIHByaWNpbmdcbkFpcnBvcnRzIGFuZCByZXRhaWxlcnMgdXN1YWxseSBoYXZlIGZpeGVkIGFuZCBsb25nLXRlcm0gbGVhc2UgY29udHJhY3RzLiBJdCBpcyBhbHNvIGEgY29tbW9uIHByYWN0aWNlIHRvIGluY2x1ZGUgbWluaW11bSBjb21taXNzaW9uIGZyb20gcmV0YWlsZXIgc2FsZXMgb24gdG9wIG9mIHRoZSByZW50YWwgZmVlLCBlLmcuLCAxMCUgZnJvbSBhbGwgdGhlIHJldmVudWUgZnJvbSB0aGUgY2xvdGhpbmcgc3RvcmUgd2lsbCBnbyB0byB0aGUgYWlycG9ydCBvbiB0b3Agb2YgdGhlIHJlbnRhbCBmZWUuXG5cbkhvd2V2ZXIsIEFyaWFkbmUgc3VnZ2VzdHMgYSBuZXcgbWV0aG9kIGZvciB0aGUgbGVhc2UgcHJpY2VzLiBXaXRoWyBwZW9wbGUgY291bnRpbmddKGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMy9zb2x1dGlvbnMvcGVvcGxlLWNvdW50aW5nLykgYW5kIGFub255bW91cyBwYXNzZW5nZXIgdHJhY2tpbmcsIEFyaWFkbmUgY2FuIGFuYWx5emUgaG93IG1hbnkgcGVvcGxlIHNwZW5kIGhvdyBtdWNoIHRpbWUgYXQgd2hhdCBsb2NhdGlvbiBhbmQgaG93IHRoZXkgbW92ZSBpbnNpZGUgdGhlIGFpcnBvcnQuIEJhc2VkIG9uIHRoaXMsIGl0IGNhbiBhbHNvIG1lYXN1cmUgaG93IG11Y2ggZm9vdGZhbGwgdHJhZmZpYyBlYWNoIHNob3AgcmVjZWl2ZXMuXG5cbiFbYWlycG9ydC1oZWF0bWFwLmdpZl0oL3VwbG9hZHMvYWlycG9ydF9oZWF0bWFwX2NiZjllMTc3ZWQuZ2lmKVxuXG5uc3RlYWQgb2Ygc2l6ZSBvciB0aGUgbG9jYXRpb24gb2YgdGhlIHNob3AgaW5zaWRlIHRoZSBhaXJwb3J0LCBBcmlhZG5lIHN1Z2dlc3RzIGxlYXNpbmcgYXJlYXMgYmFzZWQgb24gcmVsYXRpdmUgZm9vdGZhbGwgdHJhZmZpYy4gVGhlIHNob3BzIHRoYXQgcmVjZWl2ZSB0aGUgbW9zdCBmb290ZmFsbCB0cmFmZmljIHdpbGwgYmUgcGF5aW5nIG1vcmUgdGhhbiBvdGhlciBzaG9wcyBzaW5jZSB0aGUgYWlycG9ydCB3b3VsZCBiZSBkZWxpdmVyaW5nIGJldHRlciByZXN1bHRzIGFuZCBwcm92aW5nIHRoaXMgdG8gdGhlIHRlbmFudC4gSW4gYWRkaXRpb24gdG8gYWJzb2x1dGUgbnVtYmVycyBzdWNoIGFzIG51bWJlciBvZiBwZW9wbGUgYW5kIHF1ZXVlIHRpbWUgYW5kIGR3ZWxsIHRpbWUsIEFyaWFkbmUgYWxzbyBwcm92aWRlcyBoZWF0bWFwIG9mIHRoZSBhaXJwb3J0IGFuZCB0aGUgc3RvcmVzLlxuXG5UaGUgY29udmVyc2lvbiBmcm9tIHRoaXMgZm9vdGZhbGwgdHJhZmZpYyAoaG93IG1hbnkgcGVvcGxlIHdpbGwgYmVjb21lIGN1c3RvbWVycykgd2lsbCBkZXBlbmQgb24gdGhlIGluLXN0b3JlIHN1Y2Nlc3Mgb2YgdGhlIHRlbmFudHMuXG5cbiMjIFRoZSBiZXN0IG1vZGVsIG9mIGFuY2hvciB0ZW5hbnRcbkFyaWFkbmUncyBhbmNob3IgdGVuYW50IGFydGljbGUgZGVmaW5lcyBhbmNob3IgdGVuYW50cyBhcyBhIGxlYWRpbmcsIGxhcmdlIHJldGFpbGVyIHRoYXQgaGFzIHNpZ25lZCBhbiBhZ3JlZW1lbnQgdG8gbGVhc2UgYSBzaWduaWZpY2FudCBzcGFjZSwgbW9zdGx5IGluIGEgc2hvcHBpbmcgbWFsbCwgYnV0IGFsc28gaW4gYW55IGdpdmVuIGFpcnBvcnQsIGNvbXBsZXgsIG9yIG5laWdoYm9yaG9vZC5cblxuTGF0ZXIgaW4gdGhlIGFydGljbGUsIGl0IHNob3dzIHRoYXQgYW4gYW5jaG9yIHRlbmFudCBjYW4gYmUgZXZlbiB0aGUgc21hbGxlc3Qgc2hvcCBpbiB0aGUgbWFsbCBvciBhaXJwb3J04oCmIEFyaWFkbmUgaGFzIGZvdW5kIHRoYXQgYSB0aW55IHBvc3Qgb2ZmaWNlIGluc2lkZSBhIG1hbGwgZ2V0cyB0aGUgbW9zdCB0cmFmZmljLiBUaGlzIHRpbnkgcG9zdCBvZmZpY2UgdGhlbiBjb252ZXJ0cyBpdHMgdmlzaXRvcnMgdG8gb3RoZXIgc2hvcHMgaW4gdGhlIG1hbGwuXG5cbiFbYWlycG9ydC12ZW5kaW5nLW1hY2hpbmUtMS5wbmddKC91cGxvYWRzL2FpcnBvcnRfdmVuZGluZ19tYWNoaW5lXzFfZDY3Nzc1OTY4MC5wbmcpXG5cbkFpcnBvcnRzIGhhdmUgZXZlbiBhIGJpZ2dlciBvcHBvcnR1bml0eSwgYXV0b21hdGVkIHJldGFpbCB1bml0cywgdG8gZGlyZWN0IHRoZWlyIHBhc3NlbmdlcnMgYW5kIGNvbnZlcnQgdGhlbSB0byBvdGhlciBzdG9yZXMuXG5cbkF1dG9tYXRlZCByZXRhaWwgdW5pdHMgYXJlIGJlY29taW5nIG1vcmUgYW5kIG1vcmUgY29tbW9uLCB3aXRoIGEgcHJlc2VuY2UgaW4gNTMlIG9mIE5vcnRoIEFtZXJpY2FuIGFpcnBvcnRzLCBhY2NvcmRpbmcgdG8gdGhlIEFDSSdzIENvbmNlc3Npb25zIEJlbmNobWFya2luZyBTdXJ2ZXkuIFRoZXNlIHZlbmRpbmcgbWFjaGluZXMgYXJlIGxvdy1jb3N0IChhbG1vc3Qgbm8gbGFib3IgY29zdCkgYW5kIHNtYWxsIGluIHNpemUsIGFuZCBwcm9kdWNlIHNpZ25pZmljYW50IGluY29tZSBmb3IgdGhlIGFpcnBvcnQuXG5cblRoZXkgY2FuIHRha2UgdGhlIHJvbGUgb2YgYW4gYW5jaG9yIHRlbmFudCBpZiBtYW5hZ2VkIHNtYXJ0LiBUaGUgbW9zdCBkZW1hbmRlZCBwcm9kdWN0cyBjYW4gYmUgc29sZCBhdCBjaGVhcGVyIHRoYW4gYWlycG9ydC1hdmVyYWdlIHByaWNlcyBhbmQgdGhhdCB3b3VsZCBpbmNyZWFzZSB0aGUgbnVtYmVyIG9mIGN1c3RvbWVycy4gSWYgdGhlc2UgbWFjaGluZXMgd2l0aCBoaWdoIHRyYWZmaWMgYXJlIHBsYWNlZCB3ZWxsIGluIHRoZSBzdG9yZS1taXgsIHRoZXkgY2FuIGJlIGEgc2lnbmlmaWNhbnQgc291cmNlIG9mIGZvb3RmYWxsIHRyYWZmaWMgZm9yIG90aGVyIHN0b3Jlcy4gQWNjb3JkaW5nIHRvIGFuY2hvciB0ZW5hbnQgYXJ0aWNsZSBhZ2FpbiwgdGhleSBjb252ZXJ0IG1vcmUgdGhhbiAyNSUgb2YgdGhlaXIgdmlzaXRvcnMgdG8gb3RoZXIgc3RvcmVzLlxuXG4hW2FpcnBvcnQtcmV0YWlsLWFuYWx5c2lzLnBuZ10oL3VwbG9hZHMvYWlycG9ydF9yZXRhaWxfYW5hbHlzaXNfYzIyODNiY2E0NC5wbmcpXG5cbiMgUXVldWUgTWFuYWdlbWVudCBhbmQgVmlydHVhbCBRdWV1aW5nXG5BY2NvcmRpbmcgdG8gQUNJLCA2MCUgb2YgYWxsIHRoZSBvcGVyYXRpbmcgY29zdHMgYXJlIGxhYm9yIHJlbGF0ZWQuIEl0IGlzIG5vdCBvbmx5IGR1ZSB0byB0aGUgbnVtYmVyIG9mIGVtcGxveWVlcywgYnV0IGFsc28gZHVlIHRvIHRoZSBkaWZmaWN1bHR5IG9mIHRoZSBoaXJpbmcgcHJvY2Vzcy4gQW4gYWlycG9ydCBpcyBtb3N0bHkgc2l0dWF0ZWQgdmVyeSBmYXIgZnJvbSB0aGUgY2l0eSBjZW50ZXIgYW5kIHRoYXQgbWFrZXMgZmluZGluZyB0aGUgdGFsZW50cyB3YXkgbW9yZSBjaGFsbGVuZ2luZy4gVGhleSBuZWVkIHRvIG9mZmVyIGJldHRlciB0ZXJtcyBhbmQgbW9yZSBhdHRyYWN0aXZlIGNvbXBlbnNhdGlvbiBwYWNrYWdlcywgc28gdGhlIGNhbmRpZGF0ZXMgd2lsbCBwcmVmZXIgdGhlIGFpcnBvcnQgb3ZlciBhbm90aGVyIGVtcGxveWVyLiBOb3Qgb25seSB0aGUgY29tcGVuc2F0aW9uLCBidXQgYWxzbyB0aGUgYmFja2dyb3VuZCBjaGVja3MgbWFrZSBpdCBoYXJkZXIgdG8gZW1wbG95IHN0YWZmLiBBaXJwb3J0cyBhcmUgdGhlIGZpcnN0IGdhdGV3YXkgdG8gYSBjb3VudHJ5LCBhbmQgZ292ZXJubWVudHMgbWFrZSB0aGUgYWlycG9ydHMgZG8gYSBzdHJpY3QgYmFja2dyb3VuZCBjaGVjayBkdXJpbmcgdGhlIGhpcmluZyBwcm9jZXNzIHdoaWNoIGFnYWluIGNvbWVzIHdpdGggZXh0cmEgY29zdC5cblxuIVthaXJwb3J0LW9wZXJhdGluZy1leHBlbnNlcy5wbmddKC91cGxvYWRzL2FpcnBvcnRfb3BlcmF0aW5nX2V4cGVuc2VzX2QyOTFlN2UzNmUucG5nKVxuXG5TaW5jZSBhaXJwb3J0cyBhcmUgaW52ZXN0aW5nIHNvIG11Y2ggY2FwaXRhbCBpbnRvIGxhYm9yIGZvcmNlLCB0aGV5IG5lZWQgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIHJldHVybiBpcyBqdXN0aWZ5aW5nIHRoaXMgaW52ZXN0bWVudC4gRm9yIGV4YW1wbGUsIHRoZSBzdGFmZiBoYW5kbGluZyB0aGUgcGFzc2VuZ2VycywgdGhleSBuZWVkIHRvIGVuc3VyZSB0aGF0IHRoZSBwYXNzZW5nZXIgc2F0aXNmYWN0aW9uIGlzIGhpZ2guIEEgc3R1ZHkgdGl0bGVkICdUaGUgSW1wYWN0IG9mIEFpcnBvcnQgU2VydmljZXNjYXBlIG9uIFBhc3NlbmdlcnMnIFNhdGlzZmFjdGlvbicgZm91bmQgdGhhdCBwYXNzZW5nZXJzIHdobyBoYXZlIGEgcG9zaXRpdmUgYWlycG9ydCBleHBlcmllbmNlIHNwZW5kIDQ1JSBtb3JlIG1vbmV5IHdoaWxlIGluIHRoZSBhaXJwb3J0IHRoYW4gZGlzYXBwb2ludGVkIHBhc3NlbmdlcnMuXG5cblRoZXJlIGlzIGEgW2ZvcmVjYXN0IHJlZHVjdGlvbl0oaHR0cHM6Ly93d3cuYmFpbi5jb20vaW5zaWdodHMvYWlycG9ydC1yZXRhaWwtYnJhY2UtZm9yLWRpc3J1cHRpb24vKSBpbiB0aGUgbnVtYmVyIG9mIHBhc3NlbmdlcnMgaW4gdGhlIG5leHQgZml2ZSB0byBzaXggeWVhcnMuIFRoaXMgaGlnaGxpZ2h0cyB0aGUgaW1wb3J0YW5jZSBvZiBwYXNzZW5nZXIgc2F0aXNmYWN0aW9uLCBhbmQgcGVuZXRyYXRpb24gaW4gc2hvcHMgZm9yIHRoZSBncm93dGguIFRoZXJlIGFyZSBhIG11bHRpcGxlIHdheXMgQXJpYWRuZSBjYW4gc3VwcG9ydCBvbiB0aGlzIHB1cnBvc2UsIGZvciBleGFtcGxlIFtxdWV1ZSBtYW5hZ2VtZW50XShodHRwOi8vYXJpYWRuZS5pbmMvc29sdXRpb25zL3F1ZXVlLW1hbmFnZW1lbnQvKSwgW2F1dG9tYXRpYyBwZW9wbGUgY291bnRpbmddKGh0dHA6Ly9hcmlhZG5lLmluYy9zb2x1dGlvbnMvcGVvcGxlLWNvdW50aW5nLykgaW4gdGhlIHF1ZXVlcyBhbmQgbWVhc3VyaW5nIHRoZSB3YWl0aW5nIHRpbWUsIGFuZCBhbGVydGluZyBlbXBsb3llZXMgb25jZSBpdCBleGNlZWRzIHRoZSB0aHJlc2hvbGQsIG9yIFt2aXJ0dWFsIHF1ZXVpbmddKGh0dHA6Ly9sYXJpYWRuZS5pbmMvc29sdXRpb25zL3ZpcnR1YWwtcXVldWluZy8pLiBcblxuIVtxdWV1ZS5qcGddKC91cGxvYWRzL3F1ZXVlX2ZkM2QyYmNkYWEuanBnKVxuXG5UaGUgcXVldWUgYmVjb21lcyB2aXJ0dWFsIGFuZCB0aGUgcGFzc2VuZ2VyIGdldHMgbm90aWZpZWQgd2hlbiBpdCBpcyBoaXMvaGVyIHR1cm4gdG8gcHJvY2VlZC5cblxuIVt2aXJ0dWFsLXF1ZXVlLnBuZ10oL3VwbG9hZHMvdmlydHVhbF9xdWV1ZV9jYjYyYzE3MDFhLnBuZylcblxuVGhlIHF1ZXVlcyBhcmUgaW5kZWVkIGEgYmlnIHRyb3VibGUgZm9yIGFpcnBvcnRzIHRoYXQgY29uY2VhbHMgdGhlIHBvdGVudGlhbCBvZiBpdHMgcmV0YWlsIGNvbmNlc3Npb25zLiBXZSBzcGVuZCBhbiBhdmVyYWdlIG9mICQ3IGZvciBldmVyeSBob3VyIHdlIHNwZW5kIGluIGEgdGVybWluYWw7IGNvbnZlcnNlbHksIG91ciBzcGVuZGluZyBkZWNyZWFzZXMgMzAlIGZvciBldmVyeSAxMCBtaW51dGVzIHdlIHN0YW5kIGluIGEgc2NyZWVuaW5nIGxpbmUuIFRvIGluY3JlYXNlIGR3ZWxsIHRpbWUsIGFpcnBvcnRzIGVuY291cmFnZSBwYXNzZW5nZXJzIHRvIGFycml2ZSBleHRyZW1lbHkgZWFybHkgYW5kIHRoZXkgaW52ZXN0IGluIGV4cGVkaXRpbmcgdGhlIHNlY3VyaXR5IHByb2Nlc3MuXG5cbldvdWxkIHlvdSBsaWtlIHRvIGFjY2VzcyB0aGVzZSBzb2x1dGlvbnMgZm9yIHlvdXIgYWlycG9ydCwgYW5kIHRyYWNrIGFuZCBhbmFseXplIHlvdXIgcGFzc2VuZ2VycyBhY2N1cmF0ZWx5IGluIHJlYWwtdGltZSB3aXRob3V0IHZpb2xhdGluZyBHRFBSPyBbQ2xpY2sgaGVyZV0oaHR0cDovL2FyaWFkbmUuaW5jL2xldHN0YWxrKSB0byBib29rIGFuIGFwcG9pbnRtZW50IHdpdGggdXMgYW5kIGdldCBhIG9uZS1tb250aCBmcmVlIHN1YnNjcmlwdGlvbi4iLCJleGNlcnB0IjoiQWlycG9ydHMgZmFjZSB1bnByZWNlZGVudGVkIGNoYWxsZW5nZXMgZHVlIHRvIENvdmlkLTE5LCByZXN1bHRpbmcgaW4gYSAzNiUgZHJvcCBpbiBwYXNzZW5nZXIgbnVtYmVycyBhbmQgYSBmb3JlY2FzdGVkIGRlY2xpbmUgaW4gaGlnaC1yZXZlbnVlIHRyYXZlbGxlcnMuIFRoaXMgdXJnZXMgYWlycG9ydHMgdG8gcmVmb2N1cyB0aGVpciBzdHJhdGVnaWVzIHRvIHN1c3RhaW4gdGhlbXNlbHZlcyBmaW5hbmNpYWxseSwgd2l0aCBlbXBoYXNpcyBzaGlmdGluZyBmcm9tIGFlcm9uYXV0aWNhbCB0byBub24tYWVyb25hdXRpY2FsIHJldmVudWVzLiBUaGlzIGFydGljbGUgZXhwbG9yZXMgc29sdXRpb25zIHRvIGJvb3N0IG5vbi1hZXJvbmF1dGljYWwgcmV2ZW51ZXMsIGluY2x1ZGluZyBwZXJzb25hbGl6ZWQgc3RvcmUgYW5kIHByb2R1Y3QgbWl4ZXMgYmFzZWQgb24gY3VzdG9tZXIgcGVyc29uYXMsIGR5bmFtaWMgbGVhc2UgcHJpY2luZywgc21hcnQgbWFuYWdlbWVudCBvZiBhbmNob3IgdGVuYW50cywgYW5kIGVmZmljaWVudCBxdWV1ZSBtYW5hZ2VtZW50LiBJdCBmdXJ0aGVyIGRpc2N1c3NlcyBBcmlhZG5lJ3MgaW5ub3ZhdGl2ZSBzb2x1dGlvbnMgdGhhdCBsZXZlcmFnZSBhbm9ueW1vdXMgcGFzc2VuZ2VyIHRyYWNraW5nIGFuZCByZWFsLXRpbWUgYW5hbHlzaXMgdG8gb3B0aW1pemUgcGFzc2VuZ2VyIGZsb3csIG1heGltaXplIHJldGFpbCBjb25jZXNzaW9ucywgYW5kIGltcHJvdmUgdGhlIG92ZXJhbGwgcGFzc2VuZ2VyIGV4cGVyaWVuY2UuIiwiY3JlYXRlZEF0IjoiMjAyMy0wNi0wMVQxNDo0NjoxMi40NDhaIiwidXBkYXRlZEF0IjoiMjAyMy0wNi0wMlQxMjozNTozMi45NDBaIiwicHVibGlzaGVkQXQiOiIyMDIzLTA2LTAyVDEyOjMxOjU3LjE1OVoiLCJpbWFnZSI6eyJkYXRhIjp7ImlkIjoyOCwiYXR0cmlidXRlcyI6eyJuYW1lIjoiYWlycG9ydCBjb25jZXNzaW9uICgxKS5wbmciLCJhbHRlcm5hdGl2ZVRleHQiOm51bGwsImNhcHRpb24iOm51bGwsIndpZHRoIjoxMDAwLCJoZWlnaHQiOjY2NywiZm9ybWF0cyI6eyJzbWFsbCI6eyJleHQiOiIucG5nIiwidXJsIjoiL3VwbG9hZHMvc21hbGxfYWlycG9ydF9jb25jZXNzaW9uXzFfOGI4NjAyZTRhMy5wbmciLCJoYXNoIjoic21hbGxfYWlycG9ydF9jb25jZXNzaW9uXzFfOGI4NjAyZTRhMyIsIm1pbWUiOiJpbWFnZS9wbmciLCJuYW1lIjoic21hbGxfYWlycG9ydCBjb25jZXNzaW9uICgxKS5wbmciLCJwYXRoIjpudWxsLCJzaXplIjoyOTguMzksIndpZHRoIjo1MDAsImhlaWdodCI6MzM0fSwibWVkaXVtIjp7ImV4dCI6Ii5wbmciLCJ1cmwiOiIvdXBsb2Fkcy9tZWRpdW1fYWlycG9ydF9jb25jZXNzaW9uXzFfOGI4NjAyZTRhMy5wbmciLCJoYXNoIjoibWVkaXVtX2FpcnBvcnRfY29uY2Vzc2lvbl8xXzhiODYwMmU0YTMiLCJtaW1lIjoiaW1hZ2UvcG5nIiwibmFtZSI6Im1lZGl1bV9haXJwb3J0IGNvbmNlc3Npb24gKDEpLnBuZyIsInBhdGgiOm51bGwsInNpemUiOjYxNy4xNywid2lkdGgiOjc1MCwiaGVpZ2h0Ijo1MDB9LCJ0aHVtYm5haWwiOnsiZXh0IjoiLnBuZyIsInVybCI6Ii91cGxvYWRzL3RodW1ibmFpbF9haXJwb3J0X2NvbmNlc3Npb25fMV84Yjg2MDJlNGEzLnBuZyIsImhhc2giOiJ0aHVtYm5haWxfYWlycG9ydF9jb25jZXNzaW9uXzFfOGI4NjAyZTRhMyIsIm1pbWUiOiJpbWFnZS9wbmciLCJuYW1lIjoidGh1bWJuYWlsX2FpcnBvcnQgY29uY2Vzc2lvbiAoMSkucG5nIiwicGF0aCI6bnVsbCwic2l6ZSI6NzYuMzIsIndpZHRoIjoyMzQsImhlaWdodCI6MTU2fX0sImhhc2giOiJhaXJwb3J0X2NvbmNlc3Npb25fMV84Yjg2MDJlNGEzIiwiZXh0IjoiLnBuZyIsIm1pbWUiOiJpbWFnZS9wbmciLCJzaXplIjoyNDYuMzksInVybCI6Ii91cGxvYWRzL2FpcnBvcnRfY29uY2Vzc2lvbl8xXzhiODYwMmU0YTMucG5nIiwicHJldmlld1VybCI6bnVsbCwicHJvdmlkZXIiOiJsb2NhbCIsInByb3ZpZGVyX21ldGFkYXRhIjpudWxsLCJjcmVhdGVkQXQiOiIyMDIzLTA2LTAxVDE1OjIxOjE0Ljc4MloiLCJ1cGRhdGVkQXQiOiIyMDIzLTA2LTAxVDE1OjIxOjE0Ljc4MloifX19LCJhdXRob3IiOnsiZGF0YSI6eyJpZCI6MiwiYXR0cmlidXRlcyI6eyJmaXJzdG5hbWUiOiJHb3ZhcnRoYW4iLCJsYXN0bmFtZSI6Ik5hdGFyYWphbiIsInVzZXJuYW1lIjpudWxsLCJwcmVmZXJlZExhbmd1YWdlIjpudWxsLCJjcmVhdGVkQXQiOiIyMDIzLTA1LTE2VDA4OjM0OjQ4LjEzNloiLCJ1cGRhdGVkQXQiOiIyMDIzLTA1LTE2VDA5OjA4OjI1LjE0OVoifX19fX0seyJpZCI6NywiYXR0cmlidXRlcyI6eyJ0aXRsZSI6IkltcGFjdCBvZiBBbmNob3IgVGVuYW50cyBpbiBhIHNob3BwaW5nIGNvbXBsZXgiLCJzbHVnIjoiYW5jaG9yLXRlbmFudHMiLCJjb250ZW50IjoiIyBJbXBhY3Qgb2YgQW5jaG9yIFRlbmFudHMgaW4gYSBzaG9wcGluZyBjb21wbGV4XG5cbkFuY2hvciB0ZW5hbnRzIGFyZSBjcml0aWNhbCB0byB0aGUgc3VjY2VzcyBvZiBhIHJldGFpbCBzaG9wcGluZyBjZW50cmUuIFRoZXkgYXR0cmFjdCBjdXN0b21lcnMgYW5kIGdlbmVyYXRlIGZvb3RmYWxsIGZvciB0aGUgU2hvcHBpbmcgY2VudHJlIGFzIGEgd2hvbGUsIGFuZCBvdGhlciB0ZW5hbnRzIHVzZSB0aGlzIGZyZWUgdHJhZmZpYyB0byBjb252ZXJ0IHRoZSB2aXNpdG9ycyBpbnRvIHRoZWlyIGN1c3RvbWVycy5cblxuIyMgV2hhdCBpcyBhbiBhbmNob3IgdGVuYW50P1xuXG5EbyB5b3Uga25vdyB0aGF0IGEgZ3JvY2VyeSBzdG9yZSBub3Qgb25seSBicmluZ3MgdmlzaXRvcnMgdG8gaXRzIG93biBidXQgYWxzbyBoZWxwcyBicmluZyBhdWRpZW5jZXMgdG8gdGhlIG5lYXJieSBzdG9yZXM/Rm9yIGV4YW1wbGUsIGlmIEFsZGkgbW92ZXMgaW50byB5b3VyIGNlbnRyZSwgaXQgd2lsbCBhdHRyYWN0IG90aGVyIHJldGFpbGVycyB0byBvcGVuIHN0b3JlcyBpbiB5b3VyIGNvbXBsZXggYXMgcGVvcGxlIHNob3AgYXQgQWxkaSBmb3IgdGhlaXIgZXNzZW50aWFsIG5lZWRzIGFuZCB2aXNpdCBuZWFyYnkgc3RvcmVzIGZvciBjYXN1YWwgc2hvcHBpbmcuIEhlcmUsIEFsZGkgYWN0cyBhcyBhbiBhbmNob3IgdGVuYW50IHRoYXQgbm90IGp1c3QgYXR0cmFjdHMgY3VzdG9tZXJzIHRvIGl0cyBvd24gYnV0IGFsc28gdGhlIG5lYXJieSBzaG9wcywgaW5jcmVhc2luZyB0aGUgb3ZlcmFsbCBzYWxlcyBvZiB0aGUgc2hvcHBpbmcgYXJlYS5cblxuQW4gYW5jaG9yIHRlbmFudCBpcyBhIGxlYWRpbmcsIGxhcmdlIHJldGFpbGVyIHRoYXQgaGFzIHNpZ25lZCBhbiBhZ3JlZW1lbnQgdG8gbGVhc2UgYSBzaWduaWZpY2FudCBzcGFjZSwgbW9zdGx5IGluIGEgc2hvcHBpbmcgbWFsbCwgYnV0IGFsc28gaW4gYW55IGdpdmVuIGFpcnBvcnQsIGNvbXBsZXgsIG9yIG5laWdoYm9yaG9vZC4gVGhlIHRlcm0gXCJhbmNob3JcIiBjb21lcyBmcm9tIHRoZSBpZGVhIHRoYXQgYW4gYW5jaG9yIHdpbGwga2VlcCBzaGlwcyBmcm9tIGRyaWZ0aW5nIGR1ZSB0byB0aGVpciBzaXplIGFuZCB3ZWlnaHQuXG5cbkFuY2hvciB0ZW5hbnRzIGFsc28gYWlkIGluIHRoZSBzYWxlcyBvZiBvdGhlciByZXRhaWxlcnMsIGFuZCBjb250cmlidXRlIHRvIHRoZSBvdmVyYWxsIHN1Y2Nlc3Mgb2YgdGhlIHJldGFpbGVycyBpbiB0aGVpciBzdXJyb3VuZGluZyBhcmVhIGJ5IGJlaW5nIGEgcGFzc2l2ZSBhY3RvciB0aGF0IGRyaXZlcyBvdmVyYWxsIGN1c3RvbWVyIGVuZ2FnZW1lbnQuXG5cbiMjIEFyZSB5b3UgcmVhbGx5IG15IGFuY2hvciB0ZW5hbnQ/XG5cbk15IGZpcnN0IHF1ZXN0aW9uIHdhc+KApiB3aG8gaXMgcmVhbGx5IHRoZSBhbmNob3IgdGVuYW50PyBUbyBhbnN3ZXIgdGhhdCwgSSB3ZW50IHRocm91Z2ggYSBzYW1wbGUgb2Ygc2hvcGluZyBjZW50ZXJzIHRvIGRldGVjdCB0aGVpciBhbmNob3IgdGVuYW50cywgZGV0ZWN0IHdobyBhY3R1YWxseSBicmluZ3MgaW4gdGhlIG1vc3QgdHJhZmZpYy4gSW4gdGhlIGZpZ3VyZSBiZWxvdywgSSBoYXZlIHZpc3VhbGl6ZWQgd2hpY2ggc2VjdG9ycyB0aGUgYW5jaG9yIHRlbmFudHMgYmVsb25nIHRvLlxuXG4hW2FuY2hvcnRlbmFudHNhdmVyYWdldHJhZmZpYy5qcGddKC91cGxvYWRzL2FuY2hvcnRlbmFudHNhdmVyYWdldHJhZmZpY18xMDM0ZDUwZWRkLmpwZylcblxuVGhlIHJlc3VsdHMgd2VyZSBxdWl0ZSBpbnRlcmVzdGluZyEgT24gQXZlcmFnZSwgMjMlIG9mIHRoZSBzaG9wcyBpbiBhIHNob3BwaW5nIGFyZWEgYXJlIEFuY2hvciB0ZW5hbnRzLCB3aGljaCBpbmNsdWRlcyBHcm9jZXJ5IHN0b3JlcywgRElZLCBhbmQgc21hbGwgc2hvcHMgbGlrZSB0aGUgcG9zdCBvZmZpY2VzLCBBVE1zLCBLaW9zayBhbmQgQ2lnYXJldHRlIHNob3BzLiBPdXQgb2YgYWxsIHRoZSBBbmNob3IgdGVuYW50cywqKiA2MCUgb2YgdGhlbSBhcmUgR3JvY2VyeSBzdG9yZXMqKiBhbmQgdGhleSBhcmUgdGhlIHByaW1hcnkgZm9vdGZhbGwgZ2VuZXJhdG9ycyBmb3IgdGhlIHNob3BwaW5nIGNlbnRlcnMuIEhvd2V2ZXIsIHdlIG11c3QgcmVtZW1iZXIgdGhhdCB0aGV5IGFsc28gb2NjdXB5IHRoZSBsYXJnZXN0IHNwYWNlIGluIHRoZWlyIGNvbXBsZXguXG5cbiMjIElzIGl0IEltcG9ydGFudCB0byBoYXZlIGFuIEFuY2hvciB0ZW5hbnQgYXJvdW5kIHlvdT9cbiMjIE15IG5leHQgc3RlcCB3YXMgdG8gaW52ZXN0aWdhdGUgaWYgdGhlIGFuY2hvciB0ZW5hbnRzIHJlYWxseSBkZXNlcnZlIHRoZSBwcml2aWxlZ2Ugb2YgaGF2aW5nICoqYmlnIHNwYWNlIGFuZCBsb3cgcmVudC4qKiBUbyBtZWFzdXJlIHRoaXMsIEkgY29tcGFyZWQgdGhlIGF2ZXJhZ2UgdmlzaXRhdGlvbiBvZiBhbiBhbmNob3IgdGVuYW50IGFnYWluc3QgdGhlIG90aGVyIHJldGFpbCBzdG9yZXMuXG5cbiFbYXZlcmFnZW51bWJlcm9mdmlzaXRvcnNwZXJzdG9yZS5qcGddKC91cGxvYWRzL2F2ZXJhZ2VudW1iZXJvZnZpc2l0b3JzcGVyc3RvcmVfMTRkOGJjYjAzYS5qcGcpXG4qKlxuQW4gQW5jaG9yIHRlbmFudCBhdHRyYWN0cyBhcm91bmQgNSB0aW1lcyBtb3JlIHZpc2l0b3JzICoqdGhhbiBhbiBhdmVyYWdlIHN0b3JlIGluIGEgc2hvcHBpbmcgbWFsbC4gVGhpcyBtaWdodCBiZSBvbmUgZ29vZCByZWFzb24gdG8gaGF2ZSBhIG1vcmUgZmxleGlibGUgbGVhc2luZyBjb250cmFjdCBmb3IgYW4gYW5jaG9yIHRlbmFudC5cblxuIyMgSG93IGRvIHlvdSBtZWFzdXJlIHRoZSBQaWUgc2hhcmVkIGJ5IHlvdSBhbmQgdGhlIEFuY2hvciB0ZW5hbnQ/XG5cbkJ1dCBkbyB0aGV5IGFjdHVhbGx5IGhlbHAgdGhlIG90aGVyIHN0b3JlcyBnZXQgbW9yZSB2aXNpdG9ycz8gVGhpcyBpcyBhIHZlcnkgZGlmZmljdWx0IHF1ZXN0aW9uIHRvIGFuc3dlciwgc2luY2UgaXQgaXMgaGFyZCB0byBxdWFudGlmeSBob3cgbWFueSBvZiB0aGVpciBjdXN0b21lcnMgYWN0dWFsbHkgZ28gdG8gb3RoZXIgc2hvcHMgYWZ0ZXIgdGhlaXIgdmlzaXQuIFRvIGFuc3dlciB0aGF0LCBJIGdvdCBoZWxwIGZyb20gKipBcmlhZG5lIEFuYWx5dGljcyoqLCBqdXN0ICoqZXhwb3J0ZWQgdGhlaXIgZGFzaGJvYXJkIHdpdGggYSBzaW1wbGUgY2xpY2suKipcblxuIVthbmNob3J0ZW5hbnRjb252ZXJzaW9uLmpwZ10oL3VwbG9hZHMvYW5jaG9ydGVuYW50Y29udmVyc2lvbl84ZGM4YWZkNWI0LmpwZylcblxuXG4iLCJleGNlcnB0IjoiQW5jaG9yIHRlbmFudHMgYXJlIGNyaXRpY2FsIHRvIHRoZSBzdWNjZXNzIG9mIGEgcmV0YWlsIHNob3BwaW5nIGNlbnRyZS4gVGhleSBhdHRyYWN0IGN1c3RvbWVycyBhbmQgZ2VuZXJhdGUgZm9vdGZhbGwgZm9yIHRoZSBTaG9wcGluZyBjZW50cmUgYXMgYSB3aG9sZSwgYW5kIG90aGVyIHRlbmFudHMgdXNlIHRoaXMgZnJlZSB0cmFmZmljIHRvIGNvbnZlcnQgdGhlIHZpc2l0b3JzIGludG8gdGhlaXIgY3VzdG9tZXJzLi4uIEFuY2hvciB0ZW5hbnRzIGFsc28gYWlkIGluIHRoZSBzYWxlcyBvZiBvdGhlciByZXRhaWxlcnMsIGFuZCBjb250cmlidXRlIHRvIHRoZSBvdmVyYWxsIHN1Y2Nlc3Mgb2YgdGhlIHJldGFpbGVycyBpbiB0aGVpciBzdXJyb3VuZGluZyBhcmVhIGJ5IGJlaW5nIGEgcGFzc2l2ZSBhY3RvciB0aGF0IGRyaXZlcyBvdmVyYWxsIGN1c3RvbWVyIGVuZ2FnZW1lbnQuIiwiY3JlYXRlZEF0IjoiMjAyMy0wNS0zMFQxMzozMjo1OC43ODFaIiwidXBkYXRlZEF0IjoiMjAyMy0wNi0wMlQxMzowMjowMy44ODFaIiwicHVibGlzaGVkQXQiOiIyMDIzLTA1LTMwVDEzOjM0OjQyLjgwMFoiLCJpbWFnZSI6eyJkYXRhIjp7ImlkIjoyMiwiYXR0cmlidXRlcyI6eyJuYW1lIjoiYW5jaG9ydGVuYW50cy5qcGVnIiwiYWx0ZXJuYXRpdmVUZXh0IjpudWxsLCJjYXB0aW9uIjpudWxsLCJ3aWR0aCI6MTE5OSwiaGVpZ2h0Ijo4MDAsImZvcm1hdHMiOnsibGFyZ2UiOnsiZXh0IjoiLmpwZWciLCJ1cmwiOiIvdXBsb2Fkcy9sYXJnZV9hbmNob3J0ZW5hbnRzXzU3ZjkyODNjMWEuanBlZyIsImhhc2giOiJsYXJnZV9hbmNob3J0ZW5hbnRzXzU3ZjkyODNjMWEiLCJtaW1lIjoiaW1hZ2UvanBlZyIsIm5hbWUiOiJsYXJnZV9hbmNob3J0ZW5hbnRzLmpwZWciLCJwYXRoIjpudWxsLCJzaXplIjoxNDkuNjMsIndpZHRoIjoxMDAwLCJoZWlnaHQiOjY2N30sInNtYWxsIjp7ImV4dCI6Ii5qcGVnIiwidXJsIjoiL3VwbG9hZHMvc21hbGxfYW5jaG9ydGVuYW50c181N2Y5MjgzYzFhLmpwZWciLCJoYXNoIjoic21hbGxfYW5jaG9ydGVuYW50c181N2Y5MjgzYzFhIiwibWltZSI6ImltYWdlL2pwZWciLCJuYW1lIjoic21hbGxfYW5jaG9ydGVuYW50cy5qcGVnIiwicGF0aCI6bnVsbCwic2l6ZSI6NDksIndpZHRoIjo1MDAsImhlaWdodCI6MzM0fSwibWVkaXVtIjp7ImV4dCI6Ii5qcGVnIiwidXJsIjoiL3VwbG9hZHMvbWVkaXVtX2FuY2hvcnRlbmFudHNfNTdmOTI4M2MxYS5qcGVnIiwiaGFzaCI6Im1lZGl1bV9hbmNob3J0ZW5hbnRzXzU3ZjkyODNjMWEiLCJtaW1lIjoiaW1hZ2UvanBlZyIsIm5hbWUiOiJtZWRpdW1fYW5jaG9ydGVuYW50cy5qcGVnIiwicGF0aCI6bnVsbCwic2l6ZSI6OTYuMTcsIndpZHRoIjo3NTAsImhlaWdodCI6NTAwfSwidGh1bWJuYWlsIjp7ImV4dCI6Ii5qcGVnIiwidXJsIjoiL3VwbG9hZHMvdGh1bWJuYWlsX2FuY2hvcnRlbmFudHNfNTdmOTI4M2MxYS5qcGVnIiwiaGFzaCI6InRodW1ibmFpbF9hbmNob3J0ZW5hbnRzXzU3ZjkyODNjMWEiLCJtaW1lIjoiaW1hZ2UvanBlZyIsIm5hbWUiOiJ0aHVtYm5haWxfYW5jaG9ydGVuYW50cy5qcGVnIiwicGF0aCI6bnVsbCwic2l6ZSI6MTIuOTEsIndpZHRoIjoyMzMsImhlaWdodCI6MTU2fX0sImhhc2giOiJhbmNob3J0ZW5hbnRzXzU3ZjkyODNjMWEiLCJleHQiOiIuanBlZyIsIm1pbWUiOiJpbWFnZS9qcGVnIiwic2l6ZSI6MTk3LjU0LCJ1cmwiOiIvdXBsb2Fkcy9hbmNob3J0ZW5hbnRzXzU3ZjkyODNjMWEuanBlZyIsInByZXZpZXdVcmwiOm51bGwsInByb3ZpZGVyIjoibG9jYWwiLCJwcm92aWRlcl9tZXRhZGF0YSI6bnVsbCwiY3JlYXRlZEF0IjoiMjAyMy0wNS0zMFQxMjo1ODozNi4zMTNaIiwidXBkYXRlZEF0IjoiMjAyMy0wNS0zMFQxMjo1ODozNi4zMTNaIn19fSwiYXV0aG9yIjp7ImRhdGEiOnsiaWQiOjYsImF0dHJpYnV0ZXMiOnsiZmlyc3RuYW1lIjoiU3RhdnJvdWxhIiwibGFzdG5hbWUiOiJTYXJyaSIsInVzZXJuYW1lIjpudWxsLCJwcmVmZXJlZExhbmd1YWdlIjpudWxsLCJjcmVhdGVkQXQiOiIyMDIzLTA1LTMxVDEwOjM2OjI2LjE4MVoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA1LTMxVDEwOjM3OjEyLjgwNFoifX19fX0seyJpZCI6NiwiYXR0cmlidXRlcyI6eyJ0aXRsZSI6IjggRGF0YS1Ecml2ZW4gU3RlcHMgdG8gUmUtRGVzaWduIFlvdXIgU3RvcmUiLCJzbHVnIjoicmVkZXNpZ24tcmV0YWlsLXN0b3JlIiwiY29udGVudCI6IiMgOCBEYXRhLURyaXZlbiBTdGVwcyB0byBSZS1EZXNpZ24gWW91ciBTdG9yZVxuSW4gdGhpcyBkaWdpdGFsIGVyYSBvZiByZXRhaWwgc3RvcmVzIGFuZCBFLUNvbW1lcmNlLCBzdGlsbCwgNzMuNCUgb2YgdGhlIGN1c3RvbWVycyBwcmVmZXIgdG8gc2hvcCBpbiBwaHlzaWNhbCByZXRhaWwgc3RvcmVzLiBIZW5jZSwgSXQgaXMgY3J1Y2lhbCB0byBkZXNpZ24geW91ciByZXRhaWwgc3RvcmUgaW4gdGhlIHJpZ2h0IHdheSB0byBvcHRpbWl6ZSB5b3VyIHNwYWNlLCBpbmNyZWFzZSBjdXN0b21lci1wcm9kdWN0IGludGVyYWN0aW9uIGFuZCBtYXhpbWl6ZSB5b3VyIHNhbGVzLiBFdmVuIHRob3VnaCB0aGVyZSBhcmUgc29tZSBleGlzdGluZyBjb21tb24gc3RyYXRlZ2llcyB0aGF0IGV2ZXJ5IHJldGFpbGVyIHVzZXMgdG8gbWF4aW1pemUgdGhlaXIgc2FsZXMsIGRlc2lnbmluZyBhIGxheW91dCBmb3IgZWFjaCBzdG9yZSBpcyBkaWZmZXJlbnQgYW5kIGl0J3Mgbm90IGVhc3kuIEl0IGlzIGJvdGggYW4gYXJ0IGFuZCBhIHNjaWVuY2Ug4oCUIGEgYmxlbmQgb2YgY3JlYXRpdml0eSwgcHN5Y2hvbG9naWNhbCBpbnNpZ2h0cywgYW5kIGFuYWx5c2lzLlxuXG5JbiB0aGlzIGFydGljbGUsIHdl4oCZbGwgdHJ5IHRvIGV4cGxvcmUgdGhlIHdheXMgYW5kIHRvb2xzIHRocm91Z2ggd2hpY2ggeW91IGNhbiBpbXBsZW1lbnQgdG8gcGxhbiB0aGUgYXJyYW5nZW1lbnQgb2YgeW91ciBzdG9yZS5cblxuIyMgU3RlcCAxOiBTZWxlY3RpbmcgUmV0YWlsIFN0b3JlIExheW91dFxuVGhlIHR5cGUgb2YgbGF5b3V0IHlvdSB3aWxsIGNob29zZSBpcyBtYWlubHkgYmFzZWQgb24geW91ciBzcGFjZSwgdGhlIHNob3BwaW5nIGV4cGVyaWVuY2UgeW91IGFyZSB0cnlpbmcgdG8gY3JlYXRlLCBhbmQgdGhlIHByb2R1Y3RzIHlvdSBzZWxsLlxuXG5UaGVyZSBhcmUgZGlmZmVyZW50IGxheW91dCBzdHlsZXMgYnV0IG1vc3RseSBzaXggdHlwZXMgb2YgbGF5b3V0IGFyZSB1c2VkLlxuXG4qKkdyaWQ6KipUaGUgZ3JpZCBmbG9vciBwbGFuIGlzIGFsc28gY2FsbGVkIGEgc3RyYWlnaHQgbGF5b3V0LiBHcmlkIGZsb29yIHBsYW5zIGFyZSBtYWlubHkgdXNlZCBpbiBjb252ZW5pZW5jZSBhbmQgZ3JvY2VyeSBzdG9yZXMsIHdoZXJlIGN1c3RvbWVycyBuZWVkIHRvIGZpbmQgaXRlbXMgcXVpY2tseS4gSXQgaXMgYWxzbyBzdWl0YWJsZSBmb3Igc21hbGwgYnVzaW5lc3Nlcy5cblxuKipMb29wOioqIEFub3RoZXIgbmFtZSBpcyByYWNldHJhY2sgbGF5b3V0LiBUaGlzIGxheW91dCBtYXhpbWl6ZXMgd2FsbCBzcGFjZSBhbmQgbGVhZHMgc2hvcHBlcnMgdG8gYSBndWlkZWQgcGF0aHdheS4gVGhpcyBsYXlvdXQgc2xvd2x5IHNob3dzIHNob3BwZXJzIGRpZmZlcmVudCBwcm9kdWN0cy4gSXQgaXMgbW9zdGx5IHVzZWQgaW4gYXBwYXJlbCwgYWNjZXNzb3J5LCB0b3ksIGhvbWV3YXJlLCBraXRjaGVud2FyZSwgcGVyc29uYWwgY2FyZSwgYW5kIHNwZWNpYWxpdHkgcmV0YWlsIHN0b3Jlcy5cblxuKipGcmVlLWZsb3cvTWl4ZWQ6KiogVGhlIGZyZWUtZmxvdyBsYXlvdXQgZGVsZWdhdGVzIHRoZSByZXRhaWxlciB0byBzaG93Y2FzZSB0aGVpciBicmFuZCB0aHJvdWdoIGltYWdpbmF0aXZlIGRlc2lnbnMgYW5kIGZsb29yIHBsYW5zLiBJdCBpcyBhbHNvIHVzZWQgaW4gYXBwYXJlbCwgc3BlY2lhbHR5IGJyYW5kLCBhbmQgbWl4ZWQtdXNlIHN0b3JlcyBsaWtlIGNhZmVzIHRoYXQgYWxzbyBkaXNwbGF5IGJvb2tzLlxuXG4qKkRpYWdvbmFsOioqIFRoZSBkaWFnb25hbCBmbG9vciBwbGFuIGlzIGFuIG9wZW4gY2VudGVyIGZsb29yIHdpdGggc2V2ZXJhbCBkaXNwbGF5cy4gRXNwZWNpYWxseSB0ZWNoIGFuZCBlbGVjdHJvbmljIHN0b3JlcywgYW5kIGJlYXV0eSBhbmQgY29zbWV0aWNzIHJldGFpbGVycyB1c2UgdGhpcyBmbG9vciBwbGFuLiBUaGlzIGRlc2lnbiBmb2N1c2VzIG9uIGNyZWF0aW5nIG9wZW4gc2lnaHRsaW5lcyB0byBhdHRyYWN0IGJ1eWVycyB0byBjZXJ0YWluIHByb2R1Y3RzLlxuXG4qKkZvcmNlZC1wYXRoOioqIENvbW1vbmx5IGtub3duIGFzIGd1aWRlZCBwbGFucywgZm9yY2VkLXBhdGggbGF5b3V0cyB1c2UgYW4gb3BlbiBlbnRyeXdheSBmb2xsb3dlZCBieSBvbmUgcGF0aHdheSB0aGF0IGRpcmVjdHMgc2hvcHBlcnMgdGhyb3VnaCB0aGUgc3RvcmUuIFRoaXMgcGxhbiBpcyBzZWVuIGluIGZ1cm5pdHVyZSBzdG9yZXMsIHN1Y2ggYXMgSUtFQSBhbmQgaXQgZW5hYmxlcyBpbXB1bHNlIHNhbGVzLlxuXG4qKkFuZ3VsYXI6KiogVGhlIGFuZ3VsYXIgZmxvb3IgcGxhbiB1c2VzIHNtYWxsIGRpc3BsYXlzIGluIHRoZSBjZW50ZXIgb2YgdGhlIHN0b3JlIHRoYXQgaGlnaGxpZ2h0IGZlYXR1cmVkIGl0ZW1zLiBUaGlzIGZsb29yIHBsYW4gaXMgdHlwaWNhbGx5IHVzZWQgYnkgamV3ZWxyeSwgZGVzaWduZXIsIGFuZCBoYW5kYmFnIHN0b3JlcyB3aXRoIGhpZ2gtZW5kIG1lcmNoYW5kaXNlLlxuXG5EZXRlcm1pbmluZyB3aGljaCByZXRhaWwgc3RvcmUgbGF5b3V0IHdpbGwgd29yayBiZXN0IGNvbXBsZXRlbHkgZGVwZW5kcyBvbiBicmFuZCBpbWFnZSwgcHJvZHVjdHMsIGFuZCBjdXN0b21lcnMuIExvdHMgb2YgcmV0YWlsZXJzIGdhaW5lZCBzdWNjZXNzIGJ5IGNvbWJpbmluZyB0d28gb3IgbW9yZSBsYXlvdXRzLlxuXG5PbmUgd2F5IHRvIG1ha2UgYSBkYXRhLWRyaXZlbiBkZWNpc2lvbiBpcyB0byB1c2UgQXJpYWRuZeKAmXMgYW5hbHl0aWNzIHNvbHV0aW9uIGFuZCBjb21wYXJlIHRoZSBzdWNjZXNzIG9mIGRpZmZlcmVudCBsYXlvdXRzIG9yIGNvbWJpbmF0aW9ucy5cblxuSW4gdGhlIGZpZ3VyZSBhYm92ZSBmcm9tIEFyaWFkbmXigJlzIGRhc2hib2FyZCwgaXQgaXMgc2hvd24gaG93IG1hbnkgcGVvcGxlIGhhdmUgdmlzaXRlZCB0aGUgT3V0ZG9vciBTaG9lcyBzZWN0aW9uLiBCdXQgaW5zdGVhZCBvZiAzMzEgcGVvcGxlIGFuZCA3LjggZHdlbGwgdGltZSwgaXQgbWlnaHQgaGF2ZSBiZWVuIDUwMCB2aXNpdG9ycyBhbmQgYSBoaWdoZXIvbG93ZXIgZHdlbGwgdGltZSBpZiB0aGUgc3RvcmUgbGF5b3V0IHdhcyBkaWZmZXJlbnQuXG5cblRoZSBsYXlvdXQgc2VsZWN0aW9uIGFsc28gYWZmZWN0cyB5b3VyIGNyb3NzLXNhbGVzIHBlcmZvcm1hbmNlLiBJZiB5b3UgaGF2ZSB0aGUgcmlnaHQgbGF5b3V0IGZvciB5b3VyIHN0b3JlLCBhbmQgc3VjY2Vzc2Z1bGx5IHBvc2l0aW9uZWQgdGhlIHByb2R1Y3RzLCB0aGVuIHlvdSBtaWdodCBleHBlY3QgYSBtdWNoIGhpZ2hlciByZXR1cm4uIEhvdyB0byBtZWFzdXJlIGlmIGl0IGlzIHRoZSByaWdodCBsYXlvdXQgb3Igc3VjY2Vzc2Z1bCBwbGFjZW1lbnQ/IFlvdSBjYW4gY29tcGFyZSB0aGUgbnVtYmVyIG9mIHBlb3BsZSB0cmFuc2l0aW5nIGZyb20gZWFjaCBzZWN0aW9uIHRvIG90aGVyIHNlY3Rpb25zLCBmYWN0b3IgaW4geW91ciBzYWxlcyBkYXRhLCBkZXZlbG9wIGRpZmZlcmVudCBzdHJhdGVnaWVzIGFuZCBtZWFzdXJlIHRoZSBjaGFuZ2UuIFRoaXMgd2F5IHlvdSB3aWxsIG1ha2Ugc3VyZSB0aGF0IGV2ZW50dWFsbHkgeW91IGhhdmUgdGhlIGJlc3QgcGVyZm9ybWluZyB2ZXJzaW9uIG9mIHlvdXIgc3RvcmUuXG5cbiMjIFN0ZXAgMjogRGVzaWduIGEgYmx1ZXByaW50IG9mIHlvdXIgc3RvcmUgbGF5b3V0XG5cbkFuIGFsdGVybmF0aXZlIGlzIHRvIHVzZSBkaWdpdGFsIHRvb2xzIHRvIGRyYXcvZGlnaXRpemUgeW91ciBmbG9vciBwbGFuLiBGb3IgZXhhbXBsZSwgQXJpYWRuZSBsZXRzIHlvdSBkcmF3IHlvdXIgZmxvb3IgcGxhbiB5b3Vyc2VsZiBvbiB0aGUgZGlnaXRhbCBtYXAgYW5kIHNob3cgeW91IHByZWRpY3Rpb25zIHdoZW4geW91IG1ha2UgYSBjaGFuZ2UgaW4geW91ciBsYXlvdXQ7IHByZWRpY3Rpb25zIG9uIG51bWJlciBvZiBwZW9wbGUsIGR3ZWxsIHRpbWUgYW5kIG1vcmUuXG5cbiMgU3RlcCAzOiBFeGFtaW5lIHRyYWZmaWMgZmxvdyAmIGN1c3RvbWVyIGJlaGF2aW91clxuXG5PbmUgb2YgdGhlIGJpZ2dlc3QgdGhpbmdzIHRoYXQgeW91ciBzdG9yZSBsYXlvdXQgd2lsbCBpbmZsdWVuY2UgaXMgY3VzdG9tZXIgZmxvdy4gSXQgaXMgcXVpdGUgYSBkZWJhdGUgd2hldGhlciB0aGUgY3VzdG9tZXIgc2hvdWxkIGJlIGRpcmVjdGVkIGNsb2Nrd2lzZSBvciBhbnRpLWNsb2Nrd2lzZS4gQnV0IGlmIHlvdSB0aGluayByYXRpb25hbGx5LCBtb3N0IHBlb3BsZSBhcmUgcmlnaHQtaGFuZGVkLCBieSBuYXR1cmUgdGhleSB0dXJuIHRvIHRoZSByaWdodCBhbmQgZXhwbG9yZSB0aGUgc3RvcmUgaW4gYSBjb3VudGVyLWNsb2Nrd2lzZSBkaXJlY3Rpb24uXG5cbkJ1dCBpdCBkZXBlbmRzIG9uIHRoZSBjdXN0b21lcidzIGJlaGF2aW91ci4gU28sIHRoZSBtYWluIHB1cnBvc2UgaXMgdG8gYXZvaWQgY3JlYXRpbmcgZGlzY29tZm9ydCBhbmQgZXZva2UgYSBwb3NpdGl2ZSBjdXN0b21lciBleHBlcmllbmNlLiBBIGxheW91dCB0aGF0IHdvcmtzIHdpdGggeW91ciBjdXN0b21lcnPigJkgbmF0dXJhbCBzaG9wcGluZyBoYWJpdHMgd2lsbCBoZWxwIHlvdSBjcmVhdGUgdGhlIGJlc3QgY3VzdG9tZXIgZXhwZXJpZW5jZS5cblxuIyMgU3RlcCA0OiBQbGFjZSB5b3VyIGNoZWNrb3V0ICYgbWVhc3VyZSBwZXJmb3JtYW5jZVxuXG5DaGVja291dCBpcyB0aGUgYXJlYSB0aGF0IGhvdXNlcyB5b3VyIHBvaW50LW9mLXNhbGUgKFBPUykgc3lzdGVtIG9yIGNhc2ggcmVnaXN0ZXIgd2hlcmUgY3VzdG9tZXJzIHBheSBmb3IgdGhlaXIgcHJvZHVjdHMuIEEgZ29vZCBydWxlIG9mIHRodW1iIGNvdWxkIGJlIHRoZSBuYXR1cmFsIHN0b3BwaW5nIHBvaW50IGluIHRoZSBzaG9wcGluZyBleHBlcmllbmNlIHRoYXQgeW914oCZdmUgaW50ZW50aW9uYWxseSBkZXNpZ25lZC4gRm9yIGV4YW1wbGUsIElmIHlvdXIgY3VzdG9tZXJzIG5hdHVyYWxseSB0dXJuIHJpZ2h0IHdoZW4gdGhleSBlbnRlciwgdGhlbiB0aGUgZnJvbnQgbGVmdCBpcyBwcm9iYWJseSB0aGUgcGVyZmVjdCBsb2NhdGlvbiBmb3IgeW91ciBjaGVja291dCBjb3VudGVyLiAgSG93ZXZlciwgaXQgYWxzbyBkZXBlbmRzIG9uIHRoZSBzaXplIGFuZCBsYXlvdXQgb2YgeW91ciByZXRhaWwgc3RvcmUuXG5cbk5vdCBvbmx5IHRoZSBsb2NhdGlvbiwgYnV0IGFsc28gdGhlIHBlcmZvcm1hbmNlIG9mIHRoZSBjaGVja291dCBhcmVhIGlzIGNyaXRpY2FsLiBJdCBwbGF5cyBhIG1ham9yIHJvbGUgaW4gdGhlIG92ZXJhbGwgY3VzdG9tZXIgc2F0aXNmYWN0aW9uLCB3aGljaCBwbGF5cyBhIGRpcmVjdCByb2xlIGluIHlvdXIgcmV2ZW51ZXMuIEFzIHNlZW4gaW4gdGhlIGZpZ3VyZSBhYm92ZSwgeW91IGNhbiBzZWUgaW4gcmVhbC10aW1lIHRoZSBwZXJmb3JtYW5jZSBvZiB5b3VyIGNoZWNrb3V0IGFyZWEsIGFuZCB0YWtlIHByZWNhdXRpb25zIHRvIG1pbmltaXplIHRoZSB3YWl0aW5nIHRpbWUuXG5cbiMjIFN0ZXAgNTogVXNlIHNtYXJ0IHByb2R1Y3QgcG9zaXRpb25pbmdcblxuT25jZSB5b3UgaGF2ZSB2aXN1YWxpemVkIHlvdXIgZmxvb3IgcGxhbiwgaXQgaXMgdGltZSB0byBzdGFydCBwcm9kdWN0IG1hcHBpbmcuIFdoZW4gcGxhY2luZyB5b3VyIHByb2R1Y3RzLCBkbyBzbyBpbiBhIHdheSB0aGF0IGVuc3VyZXMgY3VzdG9tZXIgZW5nYWdlbWVudCwgdGhhdCBjcmVhdGVzIGEgcG9zaXRpdmUgZXhwZXJpZW5jZSBhbmQgZHJpdmVzIHlvdXIgc2FsZXMuXG5cbiMjIFN0ZXAgNjogT3B0aW1pemUgUHJvZHVjdHMgV2l0aCBGaXh0dXJlcyAmIERpc3BsYXlzXG5cbkVuc3VyZSB0aGF0IHlvdXIgcHJvZHVjdCBzdXBwbGllcyBhcmUgYXBwcm9wcmlhdGUgdG8gY3VzdG9tZXIgZGVtYW5kLiBIYXZlIGVub3VnaCBzcGFjZSBiZXR3ZWVuIHByb2R1Y3RzIGFuZCBmaXh0dXJlcy4gTW9zdCBpbXBvcnRhbnRseSwgeW91ciBhaXNsZXMgYW5kIGRpc3BsYXlzIHNob3VsZCBhbGxvdyBjdXN0b21lcnMgZW5vdWdoIHBlcnNvbmFsIHNwYWNlIHdoZW4gYnJvd3NpbmcgeW91ciBwcm9kdWN0cy5cblxuT3IgeW91IGNhbiB0aGluayBhYm91dCBjbG9zaW5nIGEgZ2F0ZXdheSB0byBpbmNyZWFzZSB5b3VyIHRyYWZmaWMgdG8gb3RoZXIgcHJvZHVjdHMuIFNvbWUgcHJvZHVjdHMgd2l0aCBoaWdoIGNvbnZlcnNpb24gcG90ZW50aWFsIG1heSBiZSBwbGFjZWQgc29tZXdoZXJlIGluIHRoZSBiYWNrIGFuZCBtaXNzaW5nIG91dCBhIGhpZ2ggdHJhZmZpYy4gV2l0aCBzb21lIGNoYW5nZXMgaW4gdGhlIGxheW91dCBhbmQgcHJvZHVjdCBwbGFjZW1lbnQsIHlvdSBjYW4gbWFuYWdlIHRoZSBjdXN0b21lciBmbG93LlxuXG4jIyBTdGVwIDc6IEFkZCBDb21mb3J0IFpvbmVzICYgQ3VzdG9tZXIgQW1lbml0aWVzXG5cbldoaWxlIHRoZSBtYWpvcml0eSBvZiBhIHN0b3Jl4oCZcyBkZXNpZ24gaXMgYmFzZWQgb24gdmlzdWFsIGNvbXBvbmVudHMsIG90aGVyIGZhY3RvcnMg4oCUIGFkZGluZyBzY2VudCwgdG91Y2gsIHNvdW5kLCBhbmQgdGFzdGUg4oCUIGNhbiBhbHNvIG1ha2UgYSBodWdlIGRpZmZlcmVuY2UgaW4gYSBzdG9yZeKAmXMgbG9vayBhbmQgZmVlbC4gSWYgeW91IHdpc2ggdG8gY3JlYXRlIGEgdHJ1bHkgbWVzbWVyaXppbmcgaW4tc3RvcmUgZXhwZXJpZW5jZSwgZGVzaWduIHlvdXIgc3RvcmUgdG8gYXBwZWFsIHRvIGFzIG1hbnkgc2hvcHBlciBzZW5zZXMgYXMgcG9zc2libGUuXG5cbkdyb3VwaW5nIHlvdXIgbWVyY2hhbmRpc2UgaW50byBuZWF0IGNhdGVnb3JpZXMgaXMgYSBncmVhdCBzdHJhdGVneSwgYnV0IHRoaXMgd2lsbCBiZSBwb3NzaWJsZSBpZiB5b3UgY2FuIGZpbmQgcm9vbSB0byBjcm9zcy1tZXJjaGFuZGlzZSBkaWZmZXJlbnQgaXRlbXMuIERpc2NvdmVyIHByb2R1Y3RzIGluIHlvdXIgc3RvcmUgdGhhdCB3b3VsZCBnbyB3ZWxsIHRvZ2V0aGVyIGFuZCBwdXQgdGhlbSBvbiBhIHNpbmdsZSBkaXNwbGF5LlxuXG4jIyBTdGVwIDg6IEVuc3VyZSBZb3VyIFN0b3JlIElzIFJlYWNoYWJsZSBUbyBBbGxcblxuVG8gZW5zdXJlIHlvdXIgc3BhY2UgaXMgcmVhY2hhYmxlIHRvIGFsbCwgeW91IGNhbiBmb2xsb3cgdGhlIGd1aWRlbGluZXMgb2YgdGhlIEFtZXJpY2FucyB3aXRoIERpc2FiaWxpdGllcyBBY3QuIFRoZXJlIGFyZSBtYW55IHJ1bGVzIHRoYXQgcmV0YWlsZXJzIGhhdmUgdG8gdGFrZSBjYXJlIG9mIHRvIGVuc3VyZSB0aGF0IHNwYWNlcyBhcmUgbmF2aWdhYmxlIGFuZCBjb21mb3J0YWJsZS4gRm9yIGV4YW1wbGUsIHlvdSBjYW4gaGF2ZSBhIHNwZWNpYWwgcGFya2luZyBzcGFjZSwga2VlcCBhY2Nlc3NpYmxlIGJhdGhyb29tcyBvcGVuIGR1cmluZyBidXNpbmVzcyBob3VycywgYWx3YXlzIGNsZWFuIHRoZSBmaXR0aW5nIHJvb21zLCBhbmQgZW5zdXJlIHlvdXIgY3VzdG9tZXJzIGtub3cgYWJvdXQgeW91ciBmZWF0dXJlcyBieSBwb3N0aW5nIGFjY2Vzc2liaWxpdHkgaW5mb3JtYXRpb24gb24geW91ciB3ZWJzaXRlIGFuZCBzdG9yZSwgZWR1Y2F0aW5nIHN0YWZmIHNvIHRoZXkgY2FuIHByb3ZpZGUgaW4tc3RvcmUgYXNzaXN0YW5jZS5cblxuIyBDb25jbHVzaW9uXG5cblVsdGltYXRlbHksIHRoZXNlIHByYWN0aWNlcyB3aWxsIGhlbHAgeW91IGNyZWF0ZSBhIHJldGFpbCBkZXNpZ24gdGhhdOKAmXMgYSB3aW4td2luIGZvciBib3RoIHlvdSBhbmQgeW91ciBjdXN0b21lcnMuIFlvdXIgc3RvcmXigJhzIHRyYWZmaWMsIGR3ZWxsIHRpbWUsIGFuZCBzYWxlcyBhcmUgZGlyZWN0bHkgYWZmZWN0ZWQgYnkgeW91ciBzdG9yZSBsYXlvdXQuXG5cblRoYXTigJlzIHdoeSBpdOKAmXMgaW1wb3J0YW50IHRoYXQgeW91IHNwZW5kIHRoZSB0aW1lIGFuZCByZXNvdXJjZXMgaW4gc3VjaCBhIHdheSB0aGF0IG1ha2VzIHN1cmUgdGhlIGxvb2sgYW5kIGZlZWwgb2YgeW91ciBzdG9yZXMgYXJlIG9uIHBvaW50LiBBbHNvLCBkb27igJl0IGZvcmdldCB3aGVuIGl0IGNvbWVzIHRvIGxheW91dHMgYW5kIGRpc3BsYXlzIHRoZSB3b3JrIHNob3VsZCBhbHdheXMgYmUgdXAgdG8gZGF0ZS4gU28ga2VlcCBzZWFyY2hpbmcgZm9yIHRyZW5kcywgdXBkYXRlIHByb2R1Y3QgZGlzcGxheXMgYW5kIGZyZXNoZW4gdXAgeW91ciBsYXlvdXQuXG5cbkFyaWFkbmUgY2FuIGhlbHAgeW91IHRvIGRlc2lnbiBvciByZS1kZXNpZ24geW91ciBzdG9yZSBieSBhbmFseXppbmcgdGhlIGRhdGEgb2YgcGVvcGxlIHZpc2l0aW5nIHlvdXIgc3RvcmVzIGluIFJlYWx0aW1lIHdpdGhvdXQgdmlvbGF0aW5nIHRoZSBHRFBSLiBUbyBsZWFybiBtb3JlIGFib3V0IHRoaXMgY2xpY2sgaGVyZSB0byBjb250YWN0IHVzIGFuZCBnZXQgb25lIG1vbnRoJ3MgZGVtbyBzdWJzY3JpcHRpb24gZm9yIGZyZWUuXG5cbkRvIHlvdSB3YW50IHRvIHRyYWNrIGFuZCBhbmFseXplIHlvdXIgYXVkaWVuY2VzIGFjY3VyYXRlbHkgaW4gcmVhbC10aW1lIHdpdGhvdXQgdmlvbGF0aW5nIEdEUFI/IENsaWNrIGhlcmUgdG8gYm9vayBhIG1lZXRpbmcgd2l0aCBvbmUgb2Ygb3VyIGV4cGVydHMgYW5kIGdldCBhIG9uZS1tb250aCBmcmVlIHN1YnNjcmlwdGlvbi4iLCJleGNlcnB0IjoiSW4gdGhpcyBkaWdpdGFsIGVyYSBvZiByZXRhaWwgc3RvcmVzIGFuZCBFLUNvbW1lcmNlLCBzdGlsbCwgNzMuNCUgb2YgdGhlIGN1c3RvbWVycyBwcmVmZXIgdG8gc2hvcCBpbiBwaHlzaWNhbCByZXRhaWwgc3RvcmVzLiBIZW5jZSwgSXQgaXMgY3J1Y2lhbCB0byBkZXNpZ24geW91ciByZXRhaWwgc3RvcmUgaW4gdGhlIHJpZ2h0IHdheSB0byBvcHRpbWl6ZSB5b3VyIHNwYWNlLCBpbmNyZWFzZSBjdXN0b21lci1wcm9kdWN0IGludGVyYWN0aW9uIGFuZCBtYXhpbWl6ZSB5b3VyIHNhbGVzLiBJbiB0aGlzIGFydGljbGUsIHdl4oCZbGwgdHJ5IHRvIGV4cGxvcmUgdGhlIHdheXMgYW5kIHRvb2xzIHRocm91Z2ggd2hpY2ggeW91IGNhbiBpbXBsZW1lbnQgdG8gcGxhbiB0aGUgYXJyYW5nZW1lbnQgb2YgeW91ciBzdG9yZS5cblxuIiwiY3JlYXRlZEF0IjoiMjAyMy0wNS0zMFQwNjozNzoxOS41ODVaIiwidXBkYXRlZEF0IjoiMjAyMy0wNi0zMFQwODowODoyNi40NzlaIiwicHVibGlzaGVkQXQiOiIyMDIzLTA1LTMwVDA2OjM3OjIxLjE2MloiLCJpbWFnZSI6eyJkYXRhIjp7ImlkIjoyMSwiYXR0cmlidXRlcyI6eyJuYW1lIjoicmVkZXNpZ255b3Vyc3RvcmUuanBnIiwiYWx0ZXJuYXRpdmVUZXh0IjpudWxsLCJjYXB0aW9uIjpudWxsLCJ3aWR0aCI6NjAwLCJoZWlnaHQiOjQwMCwiZm9ybWF0cyI6eyJzbWFsbCI6eyJleHQiOiIuanBnIiwidXJsIjoiL3VwbG9hZHMvc21hbGxfcmVkZXNpZ255b3Vyc3RvcmVfYWQxMjE3YWI2Ny5qcGciLCJoYXNoIjoic21hbGxfcmVkZXNpZ255b3Vyc3RvcmVfYWQxMjE3YWI2NyIsIm1pbWUiOiJpbWFnZS9qcGVnIiwibmFtZSI6InNtYWxsX3JlZGVzaWdueW91cnN0b3JlLmpwZyIsInBhdGgiOm51bGwsInNpemUiOjQwLjczLCJ3aWR0aCI6NTAwLCJoZWlnaHQiOjMzM30sInRodW1ibmFpbCI6eyJleHQiOiIuanBnIiwidXJsIjoiL3VwbG9hZHMvdGh1bWJuYWlsX3JlZGVzaWdueW91cnN0b3JlX2FkMTIxN2FiNjcuanBnIiwiaGFzaCI6InRodW1ibmFpbF9yZWRlc2lnbnlvdXJzdG9yZV9hZDEyMTdhYjY3IiwibWltZSI6ImltYWdlL2pwZWciLCJuYW1lIjoidGh1bWJuYWlsX3JlZGVzaWdueW91cnN0b3JlLmpwZyIsInBhdGgiOm51bGwsInNpemUiOjExLjI5LCJ3aWR0aCI6MjM0LCJoZWlnaHQiOjE1Nn19LCJoYXNoIjoicmVkZXNpZ255b3Vyc3RvcmVfYWQxMjE3YWI2NyIsImV4dCI6Ii5qcGciLCJtaW1lIjoiaW1hZ2UvanBlZyIsInNpemUiOjQ4LjI3LCJ1cmwiOiIvdXBsb2Fkcy9yZWRlc2lnbnlvdXJzdG9yZV9hZDEyMTdhYjY3LmpwZyIsInByZXZpZXdVcmwiOm51bGwsInByb3ZpZGVyIjoibG9jYWwiLCJwcm92aWRlcl9tZXRhZGF0YSI6bnVsbCwiY3JlYXRlZEF0IjoiMjAyMy0wNS0zMFQwNjozNDoyMC4yMjhaIiwidXBkYXRlZEF0IjoiMjAyMy0wNi0wNVQxMjo0OToxMy44NzVaIn19fSwiYXV0aG9yIjp7ImRhdGEiOnsiaWQiOjIsImF0dHJpYnV0ZXMiOnsiZmlyc3RuYW1lIjoiR292YXJ0aGFuIiwibGFzdG5hbWUiOiJOYXRhcmFqYW4iLCJ1c2VybmFtZSI6bnVsbCwicHJlZmVyZWRMYW5ndWFnZSI6bnVsbCwiY3JlYXRlZEF0IjoiMjAyMy0wNS0xNlQwODozNDo0OC4xMzZaIiwidXBkYXRlZEF0IjoiMjAyMy0wNS0xNlQwOTowODoyNS4xNDlaIn19fX19LHsiaWQiOjUsImF0dHJpYnV0ZXMiOnsidGl0bGUiOiJIb3cgQ2FuIFBoeXNpY2FsIFN0b3JlcyBXaW4gQmFjayBvbiBUaGUgQ29tcGV0aXRpb24/Iiwic2x1ZyI6ImN1c3RvbWVyLWpvdXJuZXktaW4td2lubmVyLXN0b3JlIiwiY29udGVudCI6IiMgSG93IENhbiBQaHlzaWNhbCBTdG9yZXMgV2luIEJhY2sgb24gVGhlIENvbXBldGl0aW9uP1xuRS1jb21tZXJjZSBoYXMgY2hhbGxlbmdlZCB0aGUgd2F5IHBoeXNpY2FsIHJldGFpbGVycyBoYXZlIGJlZW4gb3BlcmF0aW5nIHRodXMgZmFyLiBCZXR0ZXIgY29tcHJlaGVuc2lvbiBvZiB0aGUgY3VzdG9tZXIsIHRhcmdldGVkIHNlcnZpY2UgYW5kIHRlY2hub2xvZ3kgaGFzIGVuYWJsZWQgb25saW5lIHN0b3JlcyB0byBnYWluIGEgY29tcGV0aXRpdmUgZWRnZSBhZ2FpbnN0IGJyaWNrLWFuZC1tb3J0YXIgc3RvcmVzLiBOb3cgdGhlIHF1ZXN0aW9uIGlz4oCmIGhvdyBjYW4gdGhlIHBoeXNpY2FsIHN0b3JlcyB3aW4gYmFjayB0aGVpciBlZGdlIG9uIHRoaXMgY29tcGV0aXRpb24/XG5cbkluIHRoaXMgYXJ0aWNsZSwgSSBoYXZlIGdvbmUgdGhyb3VnaCB0aGUgcmV0YWlsIChsb2NhbGl6YXRpb24pIHRlY2hub2xvZ2llcyBvZiB0b2RheSwgYW5kIG91dGxpbmVkIGhvdyB0aGUgU3RhdGUtT2YtVGhlLUFydCAoU09UQSkgc3RvcmUgb2YgMjAyMiBjYW4gb3BlcmF0ZSBpbiBhIHNpbXBsZSBzY2VuYXJpby5cblxuIyMgSG93IGRvZXMgZS1jb21tZXJjZSBjb21wYXJlIHRvIGJyaWNrLWFuZC1tb3J0YXI/XG5Ccmljay1hbmQtbW9ydGFyIGFuZCBFLWNvbW1lcmNlIGhhdmUgYmVlbiBmaWdodGluZyBmb3IgY29uc3VtZXJzJyBhdHRlbnRpb24gYW5kIGRvbGxhcnMgZm9yIG1hbnkgeWVhcnMuIE9uZSBtaWdodCB0aGluayB0aGF0IGUtY29tbWVyY2UgaXMgYWxyZWFkeSB0aGUgbGVhZGVyIG9mIHJldGFpbCBzYWxlcywgYnV0IHRoaXMgaXMgd2F5IGZhciBmcm9tIHRoZSB0cnV0aCwgd2l0aCBicmljay1hbmQtbW9ydGFyIHNhbGVzIGFjY291bnRpbmcgZm9yIDk0JSBvZiB0aGUgdG90YWwgcmV0YWlsIHNhbGVzLlxuXG5Ib3dldmVyLCBpdCdzIHVuZmFpciB0byBjb21wYXJlIG9ubGluZSBzYWxlcyB3aXRoIGJyaWNrLWFuZC1tb3J0YXIgc2FsZXMgZHVlIHRvIHRoZSBhZ2UgZmFjdG9yLiBFLWNvbW1lcmNlIGlzIHN0aWxsIGEgcmVsYXRpdmVseSBuZXcgYnVzaW5lc3MsIGFuZCB3aXRoIHRoZSByYXRlIG9mIGdyb3d0aCBpdCBoYXMgZGVtb25zdHJhdGVkIGluIHJlY2VudCB5ZWFycywgdGhpcyBzdGF0aXN0aWMgbWF5IHNvb24gY2hhbmdlLlxuXG4jIyBXaGF0IGdpdmVzIGFuIGVkZ2UgdG8gZS1jb21tZXJjZT9cbldlIGNhbm5vdCBpZ25vcmUgdmFyaW91cyBhZHZhbnRhZ2VzIHRoYXQgZS1jb21tZXJjZSBoYXMgYnJvdWdodCB0aGF0IGhhdmVuJ3QgYmVlbiBwb3NzaWJsZSBiZWZvcmUuIEp1c3Qgb25lIGNsaWNrLCBhbmQgeW91ciBvcmRlciBpcyBhdCB5b3VyIGRvb3IgdGhlIG5leHQgZGF5IChpZiBub3QgdGhlIHNhbWUgZGF5KS4gVGhpcyBpcyBpbmRlZWQgdGhlIG51bWJlciBvbmUgcmVhc29uIHdoeSBwZW9wbGUgcHJlZmVyIHNob3BwaW5nIG9ubGluZSAtIChmcmVlKSBkZWxpdmVyeS5cblxuT3RoZXIga2V5IHJlYXNvbnMgaW5jbHVkZSB0aGUgYWJpbGl0eSB0byB1c2UgY291cG9ucyBhbmQgYXBwbHkgZGlzY291bnRzICg0MSBwZXJjZW50KSwgcmVhZCBvdGhlciBjdXN0b21lcnMnIHJldmlld3MgKDM1IHBlcmNlbnQpLCBlYXNpbHkgcmV0dXJuIHB1cmNoYXNlZCBpdGVtcyAoMzMgcGVyY2VudCksIGFuZCBhIHF1aWNrIGNoZWNrb3V0IHByb2Nlc3MgKDMwIHBlcmNlbnQpIChHbG9iYWx3ZWJpbmRleC5jb20pLlxuXG4hW3RvcHJlYXNvbnNwZW9wbGVzaG9wb25saW5lLmpwZ10oL3VwbG9hZHMvdG9wcmVhc29uc3Blb3BsZXNob3BvbmxpbmVfYjQ0NjBkYjM4OS5qcGcpXG5cbkluIEFyaWFkbmUncyBwcm9qZWN0IHdpdGggQ2l0eSBvZiBUcmF1bnN0ZWluLCBJIGhhdmUgb2JzZXJ2ZWQgdGhhdCB0aGVyZSBpcyBhIHNpZ25pZmljYW50IDQyJSBkZWNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIHBlb3BsZSBkdXJpbmcgdGhlIGV2ZW50IGhvdXJzLiBUaGUgcmVhc29uPyBJdCBpcyB0aGUgcmFpbnkgd2VhdGhlci4gSXQgbWVhbnMgdGhhdCBpZiBhIGRpZmZlcmVudCBkYXkgaGFzIGJlZW4gY2hvc2VuIGZvciB0aGUgZXZlbnQsIGl0IHdvdWxkIGF0dHJhY3QgbW9yZSBwZW9wbGUsIHdoaWNoIHdvdWxkIGVuZCB1cCBhcyBtb3JlIGZvb3RmYWxsIGZvciB0aGUgbmVhcmJ5IHN0b3JlcyBhbmQgYnVzaW5lc3Nlcy5cblxuQW5vdGhlciBpbnRlcmVzdGluZyBmaW5kaW5nIGZyb20gdGhlIHNhbWUgcHJvamVjdCB3YXMgdGhlIGVmZmVjdCBvZiB0aGUgZnJlcXVlbmN5IG9mIHRoZSBldmVudHMuIFRoaXMgbWlnaHQgc291bmQgY29uZnVzaW5nLCBzbyBsZXQgbWUgZXhwbGFpbiB3aXRoIGFuIGV4YW1wbGU6XG5cbiFbZXZlbnQtZWZmZWN0LnBuZ10oL3VwbG9hZHMvZXZlbnRfZWZmZWN0XzJlOGIxN2Q4NGUucG5nKVxuXG5UaGVyZSBhcmUgdHdvIHNpZGVzIHRvIHRoZSBzdWNjZXNzIG9mIGUtY29tbWVyY2UuIE9uZSBzaWRlIGlzIHRoZSBhZHZhbnRhZ2VzIGFib3ZlLCB0aGF0IGNvbWVzIHdpdGggdGhlIG5hdHVyZSBvZiBvbmxpbmUgc2FsZXMuIE90aGVyIHNpZGUgaXMgdGhlIGFiaWxpdHkgdG8gdHJhY2sgdmlzaXRvcnMnIGJlaGF2aW91cnMgYW5kIHVuZGVyc3RhbmQgdGhlIGN1c3RvbWVycy4gRm9yIGluc3RhbmNlLCBob3cgbWFueSBwZW9wbGUgbGFuZCBvbiB0aGUgcHJvZHVjdCB3ZWJwYWdlLCBob3cgbXVjaCB0aW1lIHRoZXkgc3BlbmQsIHdoYXQgYWN0aW9ucy9jbGlja3MgdGhleSBwcmV2aW91c2x5IGFuZCBzdWJzZXF1ZW50bHkgdGFrZSBhbmQgc28gb27igKYgSGF2aW5nIHRoaXMgZGF0YSwgb25saW5lIGJ1c2luZXNzZXMgYXJlIGFibGUgdG8gY2hhbmdlIHRoZWlyIGxheW91dCwgb3B0aW1pemUgdGhlaXIgb25saW5lIG1hcmtldHBsYWNlcyBhbmQgYmV0dGVyIHNlcnZlIGN1c3RvbWVycycgbmVlZHMsIHdoaWNoIGxlYWRzIHRvIGdhaW5pbmcgbW9yZSB3ZWJzaXRlIHRyYWZmaWMgYW5kIHNhbGVzXG5cbiFbZ2FuYWx5dGljcy5qcGddKC91cGxvYWRzL2dhbmFseXRpY3NfMDNiNmNiMjU3YS5qcGcpXG5cbklmIHRoZSBicmljay1hbmQtbW9ydGFyIGJ1c2luZXNzZXMgYnJpbmcgdGhlc2UgYWR2YW50YWdlcyBvZiBlLWNvbW1lcmNlIGludG8gdGhlaXIgc3RvcmVzLCBvciBsZXQncyBzYXksIGNvbWJpbmUgdGhlbSB3aXRoIHRoZWlyIGV4aXN0aW5nIHNlcnZpY2VzLCBjYW4gdGhleSBoZWF0IHVwIHRoZSBjb21wZXRpdGlvbj8gT3IgZmlyc3TigKYgY2FuIHRoZXkgYWN0dWFsbHkgYnJpbmcgdGhlc2UgdG8gdGhlIHN0b3Jlcz9cblxuTGV0J3MgY29uc2lkZXIgYSBzY2VuYXJpby5cblxuIyMgQ3VzdG9tZXIgam91cm5leSBpbiBhIHdpbm5lciBzdG9yZVxuQSBiZWF1dGlmdWwgU2F0dXJkYXkgbW9ybmluZywgYWZ0ZXIgYSBmYW1pbHkgYnJ1bmNoLCB5b3UgZGVjaWRlIHRvIGdvIHRvIGEgZnVybml0dXJlIHN0b3JlIHRvIGJ1eSBhIFRWIHVuaXQgZm9yIHlvdXIgbGl2aW5nIHJvb20uIFlvdSB0YWtlIHlvdXIgcGhvbmUgYW5kIGNoZWNrIHRoZSBzdG9yZSwgYW5kIHNlZSB0aGF0IHRoZXJlIGFyZSAxODQgcGVvcGxlIGN1cnJlbnRseSBpbnNpZGUgKDEpLiBIbW3igKYgbm90IGJhZCB5b3UgdGhpbmssIHdlIGNhbiBoYXZlIGEgbmljZSB0aW1lIHRoZXJlLCBhbmQgaG9wZWZ1bGx5IGhhdmUgbm8gcXVldWUgYXQgdGhlIGNoZWNrb3V0LlxuXG5Zb3UgYXJyaXZlIGF0IHRoZSBzdG9yZSwgc2VlIHRoZSBlbXB0eSBwYXJraW5nIHNsb3RzIGluIHlvdXIgcGhvbmUgKDIpIGFuZCBuYXZpZ2F0ZSB0byB0aGUgY2xvc2VzdCBhdmFpbGFibGUgc2xvdCAoMykuXG5cbkFzIHVzdWFsLCB5b3UgbGVhdmUgeW91ciBjYXIgYW5kIGhlYWQgdG8gdGhlIGdhdGUsIGFuZCB0aGUgaGVhdCBvZiB0aGUgc3RvcmUgd2VsY29tZXMgeW91IGluc2lkZS4gTm90IGp1c3QgdGhlIGhlYXQsIGJ1dCBhIG5vdGlmaWNhdGlvbiBvbiB5b3VyIHBob25lOiDigJxUaGFuayB5b3UgZm9yIHlvdXIgdmlzaXQsIGVuam95IG91ciAxNSUgZGlzY291bnQgZ2lmdCBpbiBvdXIgcmVzdGF1cmFudOKAnSAoNCkuIFlvdSBwYXNzIHRocm91Z2ggdGhlIG1hdHRyZXNzZXMsIHRoZW4gc29mYXMgYmVmb3JlIHRoZSBUViB1bml0cy4gQSBzb2ZhIGRyYXdzIHlvdXIgYXR0ZW50aW9uIGFuZCB5b3Ugc3RhcnQgbG9va2luZyBpbnRvIGl0LiBJdCBsb29rcyBncmVhdCBidXQgeW91IGFyZSBub3Qgc3VyZSBhYm91dCBzb21lIGFzcGVjdHMsIHNvIHlvdSB0YWtlIG91dCB5b3VyIHBob25lIGFuZCBzZWUgeW91ciBsb2NhdGlvbiBpbiB0aGUgc3RvcmUgKDUpLiBOZXh0IHRvIHlvdXIgbG9jYXRpb24sIHlvdSBhbHNvIHNlZSB0aGUgc29mYSBpY29uIGFuZCBjbGljayBpdCBvbiB0aGUgbWFwLCA0Ljggc3RhcnMsIDU2IHJldmlld3MgKDYp4oCmIGhtbSwgbm90IGJhZC4gWW91IHNjcm9sbCBkb3duIGFuZCByZWFkIHNvbWUgcmV2aWV3cyBhYm91dCBwZW9wbGUncyBleHBlcmllbmNlcywgbm93IHlvdSB3YW50IHRvIGJ1eSB0aGUgc29mYSBidXQgbmVlZCBhbnN3ZXJzIHRvIGEgZmV3IHF1ZXN0aW9ucyBiZWZvcmUgZmluYWxseSBkZWNpZGluZy4gUmlnaHQgd2hlbiB5b3UgbmVlZCBzb21lIGFzc2lzdGFuY2UsIGEgc3RvcmUgYXNzb2NpYXRlIGFwcHJvYWNoZXMgeW91ICg3KSB3aXRoIGEgc21pbGluZyBmYWNlIGFuZCBnb2VzIOKAnEhpLCB3b3VsZCB5b3UgbGlrZSBhbnkgaGVscD/igJ0uIFlvdSBkaXJlY3QgeW91ciBxdWVzdGlvbnMgYW5kIGFyZSBwbGVhc2VkIHdpdGggdGhlIGFuc3dlcnMsIGJ1dCBsb29raW5nIGF0IHRoZSBwcmljZSBhZ2FpbiwgeW91IGRlY2lkZSB0byBwb3N0cG9uZSB5b3VyIHB1cmNoYXNlLiIsImV4Y2VycHQiOiJFLWNvbW1lcmNlIGhhcyBjaGFsbGVuZ2VkIHRoZSB3YXkgcGh5c2ljYWwgcmV0YWlsZXJzIGhhdmUgYmVlbiBvcGVyYXRpbmcgdGh1cyBmYXIuIEJldHRlciBjb21wcmVoZW5zaW9uIG9mIHRoZSBjdXN0b21lciwgdGFyZ2V0ZWQgc2VydmljZSBhbmQgdGVjaG5vbG9neSBoYXMgZW5hYmxlZCBvbmxpbmUgc3RvcmVzIHRvIGdhaW4gYSBjb21wZXRpdGl2ZSBlZGdlIGFnYWluc3QgYnJpY2stYW5kLW1vcnRhciBzdG9yZXMuIE5vdyB0aGUgcXVlc3Rpb24gaXPigKYgaG93IGNhbiB0aGUgcGh5c2ljYWwgc3RvcmVzIHdpbiBiYWNrIHRoZWlyIGVkZ2Ugb24gdGhpcyBjb21wZXRpdGlvbj8gVGhpcyBhcnRpY2xlIG91dGxpbmVzIGhvdyB0aGUgU3RhdGUtT2YtVGhlLUFydCAoU09UQSkgc3RvcmUgb2YgMjAyMiBjYW4gb3BlcmF0ZSIsImNyZWF0ZWRBdCI6IjIwMjMtMDUtMjlUMjE6NDg6NDAuMzExWiIsInVwZGF0ZWRBdCI6IjIwMjMtMDUtMzBUMTM6Mzg6MTguNjA2WiIsInB1Ymxpc2hlZEF0IjoiMjAyMy0wNS0yOVQyMTo0ODo0Mi4xNzlaIiwiaW1hZ2UiOnsiZGF0YSI6eyJpZCI6MTYsImF0dHJpYnV0ZXMiOnsibmFtZSI6InN0b3JlLmpwZyIsImFsdGVybmF0aXZlVGV4dCI6bnVsbCwiY2FwdGlvbiI6bnVsbCwid2lkdGgiOjExNzEsImhlaWdodCI6NzgxLCJmb3JtYXRzIjp7ImxhcmdlIjp7ImV4dCI6Ii5qcGciLCJ1cmwiOiIvdXBsb2Fkcy9sYXJnZV9zdG9yZV83ZmUyYTg2Yzk2LmpwZyIsImhhc2giOiJsYXJnZV9zdG9yZV83ZmUyYTg2Yzk2IiwibWltZSI6ImltYWdlL2pwZWciLCJuYW1lIjoibGFyZ2Vfc3RvcmUuanBnIiwicGF0aCI6bnVsbCwic2l6ZSI6MTM5LjQzLCJ3aWR0aCI6MTAwMCwiaGVpZ2h0Ijo2Njd9LCJzbWFsbCI6eyJleHQiOiIuanBnIiwidXJsIjoiL3VwbG9hZHMvc21hbGxfc3RvcmVfN2ZlMmE4NmM5Ni5qcGciLCJoYXNoIjoic21hbGxfc3RvcmVfN2ZlMmE4NmM5NiIsIm1pbWUiOiJpbWFnZS9qcGVnIiwibmFtZSI6InNtYWxsX3N0b3JlLmpwZyIsInBhdGgiOm51bGwsInNpemUiOjQ4LjQyLCJ3aWR0aCI6NTAwLCJoZWlnaHQiOjMzM30sIm1lZGl1bSI6eyJleHQiOiIuanBnIiwidXJsIjoiL3VwbG9hZHMvbWVkaXVtX3N0b3JlXzdmZTJhODZjOTYuanBnIiwiaGFzaCI6Im1lZGl1bV9zdG9yZV83ZmUyYTg2Yzk2IiwibWltZSI6ImltYWdlL2pwZWciLCJuYW1lIjoibWVkaXVtX3N0b3JlLmpwZyIsInBhdGgiOm51bGwsInNpemUiOjkwLjY0LCJ3aWR0aCI6NzUwLCJoZWlnaHQiOjUwMH0sInRodW1ibmFpbCI6eyJleHQiOiIuanBnIiwidXJsIjoiL3VwbG9hZHMvdGh1bWJuYWlsX3N0b3JlXzdmZTJhODZjOTYuanBnIiwiaGFzaCI6InRodW1ibmFpbF9zdG9yZV83ZmUyYTg2Yzk2IiwibWltZSI6ImltYWdlL2pwZWciLCJuYW1lIjoidGh1bWJuYWlsX3N0b3JlLmpwZyIsInBhdGgiOm51bGwsInNpemUiOjEzLjcxLCJ3aWR0aCI6MjM0LCJoZWlnaHQiOjE1Nn19LCJoYXNoIjoic3RvcmVfN2ZlMmE4NmM5NiIsImV4dCI6Ii5qcGciLCJtaW1lIjoiaW1hZ2UvanBlZyIsInNpemUiOjE3OC4yLCJ1cmwiOiIvdXBsb2Fkcy9zdG9yZV83ZmUyYTg2Yzk2LmpwZyIsInByZXZpZXdVcmwiOm51bGwsInByb3ZpZGVyIjoibG9jYWwiLCJwcm92aWRlcl9tZXRhZGF0YSI6bnVsbCwiY3JlYXRlZEF0IjoiMjAyMy0wNS0yOVQyMTo0MDoyMy42NTFaIiwidXBkYXRlZEF0IjoiMjAyMy0wNS0yOVQyMTo0MDoyMy42NTFaIn19fSwiYXV0aG9yIjp7ImRhdGEiOnsiaWQiOjIsImF0dHJpYnV0ZXMiOnsiZmlyc3RuYW1lIjoiR292YXJ0aGFuIiwibGFzdG5hbWUiOiJOYXRhcmFqYW4iLCJ1c2VybmFtZSI6bnVsbCwicHJlZmVyZWRMYW5ndWFnZSI6bnVsbCwiY3JlYXRlZEF0IjoiMjAyMy0wNS0xNlQwODozNDo0OC4xMzZaIiwidXBkYXRlZEF0IjoiMjAyMy0wNS0xNlQwOTowODoyNS4xNDlaIn19fX19LHsiaWQiOjQsImF0dHJpYnV0ZXMiOnsidGl0bGUiOiJIb3cgdG8gR2V0IHRoZSBNb3N0IE91dCBvZiBQZW9wbGUgQ291bnRpbmciLCJzbHVnIjoicGVvcGxlLWNvdW50aW5nIiwiY29udGVudCI6IiFbZXhoaWJpdGlvbi5qcGddKC91cGxvYWRzL2V4aGliaXRpb25fMzM5YWIxOGQxNi5qcGcpXG4jIEhvdyB0byBHZXQgdGhlIE1vc3QgT3V0IG9mIFBlb3BsZSBDb3VudGluZ1xuUGVvcGxlIENvdW50aW5nIGlzIGEgdGVjaG5vbG9neSB0aGF0IGdpdmVzIHBoeXNpY2FsIGJ1c2luZXNzZXMgdGhlIGFiaWxpdHkgdG8gdHJhY2sgdGhlaXIgdmlzaXRvcnMgaW4gcmVhbC10aW1lLiBJdCBjYW4gYmUgdXNlZCBieSByZXRhaWxlcnMsIGFpcnBvcnRzLCBtYWxscywgY2l0aWVz4oCmIHRvIHVuZGVyc3RhbmQgaG93IG1hbnkgcGVvcGxlIHdhbGsgcGFzdCB0aGVpciBwcmVtaXNlcywgaG93IGxvbmcgdGhleSBzdGF5IHRoZXJlIG9uIGF2ZXJhZ2UsIHdoZXJlIHRoZXkgY29tZSBmcm9tIGFuZCBtYW55IG1vcmUgY2FzZXMuXG5cbkV2ZW4gdGhvdWdoIG1hbnkgYnVzaW5lc3NlcyBhcmUgYWxyZWFkeSBmYW1pbGlhciB3aXRoIHBlb3BsZSBjb3VudGVycyBhbmQgaGF2ZSBhIHBlb3BsZSBjb3VudGVyIHN5c3RlbSwgdGhleSBtaWdodCBub3QgYmUgYXdhcmUgb2YgdGhlIGZ1bGwgcG90ZW50aWFsIGl0IGJyaW5ncyBhbG9uZy5cblxuSW4gdGhpcyBhcnRpY2xlLCB3ZSB3aWxsIGRpc2NvdmVyIGhvdyB0byBtYWtlIHRoZSBiZXN0IG91dCBvZiBwZW9wbGUgY291bnRpbmcgc29sdXRpb25zIGFuZCBtYXhpbWl6ZSBpdHMgYmVuZWZpdHMuXG5cbiMgV2hhdCBhcmUgZGlmZmVyZW50IHR5cGVzIG9mIFBlb3BsZSBDb3VudGVycz9cblRoZXJlIGFyZSBzZXZlcmFsIGRpZmZlcmVudCB0eXBlcyBvZiBsb2NhbGl6YXRpb24gYW5kIHBlb3BsZSBjb3VudGVyIHNvbHV0aW9ucy4gRWFjaCBoYXMgaXRzIG93biBiZW5lZml0cyBhbmQgZHJhd2JhY2tzLCBidXQgdGhleSBhbGwgaGF2ZSBvbmUgdGhpbmcgaW4gY29tbW9uOiB0aGV5IGNvdW50IHRoZSBudW1iZXIgb2YgcGVvcGxlIGFyb3VuZCB0aGVtLCB3aGV0aGVyIGl0IGJlIG1hbnVhbGx5IG9yIGF1dG9tYXRpY2FsbHkuIFRoZSBub24tZXhoYXVzdGl2ZSBsaXN0IGlzIGFzIGZvbGxvd3M6XG5cbuKclO+4jyBCbHVldG9vdGggTG93IEVuZXJneSAoQkxFKSBCZWFjb25zXG7inJTvuI8gVWx0cmEtV2lkZWJhbmQgKFVXQilcbuKclO+4jyBNYWduZXRpYyBGaWVsZCBCYXNlZCBTb2x1dGlvbnNcbuKclO+4jyBXaS1GaSBCYXNlZCBTb2x1dGlvbnNcbuKclO+4jyBDb21wdXRlciBWaXNpb24gQmFzZWQgU29sdXRpb25zXG7inJTvuI8gSU1VLUJhc2VkIFNvbHV0aW9uc1xuRGV0YWlsZWQgZXhwbGFuYXRpb24gb2YgdGhlc2UgdGVjaG5vbG9naWVzLCBiZW5lZml0cyBhbmQgZHJhd2JhY2tzIGFyZSBhbHJlYWR5IGV4cGxhaW5lZCBbaGVyZV0oaHR0cHM6Ly9hcmlhZG5lLmluYy9pbmRvb3ItY2hhbGxlbmdlcykuXG5cbiMgSG93IHRvIE1heGltaXplIFRoZSBCZW5lZml0cyBvZiBQZW9wbGUgQ291bnRpbmdcbkkgaGF2ZSBnb25lIHRocm91Z2ggYSB2YXJpZXR5IG9mIHByb2plY3RzIGZyb20gQXJpYWRuZSB0byBmaWd1cmUgb3V0IHdoYXQgY2FuIGJlIGFjdHVhbGx5IGRvbmUgd2l0aCB0aGUgdmlzaXRvciBjb3VudGluZywgYW5kIG1hZGUgYSBsaXN0IGFzIGZvbGxvd3M6XG4jIyAxKSBIb3cgdG8gTWVhc3VyZSAmIENvbXBhcmUgVGhlIFN1Y2Nlc3Mgb2YgRXZlbnRzL0NhbXBhaWduc1xuVGhlcmUgYXJlIG1hbnkgcXVlc3Rpb25zIHdoZW4gaXQgY29tZXMgdG8gZXZlbnQgYW5kIGNhbXBhaWduIHBsYW5uaW5n4oCmIGhvdyB0byBvcmRlciBkaWZmZXJlbnQgZXZlbnRzLCBob3cgb2Z0ZW4gdG8gaGF2ZSBhbiBldmVudCwgd2hpY2ggZGF5cyB0byBjaG9vc2UsIHN0YXJ0IGFuZCBlbmQgaG91cnPigKZcblxuIVtyYWluLWVmZmVjdC5wbmddKC91cGxvYWRzL3JhaW5fZWZmZWN0Xzk5NTBmODBmYTIucG5nKVxuXG5JbiBBcmlhZG5l4oCZcyBwcm9qZWN0IHdpdGggQ2l0eSBvZiBUcmF1bnN0ZWluLCBJIGhhdmUgb2JzZXJ2ZWQgdGhhdCB0aGVyZSBpcyBhIHNpZ25pZmljYW50IDQyJSBkZWNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIHBlb3BsZSBkdXJpbmcgdGhlIGV2ZW50IGhvdXJzLiBUaGUgcmVhc29uPyBJdCBpcyB0aGUgcmFpbnkgd2VhdGhlci4gSXQgbWVhbnMgdGhhdCBpZiBhIGRpZmZlcmVudCBkYXkgaGFzIGJlZW4gY2hvc2VuIGZvciB0aGUgZXZlbnQsIGl0IHdvdWxkIGF0dHJhY3QgbW9yZSBwZW9wbGUsIHdoaWNoIHdvdWxkIGVuZCB1cCBhcyBtb3JlIGZvb3RmYWxsIGZvciB0aGUgbmVhcmJ5IHN0b3JlcyBhbmQgYnVzaW5lc3Nlcy5cblxuQW5vdGhlciBpbnRlcmVzdGluZyBmaW5kaW5nIGZyb20gdGhlIHNhbWUgcHJvamVjdCB3YXMgdGhlIGVmZmVjdCBvZiB0aGUgZnJlcXVlbmN5IG9mIHRoZSBldmVudHMuIFRoaXMgbWlnaHQgc291bmQgY29uZnVzaW5nLCBzbyBsZXQgbWUgZXhwbGFpbiB3aXRoIGFuIGV4YW1wbGU6XG5cbiFbZXZlbnQtZWZmZWN0LnBuZ10oL3VwbG9hZHMvZXZlbnRfZWZmZWN0X2FkMjZlZDNlMzAucG5nKVxuXG5IZXJlIGFyZSAyIGRpZmZlcmVudCBldmVudHMsIDFzdCBldmVudCBpcyBjYWxsZWQgS3VsdHNvbW1lciBGZXN0LiBUaGlzIGV2ZW50IG9jY3VycyAyIHRpbWVzIGluIDMgd2Vla3MsIGluIHRoZSAxc3Qgd2VlayBhbmQgdGhlIDNyZCB3ZWVrLiBPbiB0aGUgZmlndXJlIGFib3ZlLCBpdCBpcyBzZWVuIHRoYXQgZmlyc3QgdGltZSB3aGVuIGl0IGFwcGVhcmVkLCBpdCBicm91Z2h0IDI2JSBtb3JlIHBlb3BsZSB0aGFuIGF2ZXJhZ2UsIHdoaWNoIGlzIGEgcmVtYXJrYWJsZS4gSG93ZXZlciwgbmV4dCB0aW1lIGl0IG9jY3VycmVkLCBpbiB0aGUgM3JkIHdlZWssIGl0IGRpZCBub3QgYnJpbmcgbW9yZSBmb290ZmFsbCwgaW5zdGVhZCB0aGVyZSBpcyBhIDQlIGRlY3JlYXNlIGNvbXBhcmVkIHRvIHRoZSBhdmVyYWdlLlxuXG5UaGlzIGNoYW5nZSBtaWdodCBvZiBjb3Vyc2UgYmUgZHVlIHRvIHRoZSBldmVudCBpbiBiZXR3ZWVuLCBXZWluZmVzdC4gV2VpbmZlc3QgYXR0cmFjdGVkIDMzJSBtb3JlIHBlb3BsZSB0aGFuIGFuIGF2ZXJhZ2UgZGF5LiBUaGUgcmVhc29uIG9mIHRoZSBkZWNyZWFzZSBvbiB0aGUgM3JkIHdlZWsgY2FuIGFsc28gc3RlbSBmcm9tIHRoZSBmcmVxdWVuY3kgb3IgdGhlIHR5cGUgb2YgdGhlIGV2ZW50cy5cblxuIVtldmVudGZyZXF1ZW5jeS1lZmZlY3QucG5nXSgvdXBsb2Fkcy9ldmVudGZyZXF1ZW5jeV9lZmZlY3RfY2YxN2RiYTQ1Mi5wbmcpXG5cblRvIGVsYWJvcmF0ZSBvbiB0aGUgZXhhbXBsZSBhYm92ZSwgaGVyZSBpcyBhbm90aGVyIGV4YW1wbGUuIFRoZSBLdWx0c29tbWVyIEZlc3QgaGFwcGVucyBvdmVyIDMgZGF5cyBkdXJpbmcgdGhlIHdlZWs6IFR1ZXNkYXksIFdlZG5lc2RheSBhbmQgVGh1cnNkYXkuIFdoZW4gSSB0YWtlIHRoZSBhdmVyYWdlcyBvZiB0aGVzZSAzIGRheXMgdGhyb3VnaG91dCB0aGUgbW9udGgsIEkgc2VlIHRoYXQgdGhlcmUgaXMgYSByZW1hcmthYmxlIDEyMSUgaW5jcmVhc2Ugd2hlbiB0aGUgZXZlbnQgaGFwcGVucyAybmQgdGltZSBpbiB0aGUgc2FtZSB3ZWVrLCBob3dldmVyIHdoZW4gdGhlIDNyZCB0aW1lIGl0IGhhcHBlbnMsIHBlb3BsZSBsb3NlIGludGVyZXN0IGFuZCBhIDEwJSBkZWNyZWFzZSBpcyBvYnNlcnZlZC5cblxuUGVvcGxlIENvdW50aW5nIGFsc28gYWxsb3dzIHlvdSB0byBhbmFseXNlIGhvdyB3ZWxsIGVhY2ggb2YgeW91ciBjYW1wYWlnbnMgaXMgcGVyZm9ybWluZyBvdmVyIHRpbWUgc28gdGhhdCBpZiBvbmUgZG9lcyBub3Qgc2VlbSBlZmZlY3RpdmUgYW55bW9yZSB0aGVuIGl0IGNhbiBlYXNpbHkgYmUgcmVtb3ZlZCBmcm9tIHRoZSBzeXN0ZW0gd2l0aG91dCBjYXVzaW5nIGFueSBkaXNydXB0aW9uIHdpdGggb3RoZXJjYW1wYWlnbnMgcnVubmluZyBhbG9uZ3NpZGUgdGhlbS5cblxuIyMgMikgSG93IHRvIFNjaGVkdWxlIEVtcGxveWVlcyBCYXNlZCBvbiBQZW9wbGUgQ291bnRpbmdcbkNvbXBhbmllcyBhbGxvY2F0ZSBhIGJpZyBidWRnZXQgZm9yIHRoZSBsYWJvdXIgcmVzb3VyY2VzLCB0aHVzIGFuIG9wdGltYWwgdXNlIGlzIGNyaXRpY2FsIGZvciB0aGUgYmVzdCByZXR1cm5zLiBJbiBhIGJ1c2luZXNzIHdoZXJlIHlvdSB3ZWxjb21lIGJpZyBjcm93ZHMsIHN1Y2ggYXMgYSByZXRhaWxlciwgYWlycG9ydCwgb3IgYSBtYWxsLCBpdCBtYWtlcyBtb3JlIHNlbnNlIHRvIGFsbG9jYXRlIGVtcGxveWVlcyBhY2NvcmRpbmcgdG8gdGhlIG51bWJlciBvZiBwZW9wbGUuXG4hW251bWJlcm9mYXJyaXZhbHMucG5nXSgvdXBsb2Fkcy9udW1iZXJvZmFycml2YWxzX2ViNDE5MzkxZTEucG5nKVxuXG5UaGUgZmlndXJlIGFib3ZlIGZyb20gQXJpYWRuZeKAmXMgZGFzaGJvYXJkIHNob3dzIHRoZSBudW1iZXIgb2YgYXJyaXZhbHMgYnkgZGF5IGFuZCBob3VyIGZvciBhIHdlZWsuIFRoZSBoaWdoZXN0IG51bWJlciBvZiBwZW9wbGUgaXMgc2VlbiBvbiBTYXR1cmRheSBmcm9tIDExOjAwIHRvIDE2OjAwLiBUbyBjb252ZXJ0IHRoZWlyIHZpc2l0b3JzIGludG8gY3VzdG9tZXJzIGFuZCBrZWVwIHRoZSBjdXN0b21lciBzYXRpc2ZhY3Rpb24gaGlnaCwgaXQgbWFrZXMgbW9yZSBzZW5zZSB0byBhbGxvY2F0ZSBtb3JlIHN0YWZmIG9uIHRoaXMgdGltZSBwZXJpb2QuIEFuZCBhbm90aGVyIHN0cmF0ZWd5IHdvdWxkIGJlIHRvIHNjaGVkdWxlIGxlc3MgZW1wbG95ZWVzIGZvciB0aGUgbGFzdCBob3VycyBvZiB0aGUgZGF5cyBzaW5jZSB0aGUgbGVhc3QgY3VzdG9tZXJzIGNvbWUgYXQgdGhhdCB0aW1lLlxuXG5BY2NvcmRpbmcgdG8gdGhlIHBhcGVyIOKAnEN1c3RvbWVyIHNhdGlzZmFjdGlvbiBhbmQgcmV0YWlsIHNhbGVzIHBlcmZvcm1hbmNlOiBhbiBlbXBpcmljYWwgaW52ZXN0aWdhdGlvbuKAnSBmcm9tIE1pZ3VlbCBJLiBHw7NtZXogZXQgYWwuLCBjdXN0b21lciBzYXRpc2ZhY3Rpb24gaGFzIGEgaHVnZSBlZmZlY3Qgb24gc2FsZXMgb2YgcmV0YWlsZXJzLiBXaGlsZSBhIHNtYWxsIGluY3JlYXNlIGluIGN1c3RvbWVyIHNhdGlzZmFjdGlvbiBkb2VzIG5vdCBhZmZlY3QgbXVjaCB0aGUgc2FsZXMgb2YgYSB0b3AtcGVyZm9ybWluZyBzdG9yZSAoMC41IGluY3JlYXNlIGluIGN1c3RvbWVyIHNhdGlzZmFjdGlvbiBjb3JyZXNwb25kcyB0byBhcm91bmQgMC4yIGluY3JlYXNlIGluIHNhbGVzL20yKSwgaXQgaW5jcmVhc2VzIHRoZSBzYWxlcyBvZiBhIGxvdy1wZXJmb3JtaW5nIHN0b3JlIG11Y2ggbW9yZSAoMC41IHBlcmNlbnQgaW5jcmVhc2UgaW4gY3VzdG9tZXIgc2F0aXNmYWN0aW9uIGluY3JlYXNlcyB0aGUgc2FsZXMvbTIgYnkgYXJvdW5kIDMlKS5cblxuVGhlIHJlc3VsdHMgYXJlIGV2ZW4gbW9yZSBzaWduaWZpY2FudCBpbiB0aGUgYXZpYXRpb24gaW5kdXN0cnkuIFRoZSBzdHVkeSDigJhUaGUgSW1wYWN0IG9mIEFpcnBvcnQgU2VydmljZXNjYXBlIG9uIFBhc3NlbmdlcnPigJkgU2F0aXNmYWN0aW9u4oCZIGZvdW5kIHRoYXQgcGFzc2VuZ2VycyB3aG8gaGF2ZSBhIHBvc2l0aXZlIGFpcnBvcnQgZXhwZXJpZW5jZSBzcGVuZCA0NSUgbW9yZSBtb25leSB3aGlsZSBpbiB0aGUgYWlycG9ydCB0aGFuIGRpc2FwcG9pbnRlZCBwYXNzZW5nZXJzLlxuXG5QcmFrdGlrZXIsIGEgY2xpZW50IG9mIEFyaWFkbmUsIGhhdmUgc2hhcmVkIHRoYXQgdGhleSBoYXZlIGluY3JlYXNlZCB0aGVpciBzYWxlcyByZXZlbnVlIGJ5IDMgTWlsbGlvbiBFdXJvcyB0aGFua3MgdG8gQXJpYWRuZeKAmXMgZW1wbG95ZWUgc2NoZWR1bGluZyBzb2x1dGlvbi5cblxuIyMgMykgSG93IHRvIEFkanVzdCBPcGVuaW5nL0Nsb3NpbmcgSG91cnNcblRoaXMgcG9pbnQgaXMgc2ltaWxhciB0byB0aGUgcHJldmlvdXMgcG9pbnQuIElmIHRoZSBudW1iZXIgb2YgdmlzaXRvcnMgZG8gbm90IGp1c3RpZnkgeW91ciBjb3N0cyBmb3Iga2VlcGluZyB5b3VyIGJ1c2luZXNzIG9wZW4sIHRoZW4geW91IG1pZ2h0IGNvbnNpZGVyIG9wZW5pbmcgYXQgYSBsYXRlciBob3VyLCBvciBjbG9zaW5nIHNvb25lciB0aGFuIHlvdXIgYXZlcmFnZS5cblxuIVtvcGVuLmpwZ10oL3VwbG9hZHMvb3Blbl8yODBmNDBiZjVlLmpwZylcblxuVGhlIGNvc3QgZm9yIGFuIGhvdXIgbWlnaHQgbm90IGJlIG11Y2ggZm9yIGEgc2luZ2xlIGRheSwgaG93ZXZlciwgaXQgcmVhY2hlcyB0byBodWdlIGFtb3VudHMgd2hlbiB5b3UgZmFjdG9yIGl0IGZvciBhIG1vbnRoIG9yIGEgeWVhci5cblxuIyMgNCkgSG93IHRvIENhbGN1bGF0ZSBDb252ZXJzaW9uIFJhdGUgJiBXaHkgSXMgSXQgSW1wb3J0YW50XG5cbkEgY29udmVyc2lvbiByYXRpbyBpcyB0aGUgcHJvcG9ydGlvbiBvZiBjdXN0b21lcnMgd2hvIGVudGVyIHlvdXIgYnJpY2stYW5kLW1vcnRhciBidXNpbmVzcyBhbmQgbGVhdmUgaGF2aW5nIGJvdWdodCBzb21ldGhpbmcuIEl0IGlzIGNhbGN1bGF0ZWQgYnkgZGl2aWRpbmcgdGhlIG51bWJlciBvZiBjdXN0b21lcnMgYnkgdGhlIG51bWJlciBvZiB2aXNpdG9ycy4gVGhpcyBtZWFucyB0aGF0IHRvIGNhbGN1bGF0ZSB0aGUgY29udmVyc2lvbiByYXRpbywgeW91IG5lZWQgdG8gaGF2ZSBhIHBlb3BsZSBjb3VudGluZyBzb2x1dGlvbiwgYW5kIGEgRVJQIHNvZnR3YXJlLlxuXG4hW2VycGRhc2hib2FyZC5wbmddKC91cGxvYWRzL2VycGRhc2hib2FyZF9iYTE5MGYyMWEzLnBuZylcblxuXG5UaGUgYWJvdmUgZmlndXJlIGlzIHRoZSB2aXN1YWxpemF0aW9uIG9mIGNvbnZlcnNpb24gcmF0aW8gZnJvbSBBcmlhZG5l4oCZcyBFUlAtaW50ZWdyYXRlZCBkYXNoYm9hcmQsIHdoaWNoIHNob3dzIG92ZXJhbGwgc3RvcmUgY29udmVyc2lvbiwgY29tcGFyaXNvbnMgb2YgY29udmVyc2lvbiByYXRpb3Mgb2YgcHJvZHVjdHMsIGFuZCBjb21wYXJpc29ucyBvdmVyIHRpbWUuXG5cbkNvbnZlcnNpb24gcmF0aW9zIGhlbHAgbWVhc3VyZSB0aGUgZWZmZWN0IG9mIHlvdXIgY2hhbmdlcywgZXNwZWNpYWxseSBpbiBtYXJrZXRpbmcuIEZvciBleGFtcGxlLCBmb3Igc3RvcmUgbGF5b3V0LCB3aGljaCBtb2RlbCBicmluZ3MgdGhlIG1vc3QgY29udmVyc2lvbnM/IElzIGl0IGdyaWQsIGhlcnJpbmdib25lLCBvciBnZW9tZXRyaWMgbGF5b3V0PyBUaGlzIGNhbiBiZSBhbnN3ZXJlZCB2aWEgY29tcGFyaW5nIHRoZSBjb252ZXJzaW9uIHJhdGlvcyB3aGVuIGRpZmZlcmVudCBsYXlvdXRzIGFyZSBpbXBsZW1lbnRlZC5cblxuU2FtZSBnb2VzIGZvciB0aGUgcHJvZHVjdCBtaXg6IHdoaWNoIHBsYWNlbWVudCBicmluZ3MgaW4gdGhlIG1vc3QgY29udmVyc2lvbnMsIGRvZXMgY3Jvc3Mgc2FsZXMgaW5jcmVhc2Ugd2hlbiBwcm9kdWN0cyBhcmUgcGxhY2VkIGluIGRpZmZlcmVudCBsb2NhdGlvbnM/XG5cbk9yIHdoZW4geW91IGhhdmUgcHJvbW90aW9ucyBvciBydW4gYWR2ZXJ0aXNlbWVudHM/IE1heWJlIHlvdSBicmluZyBpbiBtb3JlIGZvb3RmYWxsIGJ1dCBjb252ZXJzaW9uIGRvZXMgbm90IGRpZmZlciBhcyBleHBlY3RlZC4gTWVhc3VyaW5nIHRoZSBudW1iZXIgb2YgcGVvcGxlLCBzYWxlcyBhbmQgY29udmVyc2lvbiByYXRpb3Mgb3ZlciB0aW1lIGhlbHBzIHdpdGggdGhlc2UgcXVlc3Rpb25zLlxuXG4jIyA1KSBTd2l0Y2ggdG8gRm9vdGZhbGwtQmFzZWQgTGVhc2UgUHJpY2luZ1xuXG5CZSBpdCBhbiBleHBvLCBtYWxsIG9yIGFuIGFpcnBvcnQsIHRoZSBmb290ZmFsbCBtYXR0ZXJzIG1vcmUgdGhhbiB0aGUgc2l6ZSBvciB0aGUgbG9jYXRpb24uIElmIHlvdSB0aGluayBvZiBhbiBleGhpYml0aW9uLCBib290aHMgYXJlIHJlbnRlZCBvdXQgYWNjb3JkaW5nIHRvIHNpemUuIEEgY29tcGxldGUgYmVnaW5uZXIgdG8gdGhlIGV4cG8gbWlnaHQgZmFpbCB0byBnZXQgdGhlIGJlc3QgZm9yIHRoZSBwcmljZSBoZSBpcyBwYXlpbmcgZm9yIChzaW5jZSBhbGwgdGhlIGJvb3RocyB3aXRoIHRoZSBzYW1lIHNpemUgYXJlIG1vcmUgb3IgbGVzcyB0aGUgc2FtZSBwcmljZSksIGFuZCBiZSBkaXNhcHBvaW50ZWQgYXQgdGhlIGVuZC4gQSBiZXR0ZXIgcHJpY2luZyB3b3VsZCBiZSBhY2NvcmRpbmcgdG8gdGhlIG51bWJlciBvZiBwYXNzZXJzLWJ5LiBNb3JlIHBhc3NlcnMtYnkgbWVhbiBtb3JlIHBlb3BsZSBzdG9wcGluZyBieSB0aGUgZXhoaWJpdG9yLCB3aGljaCBpcyBhbHNvIG1vcmUgbGVhZHMsIGFuZCBldmVudHVhbGx5IG1vcmUgY3VzdG9tZXJzIGZvciB0aGUgZXhoaWJpdG9yLCB3aGljaCBpcyB3aHkgdGhlIGV4aGliaXRvciBjb21lcyB0byBhbmQgcGF5cyBmb3IgdGhlIGV4aGliaXRpb24gaW4gdGhlIGZpcnN0IHBsYWNlLlxuXG5UaGUgc2FtZSBzY2VuYXJpbyBoYXBwZW5zIGZvciBvdGhlciBidXNpbmVzc2VzIGFzIHdlbGw6IGEgbWFsbCByZW50aW5nIG91dCBzdG9yZXMgZm9yIGJyYW5kcywgYW4gYWlycG9ydCBsZWFzaW5nIGl0cyBzcGFjZXMgZm9yIHRoZSBjb25jZXNzaW9uYWlyZXMsIGV2ZW4gYSBzdXBlcm1hcmtldCBtaWdodCBwbGFjZSB0aGUgcHJvZHVjdHMgYmFzZWQgb24gdGhlIGZvb3RmYWxsLlxuXG4hW2hlYXRtYXAucG5nXSgvdXBsb2Fkcy9oZWF0bWFwX2I1ZGY0NmNhYjkucG5nKVxuXG5cblRoaXMgbmV3IGxlYXNpbmcgdHlwZSBnaXZlcyBhIGNsZWFyIHVuZGVyc3RhbmRpbmcsIGFuZCBhIHN0cm9uZywgZmFpciBiYXNpcyBmb3IgYm90aCB0aGUgbGFuZGxvcmQgYW5kIHRoZSB0ZW5hbnQuIEluIGEgbWFsbCBvciBleGhpYml0aW9uLCB0aGUgdGVuYW50IGNhbiBuZWdvdGlhdGUgdGhlIGxlYXNlIHByaWNlcyB3aXRoIHRoZSBsYW5kbG9yZCBiYXNlZCBvbiB0aGUgZm9vdGZhbGwsIGFuZCB0cnkgdG8gZHJhdyBpdCBkb3duLCBvciB0aGUgbGFuZGxvcmQgY2FuIHByb3ZlIHRoYXQgdGhlIHByaWNlIGhlL3NoZSBjaGFyZ2VzIGFyZSBqdXN0aWZpZWQgd2l0aCB0aGUgbnVtYmVyIG9mIHBhc3NlcnMtYnkuIEZvciBleGFtcGxlLCBpbiB0aGUgZmlndXJlIGFib3ZlLCBpdCBpcyBzZWVuIGhvdyBlYWNoIHN0b3JlIGluIHRoZSBtYWxsIGNvbXBhcmUgd2l0aCBlYWNoIG90aGVyLlxuXG4jIyA2KSBNaW5pbWl6ZSBRdWV1ZSBUaW1lXG5RdWV1ZXMgY2F1c2UgYSBiaWcgY29zdCBmb3IgbWFueSBpbmR1c3RyaWVzLiBQZW9wbGUgY29tcGxhaW4gYWJvdXQgdGhlIHF1ZXVlcyBpbiB0aGUgYWlycG9ydHMsIGJ1dCBpdCBkb2VzIG5vdCBnZXQgYmV0dGVyIHVuZm9ydHVuYXRlbHkuIFRoZSBjb3N0IGZvciB0aGUgcGFzc2VuZ2VycyBpcyBvYnZpb3VzLCBidXQgd2hhdCBpcyB0aGUgY29zdCB0byB0aGUgYWlycG9ydD8gRnJvbSBBcmlhZG5l4oCZcyBwcm9qZWN0IHdpdGggR2xhc2dvdyBBaXJwb3J0LCBpdCB3YXMgZm91bmQgdGhhdCBmb3IgZXZlcnkgbWludXRlIHBlb3BsZSBhcmUgZHdlbGxpbmcgYW5kIG5vdCBxdWV1aW5nLCB0aGUgYWlycG9ydCBoYXMgYW4gYWRkaXRpb25hbCAkNTAwMDAgcmV2ZW51ZSBpbmNyZWFzZSBwZXIgeWVhci5cblxuIVthaXJwb3J0cXVldWUuanBnXSgvdXBsb2Fkcy9haXJwb3J0cXVldWVfNGI4ODNhZGJlZC5qcGcpXG5cblF1ZXVlcyBjYXVzZSBhIGJpZyBjb3N0IGZvciBtYW55IGluZHVzdHJpZXMuIFBlb3BsZSBjb21wbGFpbiBhYm91dCB0aGUgcXVldWVzIGluIHRoZSBhaXJwb3J0cywgYnV0IGl0IGRvZXMgbm90IGdldCBiZXR0ZXIgdW5mb3J0dW5hdGVseS4gVGhlIGNvc3QgZm9yIHRoZSBwYXNzZW5nZXJzIGlzIG9idmlvdXMsIGJ1dCB3aGF0IGlzIHRoZSBjb3N0IHRvIHRoZSBhaXJwb3J0PyBGcm9tIEFyaWFkbmXigJlzIHByb2plY3Qgd2l0aCBHbGFzZ293IEFpcnBvcnQsIGl0IHdhcyBmb3VuZCB0aGF0IGZvciBldmVyeSBtaW51dGUgcGVvcGxlIGFyZSBkd2VsbGluZyBhbmQgbm90IHF1ZXVpbmcsIHRoZSBhaXJwb3J0IGhhcyBhbiBhZGRpdGlvbmFsICQ1MDAwMCByZXZlbnVlIGluY3JlYXNlIHBlciB5ZWFyLlxuXG4hW2FsZXJ0cy5wbmddKC91cGxvYWRzL2FsZXJ0c18yN2EwZjBkNjVhLnBuZylcblxuVGhlIGFsZXJ0cyBjYW4gYmUgdGhyb3VnaCB0aGUgY29tbXVuaWNhdGlvbiBjaGFubmVsIGJldHdlZW4gdGhlIGVtcGxveWVlcywgaXQgaXMgcG9zc2libGUgdG8gcHVzaCBhbGVydHMgdGhyb3VnaCBlbWFpbCwgTWljcm9zb2Z0IFRlYW1zLCBXaGF0c0FwcCwgU2xhY2sgYW5kIG1vcmUuXG5cbiMjIFdoYXQgc2hvdWxkIHlvdSBsb29rIGZvciBpbiBhIFBlb3BsZSBDb3VudGluZyBzb2x1dGlvbj9cblxuKipBY2N1cmFjeTogKipIb3cgYWNjdXJhdGUgaXMgdGhlIGRhdGE/IElzIGl0IGdvb2QgZW5vdWdoIHRvIGNvdW50IHBlb3BsZSBhY2N1cmF0ZWx5IGFuZCBjb25zaXN0ZW50bHkgbW9zdCBvZiB0aGUgdGltZSwgb3IgZG8geW91IGhhdmUgdG8gY29ycmVjdCBmb3IgZXJyb3JzIGFsbCB0aGUgdGltZT9cbioqQ29zdDogKipIb3cgbXVjaCB3aWxsIGl0IGNvc3QgdG8gaW1wbGVtZW50IGEgUGVvcGxlIENvdW50aW5nIHNvbHV0aW9uIGludG8geW91ciBidXNpbmVzcyBwcm9jZXNzZXM/IElmIHlvdXIgYnVkZ2V0IGlzbid0IHVubGltaXRlZCwgdGhlbiBlbnN1cmUgdGhhdCB5b3UgZ2V0IHRoZSBiZXN0IGFuZCB0aGUgbW9zdCB3aXRoIHBlb3BsZSBjb3VudGluZyB3aXRoIHRoZSBidWRnZXQgeW91IGludmVzdCBpbi5cbioqUHJpdmFjeSBDb21wbGlhbmNlOiAqKklzIHRoZSBzb2x1dGlvbiBpbiBsaW5lIHdpdGggcHJpdmFjeSByZWd1bGF0aW9ucyBpbiB5b3VyIGNvdW50cnk/IERvZXMgaXQgcHJvdmUgdG8gYmUgYW5vbnltb3VzIGFuZCBub3QgdmlvbGF0ZSB5b3VyIHZpc2l0b3JzJyBwcml2YWN5P1xuKipFYXNlIE9mIEluc3RhbGxhdGlvbiBBbmQgVXNlOioqIERvZXMgaXQgdGFrZSBhbnkgc3BlY2lhbCBrbm93bGVkZ2UgZnJvbSBhbiBJVCBleHBlcnQgYmVmb3JlIGluc3RhbGxpbmcgdGhpcyBwYXJ0aWN1bGFyIHByb2R1Y3QsIG9yIGlzIGl0IGEgc2ltcGxlIHBsdWctYW5kLXBsYXkgcHJvZHVjdD9cblxuIyBDb25jbHVzaW9uXG5JIGhhdmUgbGlzdGVkIHNvbWUgd2F5cyB0byBnZXQgdGhlIGJlc3Qgb3V0IG9mIHBlb3BsZSBjb3VudGluZyBzb2x1dGlvbnMuIFRoZXJlIGFyZSBvZiBjb3Vyc2UgbW9yZSB3YXlzIGFuZCB1c2UgY2FzZXMgd2hpY2ggeW91IGNhbiB1c2UgcGVvcGxlIGNvdW50aW5nIGZvciwgaG93ZXZlciwgSSBob3BlIHRoaXMgZ3VpZGUgd291bGQgYmUgYSBnb29kIHN0YXJ0LlxuXG5BcmlhZG5lIGFsc28gb2ZmZXJzIHJlYWwtdGltZSBwZW9wbGUgY291bnRpbmcgc29sdXRpb25zIChhbW9uZyBtYW55IG90aGVyIGFkdmFuY2VkIHNvbHV0aW9ucykgYW5kIGV2ZW4gaGF2ZSBhIGZyZWUgdmVyc2lvbiB3aXRoIG5vIGhhcmR3YXJlLiBBcmlhZG5l4oCZcyBzb2x1dGlvbnMgaGF2ZSBiZWVuIGJlbmNobWFya2VkIG1hbnkgdGltZXMgYnkgaXRzIGNsaWVudHMgYW5kIHByb3ZlZCB0byBiZSBvdmVyIDk1JSBhY2N1cmF0ZS4gVG8gbGVhcm4gbW9yZSBhYm91dCB0aGlzIG9yIGdldCBvbmUgbW9udGgncyBkZW1vIHN1YnNjcmlwdGlvbiBmb3IgZnJlZSwgeW91IGNhbiBib29rIGEgbWVldGluZyB3aXRoIHRoZSB0ZWFtIGhlcmUuIiwiZXhjZXJwdCI6Ii1XaGF0IGFyZSB0aGUgZGlmZmVyZW50IHR5cGVzIG9mIFBlb3BsZSBDb3VudGVycz9cbi1Ib3cgdG8gTWVhc3VyZSAmIENvbXBhcmUgVGhlIFN1Y2Nlc3Mgb2YgRXZlbnRzL0NhbXBhaWduc1xuLUhvdyB0byBTY2hlZHVsZSBFbXBsb3llZXMgQmFzZWQgb24gLVBlb3BsZSBDb3VudGluZ1xuLUhvdyB0byBBZGp1c3QgT3BlbmluZy9DbG9zaW5nIEhvdXJzXG4tSG93IHRvIENhbGN1bGF0ZSBDb252ZXJzaW9uIFJhdGUgJiBXaHkgSXMgSXQgSW1wb3J0YW50XG4tU3dpdGNoIHRvIEZvb3RmYWxsLUJhc2VkIExlYXNlIFByaWNpbmdcbi1NaW5pbWl6ZSBRdWV1ZSBUaW1lXG4tV2hhdCBzaG91bGQgeW91IGxvb2sgZm9yIGluIGEgUGVvcGxlIENvdW50aW5nIHNvbHV0aW9uP1xuLUNvbmNsdXNpb24iLCJjcmVhdGVkQXQiOiIyMDIzLTA1LTI5VDE2OjM4OjQ0LjY0OVoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA1LTI5VDIxOjI1OjI1LjU0MloiLCJwdWJsaXNoZWRBdCI6IjIwMjMtMDUtMjlUMjE6MjU6MjUuNDkxWiIsImltYWdlIjp7ImRhdGEiOnsiaWQiOjE0LCJhdHRyaWJ1dGVzIjp7Im5hbWUiOiJhaXJwb3J0cXVldWUuanBnIiwiYWx0ZXJuYXRpdmVUZXh0IjpudWxsLCJjYXB0aW9uIjpudWxsLCJ3aWR0aCI6NTQwLCJoZWlnaHQiOjM2MCwiZm9ybWF0cyI6eyJzbWFsbCI6eyJleHQiOiIuanBnIiwidXJsIjoiL3VwbG9hZHMvc21hbGxfYWlycG9ydHF1ZXVlXzRiODgzYWRiZWQuanBnIiwiaGFzaCI6InNtYWxsX2FpcnBvcnRxdWV1ZV80Yjg4M2FkYmVkIiwibWltZSI6ImltYWdlL2pwZWciLCJuYW1lIjoic21hbGxfYWlycG9ydHF1ZXVlLmpwZyIsInBhdGgiOm51bGwsInNpemUiOjM2LjE1LCJ3aWR0aCI6NTAwLCJoZWlnaHQiOjMzM30sInRodW1ibmFpbCI6eyJleHQiOiIuanBnIiwidXJsIjoiL3VwbG9hZHMvdGh1bWJuYWlsX2FpcnBvcnRxdWV1ZV80Yjg4M2FkYmVkLmpwZyIsImhhc2giOiJ0aHVtYm5haWxfYWlycG9ydHF1ZXVlXzRiODgzYWRiZWQiLCJtaW1lIjoiaW1hZ2UvanBlZyIsIm5hbWUiOiJ0aHVtYm5haWxfYWlycG9ydHF1ZXVlLmpwZyIsInBhdGgiOm51bGwsInNpemUiOjkuOTIsIndpZHRoIjoyMzQsImhlaWdodCI6MTU2fX0sImhhc2giOiJhaXJwb3J0cXVldWVfNGI4ODNhZGJlZCIsImV4dCI6Ii5qcGciLCJtaW1lIjoiaW1hZ2UvanBlZyIsInNpemUiOjQxLjk0LCJ1cmwiOiIvdXBsb2Fkcy9haXJwb3J0cXVldWVfNGI4ODNhZGJlZC5qcGciLCJwcmV2aWV3VXJsIjpudWxsLCJwcm92aWRlciI6ImxvY2FsIiwicHJvdmlkZXJfbWV0YWRhdGEiOm51bGwsImNyZWF0ZWRBdCI6IjIwMjMtMDUtMjlUMTY6NTU6MTQuNTcyWiIsInVwZGF0ZWRBdCI6IjIwMjMtMDUtMjlUMTY6NTU6MTQuNTcyWiJ9fX0sImF1dGhvciI6eyJkYXRhIjp7ImlkIjoyLCJhdHRyaWJ1dGVzIjp7ImZpcnN0bmFtZSI6IkdvdmFydGhhbiIsImxhc3RuYW1lIjoiTmF0YXJhamFuIiwidXNlcm5hbWUiOm51bGwsInByZWZlcmVkTGFuZ3VhZ2UiOm51bGwsImNyZWF0ZWRBdCI6IjIwMjMtMDUtMTZUMDg6MzQ6NDguMTM2WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDUtMTZUMDk6MDg6MjUuMTQ5WiJ9fX19fV0sIm1ldGEiOnsicGFnaW5hdGlvbiI6eyJwYWdlIjoxLCJwYWdlU2l6ZSI6MjAsInBhZ2VDb3VudCI6MSwidG90YWwiOjExfX19","status":200,"tags":["/[lang]/blog/page"],"url":"https://strapi.ariadne.inc/api/posts?populate=image%2Cauthor&pagination%5BpageSize%5D=20&pagination%5Bpage%5D=1&sort=id%3Adesc"},"revalidate":31536000}