"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n/* harmony import */ var _formatjs_intl_localematcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @formatjs/intl-localematcher */ \"(middleware)/./node_modules/@formatjs/intl-localematcher/lib/index.js\");\n/* harmony import */ var _i18n_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./i18n-config */ \"(middleware)/./i18n-config.ts\");\n\n\nconst Negotiator = __webpack_require__(/*! negotiator */ \"(middleware)/./node_modules/negotiator/index.js\");\n\nfunction getLocale(request) {\n    // Negotiator expects plain object so we need to transform headers\n    const negotiatorHeaders = {};\n    request.headers.forEach((value, key)=>negotiatorHeaders[key] = value);\n    // Use negotiator and intl-localematcher to get best locale\n    let languages = new Negotiator({\n        headers: negotiatorHeaders\n    }).languages();\n    // @ts-ignore locales are readonly\n    const locales = _i18n_config__WEBPACK_IMPORTED_MODULE_2__.i18n.locales;\n    return (0,_formatjs_intl_localematcher__WEBPACK_IMPORTED_MODULE_1__.match)(languages, locales, _i18n_config__WEBPACK_IMPORTED_MODULE_2__.i18n.defaultLocale);\n}\nfunction middleware(request) {\n    const pathname = request.nextUrl.pathname;\n    // // `/_next/` and `/api/` are ignored by the watcher, but we need to ignore files in `public` manually.\n    // // If you have one\n    if (pathname.startsWith(\"/images/\")) {\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].next();\n    }\n    // Check if there is any supported locale in the pathname\n    const pathnameIsMissingLocale = _i18n_config__WEBPACK_IMPORTED_MODULE_2__.i18n.locales.every((locale)=>!pathname.startsWith(`/${locale}/`) && pathname !== `/${locale}`);\n    // Redirect if there is no locale\n    if (pathnameIsMissingLocale) {\n        const locale = getLocale(request);\n        // e.g. incoming request is /products\n        // The new URL is now /en-US/products\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(`/${locale}/${pathname}`, request.url));\n    }\n}\nconst config = {\n    // Matcher ignoring `/_next/` and `/api/`\n    matcher: [\n        \"/((?!api|_next/static|_next/image|favicon.ico).*)\"\n    ]\n} // export const config = { matcher: [\"/dashboard\"] }\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbWlkZGxld2FyZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0RDtBQUNPO0FBQ25FLE1BQU1HLGFBQWFDLG1CQUFPQSxDQUFDLG1FQUFZO0FBQ0g7QUFFcEMsU0FBU0UsVUFBVUMsT0FBb0I7SUFDckMsa0VBQWtFO0lBQ2xFLE1BQU1DLG9CQUE0QyxDQUFDO0lBQ25ERCxRQUFRRSxPQUFPLENBQUNDLE9BQU8sQ0FBQyxDQUFDQyxPQUFPQyxNQUFTSixpQkFBaUIsQ0FBQ0ksSUFBSSxHQUFHRDtJQUVsRSwyREFBMkQ7SUFDM0QsSUFBSUUsWUFBWSxJQUFJVixXQUFXO1FBQUVNLFNBQVNEO0lBQWtCLEdBQUdLLFNBQVM7SUFDeEUsa0NBQWtDO0lBQ2xDLE1BQU1DLFVBQW9CVCw4Q0FBSUEsQ0FBQ1MsT0FBTztJQUN0QyxPQUFPWixtRUFBV0EsQ0FBQ1csV0FBV0MsU0FBU1QsOENBQUlBLENBQUNVLGFBQWE7QUFDM0Q7QUFFTyxTQUFTQyxXQUFXVCxPQUFvQjtJQUM3QyxNQUFNVSxXQUFXVixRQUFRVyxPQUFPLENBQUNELFFBQVE7SUFFekMseUdBQXlHO0lBQ3pHLHFCQUFxQjtJQUdyQixJQUFJQSxTQUFTRSxVQUFVLENBQUMsYUFBWTtRQUNsQyxPQUFPbkIsa0ZBQVlBLENBQUNvQixJQUFJO0lBQzFCO0lBR0EseURBQXlEO0lBQ3pELE1BQU1DLDBCQUEwQmhCLDhDQUFJQSxDQUFDUyxPQUFPLENBQUNRLEtBQUssQ0FDaEQsQ0FBQ0MsU0FBVyxDQUFDTixTQUFTRSxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUVJLE9BQU8sQ0FBQyxDQUFDLEtBQUtOLGFBQWEsQ0FBQyxDQUFDLEVBQUVNLE9BQU8sQ0FBQztJQUc5RSxpQ0FBaUM7SUFDakMsSUFBSUYseUJBQXlCO1FBQzNCLE1BQU1FLFNBQVNqQixVQUFVQztRQUV6QixxQ0FBcUM7UUFDckMscUNBQXFDO1FBQ3JDLE9BQU9QLGtGQUFZQSxDQUFDd0IsUUFBUSxDQUFDLElBQUlDLElBQUksQ0FBQyxDQUFDLEVBQUVGLE9BQU8sQ0FBQyxFQUFFTixTQUFTLENBQUMsRUFBRVYsUUFBUW1CLEdBQUc7SUFDNUU7QUFDRjtBQUVPLE1BQU1DLFNBQVM7SUFDcEIseUNBQXlDO0lBQ3pDQyxTQUFTO1FBQUM7S0FBb0Q7QUFDaEUsRUFFQSxvREFBb0Q7Q0FGbkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbWlkZGxld2FyZS50cz80MjJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSwgdHlwZSBOZXh0UmVxdWVzdCB9IGZyb20gXCJuZXh0L3NlcnZlclwiXG5pbXBvcnQgeyBtYXRjaCBhcyBtYXRjaExvY2FsZSB9IGZyb20gXCJAZm9ybWF0anMvaW50bC1sb2NhbGVtYXRjaGVyXCJcbmNvbnN0IE5lZ290aWF0b3IgPSByZXF1aXJlKFwibmVnb3RpYXRvclwiKVxuaW1wb3J0IHsgaTE4biB9IGZyb20gXCIuL2kxOG4tY29uZmlnXCJcblxuZnVuY3Rpb24gZ2V0TG9jYWxlKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcbiAgLy8gTmVnb3RpYXRvciBleHBlY3RzIHBsYWluIG9iamVjdCBzbyB3ZSBuZWVkIHRvIHRyYW5zZm9ybSBoZWFkZXJzXG4gIGNvbnN0IG5lZ290aWF0b3JIZWFkZXJzOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge31cbiAgcmVxdWVzdC5oZWFkZXJzLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IChuZWdvdGlhdG9ySGVhZGVyc1trZXldID0gdmFsdWUpKVxuXG4gIC8vIFVzZSBuZWdvdGlhdG9yIGFuZCBpbnRsLWxvY2FsZW1hdGNoZXIgdG8gZ2V0IGJlc3QgbG9jYWxlXG4gIGxldCBsYW5ndWFnZXMgPSBuZXcgTmVnb3RpYXRvcih7IGhlYWRlcnM6IG5lZ290aWF0b3JIZWFkZXJzIH0pLmxhbmd1YWdlcygpXG4gIC8vIEB0cy1pZ25vcmUgbG9jYWxlcyBhcmUgcmVhZG9ubHlcbiAgY29uc3QgbG9jYWxlczogc3RyaW5nW10gPSBpMThuLmxvY2FsZXNcbiAgcmV0dXJuIG1hdGNoTG9jYWxlKGxhbmd1YWdlcywgbG9jYWxlcywgaTE4bi5kZWZhdWx0TG9jYWxlKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbWlkZGxld2FyZShyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICBjb25zdCBwYXRobmFtZSA9IHJlcXVlc3QubmV4dFVybC5wYXRobmFtZVxuXG4gIC8vIC8vIGAvX25leHQvYCBhbmQgYC9hcGkvYCBhcmUgaWdub3JlZCBieSB0aGUgd2F0Y2hlciwgYnV0IHdlIG5lZWQgdG8gaWdub3JlIGZpbGVzIGluIGBwdWJsaWNgIG1hbnVhbGx5LlxuICAvLyAvLyBJZiB5b3UgaGF2ZSBvbmVcbiAgXG4gIFxuICBpZiAocGF0aG5hbWUuc3RhcnRzV2l0aChcIi9pbWFnZXMvXCIpKXtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLm5leHQoKTtcbiAgfVxuXG5cbiAgLy8gQ2hlY2sgaWYgdGhlcmUgaXMgYW55IHN1cHBvcnRlZCBsb2NhbGUgaW4gdGhlIHBhdGhuYW1lXG4gIGNvbnN0IHBhdGhuYW1lSXNNaXNzaW5nTG9jYWxlID0gaTE4bi5sb2NhbGVzLmV2ZXJ5KFxuICAgIChsb2NhbGUpID0+ICFwYXRobmFtZS5zdGFydHNXaXRoKGAvJHtsb2NhbGV9L2ApICYmIHBhdGhuYW1lICE9PSBgLyR7bG9jYWxlfWBcbiAgKVxuXG4gIC8vIFJlZGlyZWN0IGlmIHRoZXJlIGlzIG5vIGxvY2FsZVxuICBpZiAocGF0aG5hbWVJc01pc3NpbmdMb2NhbGUpIHtcbiAgICBjb25zdCBsb2NhbGUgPSBnZXRMb2NhbGUocmVxdWVzdClcblxuICAgIC8vIGUuZy4gaW5jb21pbmcgcmVxdWVzdCBpcyAvcHJvZHVjdHNcbiAgICAvLyBUaGUgbmV3IFVSTCBpcyBub3cgL2VuLVVTL3Byb2R1Y3RzXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKGAvJHtsb2NhbGV9LyR7cGF0aG5hbWV9YCwgcmVxdWVzdC51cmwpKVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XG4gIC8vIE1hdGNoZXIgaWdub3JpbmcgYC9fbmV4dC9gIGFuZCBgL2FwaS9gXG4gIG1hdGNoZXI6IFtcIi8oKD8hYXBpfF9uZXh0L3N0YXRpY3xfbmV4dC9pbWFnZXxmYXZpY29uLmljbykuKilcIl0sXG59XG5cbi8vIGV4cG9ydCBjb25zdCBjb25maWcgPSB7IG1hdGNoZXI6IFtcIi9kYXNoYm9hcmRcIl0gfVxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsIm1hdGNoIiwibWF0Y2hMb2NhbGUiLCJOZWdvdGlhdG9yIiwicmVxdWlyZSIsImkxOG4iLCJnZXRMb2NhbGUiLCJyZXF1ZXN0IiwibmVnb3RpYXRvckhlYWRlcnMiLCJoZWFkZXJzIiwiZm9yRWFjaCIsInZhbHVlIiwia2V5IiwibGFuZ3VhZ2VzIiwibG9jYWxlcyIsImRlZmF1bHRMb2NhbGUiLCJtaWRkbGV3YXJlIiwicGF0aG5hbWUiLCJuZXh0VXJsIiwic3RhcnRzV2l0aCIsIm5leHQiLCJwYXRobmFtZUlzTWlzc2luZ0xvY2FsZSIsImV2ZXJ5IiwibG9jYWxlIiwicmVkaXJlY3QiLCJVUkwiLCJ1cmwiLCJjb25maWciLCJtYXRjaGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ })

});